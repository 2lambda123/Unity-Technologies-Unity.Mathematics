//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using static Unity.Mathematics.math;
using Burst.Compiler.IL.Tests;

namespace Unity.Mathematics.Tests
{
    [TestFixture]
    public class TestDouble2x2
    {
        [TestCompiler]
        public static void double2x2_zero()
        {
            TestUtils.AreEqual(double2x2.zero.c0.x, 0.0);
            TestUtils.AreEqual(double2x2.zero.c0.y, 0.0);
            TestUtils.AreEqual(double2x2.zero.c1.x, 0.0);
            TestUtils.AreEqual(double2x2.zero.c1.y, 0.0);
        }

        [TestCompiler]
        public static void double2x2_identity()
        {
            TestUtils.AreEqual(double2x2.identity.c0.x, 1.0);
            TestUtils.AreEqual(double2x2.identity.c0.y, 0.0);
            TestUtils.AreEqual(double2x2.identity.c1.x, 0.0);
            TestUtils.AreEqual(double2x2.identity.c1.y, 1.0);
        }

        [TestCompiler]
        public static void double2x2_operator_equal_wide_wide()
        {
            double2x2 a0 = double2x2(331.74411336134381, -417.68328280825324, -438.45087620171296, -57.990659979167674);
            double2x2 b0 = double2x2(-426.58283277348744, 431.34453149854414, 263.33917987688403, -309.39192905528091);
            bool2x2 r0 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            double2x2 a1 = double2x2(-183.11340030613979, 72.322805676759572, -292.70611562053955, -181.37693437439248);
            double2x2 b1 = double2x2(391.19957441426789, -468.23727748740339, -389.91158145941404, -192.67202505500615);
            bool2x2 r1 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            double2x2 a2 = double2x2(43.847759028825749, 481.28738020420417, 258.42531287783072, 352.58044759956215);
            double2x2 b2 = double2x2(-8.9501826804830671, -339.08699599797228, 104.67790680037717, -443.50479933410173);
            bool2x2 r2 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            double2x2 a3 = double2x2(70.853262219044041, -41.08313061719906, -501.14396285505217, 469.41773794098651);
            double2x2 b3 = double2x2(358.64011566650129, -415.74920602131135, -141.96963483745679, 379.13005107414449);
            bool2x2 r3 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_equal_wide_scalar()
        {
            double2x2 a0 = double2x2(327.10191431972282, 440.46724745280449, -443.74519440333603, 325.54625597854431);
            double b0 = (342.44057504387604);
            bool2x2 r0 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            double2x2 a1 = double2x2(435.37174793489828, -398.43499369101369, 377.06661551867921, 445.50211235764539);
            double b1 = (58.382070330149531);
            bool2x2 r1 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            double2x2 a2 = double2x2(-17.79271484249864, -350.23152200795312, 450.23677775367946, 14.983312852207291);
            double b2 = (-92.372576994994915);
            bool2x2 r2 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            double2x2 a3 = double2x2(-504.42695665006852, 454.70332476808846, 289.29169024587225, 356.9315957300978);
            double b3 = (412.48854870930711);
            bool2x2 r3 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_equal_scalar_wide()
        {
            double a0 = (430.78112884554139);
            double2x2 b0 = double2x2(-434.72746225573468, 103.73032074036553, -263.03657090991578, -224.56018291439869);
            bool2x2 r0 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            double a1 = (204.11080298391676);
            double2x2 b1 = double2x2(196.56822476003697, -424.75656743755405, 467.45050332855919, -45.433633110222218);
            bool2x2 r1 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            double a2 = (138.19161063907279);
            double2x2 b2 = double2x2(181.06193717804831, -449.21580073294035, -335.15445700993507, -77.466203964066779);
            bool2x2 r2 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            double a3 = (107.90240125912351);
            double2x2 b3 = double2x2(-330.9516920200324, -115.29893904332954, 244.52287136973951, -481.47620724210338);
            bool2x2 r3 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_not_equal_wide_wide()
        {
            double2x2 a0 = double2x2(19.253994712258645, 121.33544045376379, 468.30967615000418, -212.3654521500531);
            double2x2 b0 = double2x2(-249.06633507882538, -19.04659057550441, 323.62254896928675, 294.94198026086292);
            bool2x2 r0 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            double2x2 a1 = double2x2(-410.63349337625948, 507.53425359517996, 52.201180720795492, -319.64238682372604);
            double2x2 b1 = double2x2(-492.46095990224785, -166.48327048424784, 421.19530482832124, 87.662903588108179);
            bool2x2 r1 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            double2x2 a2 = double2x2(-448.90629670066119, 255.3703111407209, -70.462687286763753, -18.913782366976989);
            double2x2 b2 = double2x2(193.87513670412602, -279.28983200680921, 158.5136307023995, 426.63510413963115);
            bool2x2 r2 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            double2x2 a3 = double2x2(-131.6240962164589, 288.07495202127609, 290.71794785685745, 191.28321585025787);
            double2x2 b3 = double2x2(-404.54781813386262, 480.74048040841728, -184.48030838020162, 355.44509212833134);
            bool2x2 r3 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_not_equal_wide_scalar()
        {
            double2x2 a0 = double2x2(-418.02227206622354, 231.44822632123169, -469.47851083682781, -94.974084183096011);
            double b0 = (-206.33659205508258);
            bool2x2 r0 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            double2x2 a1 = double2x2(-376.08437770236486, 492.92776774471986, -91.333830160709965, 80.418608941332764);
            double b1 = (-428.11901088623284);
            bool2x2 r1 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            double2x2 a2 = double2x2(-124.3909161670091, 353.96103851588487, 170.98932441090665, -494.89575242199737);
            double b2 = (-409.29052205071343);
            bool2x2 r2 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            double2x2 a3 = double2x2(181.01510843123083, 324.90474930634014, 365.8997806822415, 86.0467493934774);
            double b3 = (-180.17698510930734);
            bool2x2 r3 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_not_equal_scalar_wide()
        {
            double a0 = (357.34340898941434);
            double2x2 b0 = double2x2(192.97637400076553, -323.1933154180615, -25.125236284511743, -270.50307739456326);
            bool2x2 r0 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            double a1 = (-454.42681977452094);
            double2x2 b1 = double2x2(-458.81890103724731, -274.53837049870674, 127.64221078140758, -43.887720366887606);
            bool2x2 r1 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            double a2 = (-179.47230180514617);
            double2x2 b2 = double2x2(498.28768920259904, -333.81438866900953, -169.48795779491212, -146.25878126279395);
            bool2x2 r2 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            double a3 = (-33.0286543523095);
            double2x2 b3 = double2x2(156.74361498502253, -285.2065595524416, -10.882838969529985, 259.28342473659825);
            bool2x2 r3 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_less_wide_wide()
        {
            double2x2 a0 = double2x2(487.82488011188104, -508.92173480844207, 53.876066948229436, 443.78694531125336);
            double2x2 b0 = double2x2(453.09734770893, -123.83057814642348, 492.75013636646338, 434.4634313222316);
            bool2x2 r0 = bool2x2(false, true, true, false);
            TestUtils.AreEqual(a0 < b0, r0);

            double2x2 a1 = double2x2(-81.078602590169112, 103.16550521886234, -496.19975470760824, 30.001322044991525);
            double2x2 b1 = double2x2(-402.46478933955768, -480.75231598352656, 317.30066051953509, 175.82104428849232);
            bool2x2 r1 = bool2x2(false, false, true, true);
            TestUtils.AreEqual(a1 < b1, r1);

            double2x2 a2 = double2x2(490.88452862709971, 485.69708298412013, -360.6310734043974, -442.65436169256191);
            double2x2 b2 = double2x2(301.86634244670461, 77.7766850356835, -188.5760563298017, 479.33786819844408);
            bool2x2 r2 = bool2x2(false, false, true, true);
            TestUtils.AreEqual(a2 < b2, r2);

            double2x2 a3 = double2x2(-310.85801544359794, -142.11604244174254, -131.92170983735554, -279.9177059046541);
            double2x2 b3 = double2x2(-393.34224600034872, 21.696369419664279, 151.5708139648525, -115.47818117750722);
            bool2x2 r3 = bool2x2(false, true, true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_less_wide_scalar()
        {
            double2x2 a0 = double2x2(18.15358901869206, -409.34645695674533, 180.78649028613529, -185.15496572533385);
            double b0 = (152.320865940452);
            bool2x2 r0 = bool2x2(true, true, false, true);
            TestUtils.AreEqual(a0 < b0, r0);

            double2x2 a1 = double2x2(228.26473127504096, 265.74384534812714, -307.54556694046858, 493.12318371847425);
            double b1 = (124.1257570367892);
            bool2x2 r1 = bool2x2(false, false, true, false);
            TestUtils.AreEqual(a1 < b1, r1);

            double2x2 a2 = double2x2(36.373661296616206, 85.934578220329513, -89.371177953375138, -36.894802825942065);
            double b2 = (131.67983132772144);
            bool2x2 r2 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a2 < b2, r2);

            double2x2 a3 = double2x2(-491.25716256129425, -320.66100302369381, 424.3283214160839, -392.51732057729612);
            double b3 = (-193.74187311611223);
            bool2x2 r3 = bool2x2(true, true, false, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_less_scalar_wide()
        {
            double a0 = (416.68128915162822);
            double2x2 b0 = double2x2(-105.38907938142728, -389.249608459533, 408.84688944781522, -87.039535324573308);
            bool2x2 r0 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a0 < b0, r0);

            double a1 = (268.69133508796403);
            double2x2 b1 = double2x2(-470.20163295706811, 271.31567419288479, -170.32271750752011, -156.5984128250733);
            bool2x2 r1 = bool2x2(false, true, false, false);
            TestUtils.AreEqual(a1 < b1, r1);

            double a2 = (-0.288699388638463);
            double2x2 b2 = double2x2(72.090836796951862, -54.429979111268153, 191.60324797015789, 370.54399149983374);
            bool2x2 r2 = bool2x2(true, false, true, true);
            TestUtils.AreEqual(a2 < b2, r2);

            double a3 = (283.23240412549694);
            double2x2 b3 = double2x2(-362.76201956475245, -145.50098688225307, 315.12990894686891, 340.82956067697592);
            bool2x2 r3 = bool2x2(false, false, true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_greater_wide_wide()
        {
            double2x2 a0 = double2x2(-188.03303131276419, 234.30020367088741, -56.305944230549926, 240.95838248029281);
            double2x2 b0 = double2x2(-17.400830992218516, -59.539615897247415, -24.285316717012449, 222.38749109133494);
            bool2x2 r0 = bool2x2(false, true, false, true);
            TestUtils.AreEqual(a0 > b0, r0);

            double2x2 a1 = double2x2(501.48760938154885, -303.42498435798336, -305.509098910498, -470.74254177079655);
            double2x2 b1 = double2x2(-207.17042574992888, 365.54648630951829, 183.57330068553483, -23.080710183400981);
            bool2x2 r1 = bool2x2(true, false, false, false);
            TestUtils.AreEqual(a1 > b1, r1);

            double2x2 a2 = double2x2(-305.09075155159962, 26.045478117673383, 169.99735816288614, -498.38803433738093);
            double2x2 b2 = double2x2(337.16379920447423, 175.81176026901778, -8.5140435735294773, -125.86538249154825);
            bool2x2 r2 = bool2x2(false, false, true, false);
            TestUtils.AreEqual(a2 > b2, r2);

            double2x2 a3 = double2x2(270.14296186628894, 69.658893379223969, -163.97516043669322, 273.17413605059221);
            double2x2 b3 = double2x2(-212.85705981629764, 12.657097107105415, 134.17510539580837, -101.51198606449736);
            bool2x2 r3 = bool2x2(true, true, false, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_greater_wide_scalar()
        {
            double2x2 a0 = double2x2(468.88079831976484, -355.42101089815657, -45.708264610594256, 407.1765884864966);
            double b0 = (201.80273232320451);
            bool2x2 r0 = bool2x2(true, false, false, true);
            TestUtils.AreEqual(a0 > b0, r0);

            double2x2 a1 = double2x2(348.72522871043782, -422.75017686502554, -364.27550928866282, 434.16361948203462);
            double b1 = (418.54536147534168);
            bool2x2 r1 = bool2x2(false, false, false, true);
            TestUtils.AreEqual(a1 > b1, r1);

            double2x2 a2 = double2x2(-255.04906833127563, 379.82339232965535, -346.9423937028937, -121.10213261521523);
            double b2 = (178.80637868624478);
            bool2x2 r2 = bool2x2(false, true, false, false);
            TestUtils.AreEqual(a2 > b2, r2);

            double2x2 a3 = double2x2(164.48760254890078, 437.08399340002052, 15.620958097102516, 208.42844329049274);
            double b3 = (-282.73573912435012);
            bool2x2 r3 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_greater_scalar_wide()
        {
            double a0 = (137.5041864558608);
            double2x2 b0 = double2x2(-443.866813627941, 279.85275639214217, -462.40431115701995, -280.71377028185583);
            bool2x2 r0 = bool2x2(true, false, true, true);
            TestUtils.AreEqual(a0 > b0, r0);

            double a1 = (120.71278553861794);
            double2x2 b1 = double2x2(-31.670009866203202, 363.42834418054122, 263.125410440902, -156.36087257990653);
            bool2x2 r1 = bool2x2(true, false, false, true);
            TestUtils.AreEqual(a1 > b1, r1);

            double a2 = (66.354000837706963);
            double2x2 b2 = double2x2(-303.12960519601108, 419.33739371753177, -392.72105640579065, -378.76293986791882);
            bool2x2 r2 = bool2x2(true, false, true, true);
            TestUtils.AreEqual(a2 > b2, r2);

            double a3 = (-398.36114258242822);
            double2x2 b3 = double2x2(-314.28247299524139, 89.530705732074921, 408.40716404859313, 303.354281805155);
            bool2x2 r3 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_less_equal_wide_wide()
        {
            double2x2 a0 = double2x2(333.04760686170664, 239.35082756697705, 26.569201720212163, 41.492498178729988);
            double2x2 b0 = double2x2(46.131192944073632, -378.08232301198052, -466.77821443359284, -173.33503373588206);
            bool2x2 r0 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            double2x2 a1 = double2x2(-162.66233904783724, -271.00273454887918, -108.98620920487969, 392.08160537857634);
            double2x2 b1 = double2x2(-482.23928640887107, 183.34649356796706, 399.07617134557859, -127.63707238418846);
            bool2x2 r1 = bool2x2(false, true, true, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            double2x2 a2 = double2x2(314.48862924915204, 208.10215745125993, 39.935965795040147, 458.77050254250435);
            double2x2 b2 = double2x2(-118.19683914920171, -329.72744504070255, -208.8176177520387, 368.28686850531346);
            bool2x2 r2 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            double2x2 a3 = double2x2(-404.07500166635725, 359.3899287466844, 405.92972941227708, -463.01838967903444);
            double2x2 b3 = double2x2(68.845622333160463, 452.3652081211867, -255.05062997296949, 440.11260172357436);
            bool2x2 r3 = bool2x2(true, true, false, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_less_equal_wide_scalar()
        {
            double2x2 a0 = double2x2(122.81770640370326, -283.69426144459021, -288.84764994720354, -185.45390447669376);
            double b0 = (-181.94389947780587);
            bool2x2 r0 = bool2x2(false, true, true, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            double2x2 a1 = double2x2(-315.2538966216398, -317.9591602375541, -255.569789767065, -368.80326216705294);
            double b1 = (279.57381428385793);
            bool2x2 r1 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            double2x2 a2 = double2x2(-132.48886758298096, -328.49221364059122, -115.35588770516023, -192.52138981247384);
            double b2 = (-207.25397477264238);
            bool2x2 r2 = bool2x2(false, true, false, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            double2x2 a3 = double2x2(454.18384692360826, 509.92862081431258, -410.58454175041265, -231.74948440853018);
            double b3 = (-38.063392418466208);
            bool2x2 r3 = bool2x2(false, false, true, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_less_equal_scalar_wide()
        {
            double a0 = (-336.46568385533322);
            double2x2 b0 = double2x2(251.95838630011235, -22.858304749642627, -238.90586220422102, 284.66662014865619);
            bool2x2 r0 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            double a1 = (-358.3240021943692);
            double2x2 b1 = double2x2(468.53025625112014, -439.03722092091908, -197.06769594786118, -367.5955204291248);
            bool2x2 r1 = bool2x2(true, false, true, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            double a2 = (-143.89508754755144);
            double2x2 b2 = double2x2(-387.84270614564548, -88.237509530148259, 439.36053415730623, -487.98472117259388);
            bool2x2 r2 = bool2x2(false, true, true, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            double a3 = (-393.41587013444672);
            double2x2 b3 = double2x2(399.10247511374882, 365.36438076820434, -225.01526866900514, -305.57958927079085);
            bool2x2 r3 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_greater_equal_wide_wide()
        {
            double2x2 a0 = double2x2(143.64125377668131, -251.70416295328374, 118.57615881719448, 23.871594201713606);
            double2x2 b0 = double2x2(-409.2710322855371, -84.9138353266352, 509.12827157840513, -61.134530811167565);
            bool2x2 r0 = bool2x2(true, false, false, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            double2x2 a1 = double2x2(84.634044448209011, -145.38224155520192, -234.44732653091069, 90.461873811884743);
            double2x2 b1 = double2x2(139.21721822545737, -30.229416146049914, 210.73626075067386, 27.014938605490556);
            bool2x2 r1 = bool2x2(false, false, false, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            double2x2 a2 = double2x2(203.55582604350332, 370.97961180795892, -64.089706689161119, -140.50303155766011);
            double2x2 b2 = double2x2(467.6829266341789, -206.05482993184347, 109.55236654614669, -413.97032160962482);
            bool2x2 r2 = bool2x2(false, true, false, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            double2x2 a3 = double2x2(-61.647308139897575, 463.91894624378483, -81.438769616856575, -56.363175179978441);
            double2x2 b3 = double2x2(95.3849814382312, -493.09765624119791, 330.59692946569851, 106.93486433240344);
            bool2x2 r3 = bool2x2(false, true, false, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_greater_equal_wide_scalar()
        {
            double2x2 a0 = double2x2(-355.36085359908679, 304.30147209032509, 385.1285471325408, -263.95484483612461);
            double b0 = (-139.19751436039689);
            bool2x2 r0 = bool2x2(false, true, true, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            double2x2 a1 = double2x2(-435.80643650321588, 77.010820663073446, -226.75392376014679, -212.65009675391491);
            double b1 = (126.50078660179895);
            bool2x2 r1 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            double2x2 a2 = double2x2(-413.1957916753347, -457.00790355028954, -123.01295214659206, 280.99802006455047);
            double b2 = (-11.07635713139382);
            bool2x2 r2 = bool2x2(false, false, false, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            double2x2 a3 = double2x2(-112.26507215959253, 173.83111461150975, -168.51573260525043, -286.82006443982016);
            double b3 = (383.07020991997342);
            bool2x2 r3 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_greater_equal_scalar_wide()
        {
            double a0 = (-246.0732854558496);
            double2x2 b0 = double2x2(142.15627557698463, -19.29862476293863, -151.98687584325057, 330.020889197486);
            bool2x2 r0 = bool2x2(false, false, false, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            double a1 = (-224.80012260414668);
            double2x2 b1 = double2x2(451.59992119837545, -435.98180576599287, 405.88183064287614, -324.02012720891281);
            bool2x2 r1 = bool2x2(false, true, false, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            double a2 = (300.85477914514706);
            double2x2 b2 = double2x2(-341.6529263656833, 349.34832422311808, -342.97096721407536, 397.82466024804148);
            bool2x2 r2 = bool2x2(true, false, true, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            double a3 = (363.17085354550318);
            double2x2 b3 = double2x2(-141.00453168759333, -304.13972034311837, 317.87954702874629, -371.10323184128072);
            bool2x2 r3 = bool2x2(true, true, true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_add_wide_wide()
        {
            double2x2 a0 = double2x2(-404.27537054767618, -214.93513522620088, -164.2730897237887, 338.47717563178264);
            double2x2 b0 = double2x2(433.90024944483309, 359.72051994862056, 420.50439115078393, -416.371905282313);
            double2x2 r0 = double2x2(29.624878897156918, 144.78538472241968, 256.23130142699523, -77.894729650530337);
            TestUtils.AreEqual(a0 + b0, r0);

            double2x2 a1 = double2x2(302.84880771434348, -330.63301840919678, -21.244342098592028, 157.13040383026487);
            double2x2 b1 = double2x2(-163.21369154900952, -35.65208698979211, 260.76101482136221, -20.117472896407094);
            double2x2 r1 = double2x2(139.63511616533395, -366.28510539898889, 239.51667272277018, 137.01293093385777);
            TestUtils.AreEqual(a1 + b1, r1);

            double2x2 a2 = double2x2(32.444800153581809, -333.966129220075, -488.63531588420051, 484.60532520925869);
            double2x2 b2 = double2x2(156.77011568693911, 315.04057350523794, -110.87443380750454, -373.96641629467086);
            double2x2 r2 = double2x2(189.21491584052092, -18.92555571483706, -599.50974969170511, 110.63890891458783);
            TestUtils.AreEqual(a2 + b2, r2);

            double2x2 a3 = double2x2(-143.61662895214585, -246.09088933006439, -133.72267705468585, 280.921041381043);
            double2x2 b3 = double2x2(12.48257947549348, 97.394265458637051, -149.58347685150034, -463.56459853777875);
            double2x2 r3 = double2x2(-131.13404947665236, -148.69662387142733, -283.30615390618618, -182.64355715673577);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_add_wide_scalar()
        {
            double2x2 a0 = double2x2(-323.42942276756719, 324.634587200654, -277.88344706123854, -472.86264513100622);
            double b0 = (-311.26692190359665);
            double2x2 r0 = double2x2(-634.69634467116384, 13.367665297057329, -589.15036896483525, -784.12956703460281);
            TestUtils.AreEqual(a0 + b0, r0);

            double2x2 a1 = double2x2(-459.05652997412557, -334.47418872195954, 149.11431343346567, -388.34398263895139);
            double b1 = (144.10591918980049);
            double2x2 r1 = double2x2(-314.95061078432508, -190.36826953215905, 293.22023262326616, -244.2380634491509);
            TestUtils.AreEqual(a1 + b1, r1);

            double2x2 a2 = double2x2(303.38458146871278, -29.018897308511157, 45.12297942355417, 101.80118827791944);
            double b2 = (-7.709385637058574);
            double2x2 r2 = double2x2(295.67519583165421, -36.728282945569731, 37.413593786495596, 94.091802640860863);
            TestUtils.AreEqual(a2 + b2, r2);

            double2x2 a3 = double2x2(-410.41598982848973, -191.04749569252482, 118.38775759487771, 11.06376481571408);
            double b3 = (279.4432104935139);
            double2x2 r3 = double2x2(-130.97277933497583, 88.395714800989083, 397.83096808839161, 290.506975309228);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_add_scalar_wide()
        {
            double a0 = (190.83125194852767);
            double2x2 b0 = double2x2(411.15716881824528, -70.761643204261361, -404.53508991959279, 238.02884232161045);
            double2x2 r0 = double2x2(601.988420766773, 120.0696087442663, -213.70383797106513, 428.86009427013812);
            TestUtils.AreEqual(a0 + b0, r0);

            double a1 = (442.24392506212178);
            double2x2 b1 = double2x2(151.43196327585349, -447.09386154967075, -299.92477836270109, 477.43272541343822);
            double2x2 r1 = double2x2(593.67588833797527, -4.8499364875489732, 142.31914669942068, 919.67665047556);
            TestUtils.AreEqual(a1 + b1, r1);

            double a2 = (-292.32724894784729);
            double2x2 b2 = double2x2(59.315583971941692, -378.93333238127332, -228.86587463545885, -309.56731023898692);
            double2x2 r2 = double2x2(-233.0116649759056, -671.26058132912067, -521.19312358330615, -601.89455918683416);
            TestUtils.AreEqual(a2 + b2, r2);

            double a3 = (-78.709975994522665);
            double2x2 b3 = double2x2(-93.987299724476088, -173.50858672592256, 342.7675656484289, -172.60135157993125);
            double2x2 r3 = double2x2(-172.69727571899875, -252.21856272044522, 264.05758965390623, -251.31132757445391);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_sub_wide_wide()
        {
            double2x2 a0 = double2x2(379.05223649509821, -16.164036996739014, 107.16038208229486, 30.064602627449062);
            double2x2 b0 = double2x2(236.68317877346794, 20.170748481606438, 111.4803836864794, -484.679841028843);
            double2x2 r0 = double2x2(142.36905772163027, -36.334785478345452, -4.32000160418454, 514.74444365629211);
            TestUtils.AreEqual(a0 - b0, r0);

            double2x2 a1 = double2x2(-428.43869443817005, 245.62773215287723, 179.60420449990977, 505.37777805019994);
            double2x2 b1 = double2x2(-447.70867630825785, 18.1945517147866, -296.14766063175523, 367.63596051169372);
            double2x2 r1 = double2x2(19.269981870087804, 227.43318043809063, 475.751865131665, 137.74181753850621);
            TestUtils.AreEqual(a1 - b1, r1);

            double2x2 a2 = double2x2(317.71882858766185, -198.47338900271495, 166.69455845965751, -379.02708190447981);
            double2x2 b2 = double2x2(-267.45500219401674, -71.1860635612095, -248.33460843206132, -138.19108230350122);
            double2x2 r2 = double2x2(585.17383078167859, -127.28732544150546, 415.02916689171883, -240.8359996009786);
            TestUtils.AreEqual(a2 - b2, r2);

            double2x2 a3 = double2x2(332.8962687612028, 159.25619871879746, -405.39593453211523, -44.4034602848829);
            double2x2 b3 = double2x2(-474.84816501794762, -275.85935390920349, -172.86971887055307, -72.159977708086387);
            double2x2 r3 = double2x2(807.74443377915043, 435.11555262800096, -232.52621566156216, 27.756517423203491);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_sub_wide_scalar()
        {
            double2x2 a0 = double2x2(102.56966142662316, -199.24868759850443, 218.15437827732148, 72.79636791758071);
            double b0 = (-504.27757405875138);
            double2x2 r0 = double2x2(606.84723548537454, 305.02888646024695, 722.43195233607287, 577.07394197633209);
            TestUtils.AreEqual(a0 - b0, r0);

            double2x2 a1 = double2x2(-139.42634851272516, -31.259209885848293, -273.21787489262312, -375.99724524840587);
            double b1 = (13.459313160488023);
            double2x2 r1 = double2x2(-152.88566167321318, -44.718523046336315, -286.67718805311114, -389.4565584088939);
            TestUtils.AreEqual(a1 - b1, r1);

            double2x2 a2 = double2x2(484.57066248570129, -126.18295174752501, -323.06732884192252, 128.219562828643);
            double b2 = (118.8643591957466);
            double2x2 r2 = double2x2(365.70630328995469, -245.04731094327161, -441.93168803766912, 9.355203632896405);
            TestUtils.AreEqual(a2 - b2, r2);

            double2x2 a3 = double2x2(-59.646107463001329, -39.709145802869045, -388.43712133375794, 29.628258003680116);
            double b3 = (-125.915703593714);
            double2x2 r3 = double2x2(66.269596130712671, 86.206557790844954, -262.52141774004394, 155.54396159739412);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_sub_scalar_wide()
        {
            double a0 = (385.51228135894621);
            double2x2 b0 = double2x2(78.826067245950071, -43.925143500755155, -401.83536762829652, -336.14667931950964);
            double2x2 r0 = double2x2(306.68621411299614, 429.43742485970137, 787.34764898724279, 721.65896067845586);
            TestUtils.AreEqual(a0 - b0, r0);

            double a1 = (25.871118319160814);
            double2x2 b1 = double2x2(188.92978080964167, 132.73553449136, -391.64339822886672, -131.12338477518568);
            double2x2 r1 = double2x2(-163.05866249048086, -106.86441617219918, 417.51451654802753, 156.9945030943465);
            TestUtils.AreEqual(a1 - b1, r1);

            double a2 = (43.832313319590071);
            double2x2 b2 = double2x2(-278.08958948687166, -440.45503946787449, -375.45243161518704, 190.74367079080253);
            double2x2 r2 = double2x2(321.92190280646173, 484.28735278746456, 419.28474493477711, -146.91135747121245);
            TestUtils.AreEqual(a2 - b2, r2);

            double a3 = (364.12960856227653);
            double2x2 b3 = double2x2(349.77856866911918, 492.41104125064385, 122.08065443955388, -191.47411522244761);
            double2x2 r3 = double2x2(14.351039893157349, -128.28143268836732, 242.04895412272265, 555.60372378472414);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_mul_wide_wide()
        {
            double2x2 a0 = double2x2(48.729794286531273, 263.59457958098244, -378.48718493920154, 494.61832236434259);
            double2x2 b0 = double2x2(351.02689258708938, 422.91789956713, -490.61739109950952, 81.404518403766929);
            double2x2 r0 = double2x2(17105.468264809177, 111478.86593366979, 185692.39523946863, 40264.166325748447);
            TestUtils.AreEqual(a0 * b0, r0);

            double2x2 a1 = double2x2(-185.09561094320173, 423.89342494676509, 19.861804256151345, -439.21847292371956);
            double2x2 b1 = double2x2(-357.22656481211379, 378.99459451203916, 318.32116880934745, 208.1715439335311);
            double2x2 r1 = double2x2(66121.069259039446, 160653.31670401874, 6322.432745480568, -91432.787632658525);
            TestUtils.AreEqual(a1 * b1, r1);

            double2x2 a2 = double2x2(200.14622530720487, -178.35696204861483, -285.07807530326681, 56.749516751966212);
            double2x2 b2 = double2x2(345.88571063889458, -149.02886087681577, 293.05592431363459, 423.94813533497427);
            double2x2 r2 = double2x2(69227.719372074862, 26580.334883554529, -83543.818859550782, 24058.85180815696);
            TestUtils.AreEqual(a2 * b2, r2);

            double2x2 a3 = double2x2(42.604453345110869, 472.96119306653793, -264.85660350735145, -278.03821314407429);
            double2x2 b3 = double2x2(53.429250503624417, -257.18689191396669, 87.375958721794177, 84.2100913916762);
            double2x2 r3 = double2x2(2276.3240103459079, -121639.41924070442, -23142.099655252947, -23413.623339240843);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_mul_wide_scalar()
        {
            double2x2 a0 = double2x2(-387.48086828155482, -48.625516675703921, -100.41558151152708, -161.4535282409999);
            double b0 = (367.40878146114233);
            double2x2 r0 = double2x2(-142363.87365483146, -17865.441829738833, -36893.566442862175, -59319.444073627907);
            TestUtils.AreEqual(a0 * b0, r0);

            double2x2 a1 = double2x2(-428.578962764041, 413.47737927617379, -216.10473857452382, -65.20349958595051);
            double b1 = (-198.31901440318626);
            double2x2 r1 = double2x2(84995.357489304486, -82000.426336063218, 42857.678761957788, 12931.093773524268);
            TestUtils.AreEqual(a1 * b1, r1);

            double2x2 a2 = double2x2(18.976513156190776, -356.19757311241585, 13.606950527805338, 394.30371231320487);
            double b2 = (89.787349027482492);
            double2x2 r2 = double2x2(1703.8508100795145, -31982.035819786695, 1221.732016239745, 35403.485040297768);
            TestUtils.AreEqual(a2 * b2, r2);

            double2x2 a3 = double2x2(-428.80947776735269, 92.842557711919085, 344.98600284428619, -456.00521657243615);
            double b3 = (-362.69720595083072);
            double2x2 r3 = double2x2(155527.99947145369, -33673.736275441806, -125125.45932376794, 165391.81794982604);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_mul_scalar_wide()
        {
            double a0 = (468.91594407936373);
            double2x2 b0 = double2x2(123.86660796211413, 490.96148060772634, -247.16259181087958, -176.94950278892622);
            double2x2 r0 = double2x2(58083.027412463176, 230219.66618577423, -115898.48008010101, -82974.443154643348);
            TestUtils.AreEqual(a0 * b0, r0);

            double a1 = (382.26386874833327);
            double2x2 b1 = double2x2(-398.549474663357, 120.56934386145758, -263.27587879042881, 74.376708303753617);
            double2x2 r1 = double2x2(-152351.06407243066, 46089.303836928884, -100640.85597454658, 28431.528260959141);
            TestUtils.AreEqual(a1 * b1, r1);

            double a2 = (-309.85598554734884);
            double2x2 b2 = double2x2(404.92799944660067, -105.62615566403889, 243.92625367079222, -291.96407737022457);
            double2x2 r2 = double2x2(-125469.36434424277, 32728.896562858452, -75582.009732035935, 90466.816937973344);
            TestUtils.AreEqual(a2 * b2, r2);

            double a3 = (-92.46494607462779);
            double2x2 b3 = double2x2(-144.35298950241554, -7.5622308289456441, -257.84767329778879, -215.8806489519219);
            double2x2 r3 = double2x2(13347.591390052165, 699.24126580234679, 23841.871206948283, 19961.392563895111);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_div_wide_wide()
        {
            double2x2 a0 = double2x2(6.8207170995049182, -338.63085881743154, 497.60438155457587, -491.26991938579357);
            double2x2 b0 = double2x2(-352.73601762984697, 302.20974292522749, -489.09516810304262, -380.891595779402);
            double2x2 r0 = double2x2(-0.019336605162511136, -1.1205160215539951, -1.0173978685672489, 1.2897893385663424);
            TestUtils.AreEqual(a0 / b0, r0);

            double2x2 a1 = double2x2(173.45471604794955, -441.55652376709344, 321.01690331148768, -41.6019933417449);
            double2x2 b1 = double2x2(289.64650525229354, -216.57524715018235, -289.15099658125592, 198.97850022044895);
            double2x2 r1 = double2x2(0.59884967677018452, 2.038813435872012, -1.1102050731520718, -0.20907783150266945);
            TestUtils.AreEqual(a1 / b1, r1);

            double2x2 a2 = double2x2(-40.212614316592294, -169.79586728373351, -179.33992084271273, -433.40119119798817);
            double2x2 b2 = double2x2(-292.72057856839177, 9.0584442657690261, -29.890428318591034, 257.63897216396356);
            double2x2 r2 = double2x2(0.137375426467316, -18.744484406155202, 5.9999113740089225, -1.6822035407056666);
            TestUtils.AreEqual(a2 / b2, r2);

            double2x2 a3 = double2x2(-425.29711576239072, 335.54366675743074, 455.98288771881857, -438.4312343254831);
            double2x2 b3 = double2x2(-340.16841117486752, 33.712226168118491, 281.61100186110059, -384.688157499157);
            double2x2 r3 = double2x2(1.2502545850554061, 9.9531744087180147, 1.6191941533013106, 1.1397055661284397);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_div_wide_scalar()
        {
            double2x2 a0 = double2x2(-179.14525779483154, 46.961132786684288, 127.57277470807207, 391.67960924267754);
            double b0 = (-93.365409179295114);
            double2x2 r0 = double2x2(1.9187540585915315, -0.50298213438450257, -1.3663815735342255, -4.1951255040344977);
            TestUtils.AreEqual(a0 / b0, r0);

            double2x2 a1 = double2x2(461.32760665441288, 18.422910937305005, 169.15858395824148, 37.5003321345431);
            double b1 = (150.55543119765605);
            double2x2 r1 = double2x2(3.0641711360698833, 0.1223662991813199, 1.1235634783321922, 0.24907990257296631);
            TestUtils.AreEqual(a1 / b1, r1);

            double2x2 a2 = double2x2(121.80905800769528, 398.16749901239177, -331.00037280237319, -498.45196341837379);
            double b2 = (-22.542152176863567);
            double2x2 r2 = double2x2(-5.403612621012984, -17.66324243969288, 14.683618946646087, 22.111995319149983);
            TestUtils.AreEqual(a2 / b2, r2);

            double2x2 a3 = double2x2(502.30602597738891, -191.85219892852575, -35.942829387235861, -369.29486792594889);
            double b3 = (-329.66696110817929);
            double2x2 r3 = double2x2(-1.5236771810219665, 0.58195761650974176, 0.10902769651654999, 1.1202058789408558);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_div_scalar_wide()
        {
            double a0 = (451.8446936327241);
            double2x2 b0 = double2x2(-95.065177723330066, 207.048737383936, 502.38401603250952, 62.0412257006584);
            double2x2 r0 = double2x2(-4.7529989892590958, 2.1823107899221643, 0.89940101438952824, 7.2829749659173642);
            TestUtils.AreEqual(a0 / b0, r0);

            double a1 = (-110.84549408352257);
            double2x2 b1 = double2x2(-332.61274949303493, 224.27937065077913, -492.73451804217626, 435.03288027040333);
            double2x2 r1 = double2x2(0.33325690086285681, -0.49422955736806418, 0.22495987194880185, -0.25479796840786917);
            TestUtils.AreEqual(a1 / b1, r1);

            double a2 = (503.81881570435075);
            double2x2 b2 = double2x2(291.34940757013362, 88.024186890583564, 328.70278874444909, 50.010147356432981);
            double2x2 r2 = double2x2(1.7292597912115937, 5.7236406662933579, 1.5327488325511169, 10.074331757383689);
            TestUtils.AreEqual(a2 / b2, r2);

            double a3 = (-509.81615304845207);
            double2x2 b3 = double2x2(158.94752819787129, 68.434325011649321, -237.56858002281217, 32.995745435820822);
            double2x2 r3 = double2x2(-3.2074493943296174, -7.4497140574071263, 2.1459746612935842, -15.450966368984824);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_mod_wide_wide()
        {
            double2x2 a0 = double2x2(157.55858881657878, 504.93797158866096, 73.007050786636341, -387.60870975424007);
            double2x2 b0 = double2x2(180.25016530801088, -41.479829092267835, -308.6731518752282, -326.86006203613249);
            double2x2 r0 = double2x2(157.55858881657878, 7.18002248144694, 73.007050786636341, -60.748647718107577);
            TestUtils.AreEqual(a0 % b0, r0);

            double2x2 a1 = double2x2(278.54447830773165, 282.22817314892461, 57.086228635667908, -63.974762707936918);
            double2x2 b1 = double2x2(411.58822674843861, 429.41059680907551, 471.14820144658358, 226.1443618396969);
            double2x2 r1 = double2x2(278.54447830773165, 282.22817314892461, 57.086228635667908, -63.974762707936918);
            TestUtils.AreEqual(a1 % b1, r1);

            double2x2 a2 = double2x2(-345.26900379046288, -380.71618407811792, 470.28039787257114, -480.3074555249454);
            double2x2 b2 = double2x2(423.90749450396163, -300.951750657033, 67.241354258377783, -488.69098328458659);
            double2x2 r2 = double2x2(-345.26900379046288, -79.7644334210849, 66.832272322304448, -480.3074555249454);
            TestUtils.AreEqual(a2 % b2, r2);

            double2x2 a3 = double2x2(65.251441747532908, 503.11623811308118, 387.60585540700981, -281.1812771676021);
            double2x2 b3 = double2x2(-440.438140835817, 508.522422788908, -108.23840456280783, 93.468003078116112);
            double2x2 r3 = double2x2(65.251441747532908, 503.11623811308118, 62.890641718586323, -0.77726793325376775);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_mod_wide_scalar()
        {
            double2x2 a0 = double2x2(42.072420378249376, 313.0502714184347, 111.52063970990514, 131.21203214079696);
            double b0 = (260.27255332668892);
            double2x2 r0 = double2x2(42.072420378249376, 52.777718091745783, 111.52063970990514, 131.21203214079696);
            TestUtils.AreEqual(a0 % b0, r0);

            double2x2 a1 = double2x2(-460.44087026102511, -221.73172031237357, -316.39089479874394, 24.183113824661405);
            double b1 = (-436.48505970299482);
            double2x2 r1 = double2x2(-23.955810558030294, -221.73172031237357, -316.39089479874394, 24.183113824661405);
            TestUtils.AreEqual(a1 % b1, r1);

            double2x2 a2 = double2x2(-238.94258724848862, -240.83247792014504, -12.394702678730084, -152.48966867872031);
            double b2 = (335.60093203913459);
            double2x2 r2 = double2x2(-238.94258724848862, -240.83247792014504, -12.394702678730084, -152.48966867872031);
            TestUtils.AreEqual(a2 % b2, r2);

            double2x2 a3 = double2x2(-387.4286050216428, -51.555152678655077, 179.87273343832828, 15.702755220095924);
            double b3 = (-240.07150017473452);
            double2x2 r3 = double2x2(-147.35710484690827, -51.555152678655077, 179.87273343832828, 15.702755220095924);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_mod_scalar_wide()
        {
            double a0 = (-162.94581063228929);
            double2x2 b0 = double2x2(171.12575991969823, 159.20793659948185, 491.34807061187371, -136.53971416155792);
            double2x2 r0 = double2x2(-162.94581063228929, -3.73787403280744, -162.94581063228929, -26.40609647073137);
            TestUtils.AreEqual(a0 % b0, r0);

            double a1 = (84.487527171376883);
            double2x2 b1 = double2x2(414.39111657365743, -85.030597011107318, 161.98958857450145, -7.6080162560604663);
            double2x2 r1 = double2x2(84.487527171376883, 84.487527171376883, 84.487527171376883, 0.79934835471175347);
            TestUtils.AreEqual(a1 % b1, r1);

            double a2 = (-85.22386912499735);
            double2x2 b2 = double2x2(160.84123547414379, -234.48312078904507, 114.87764578446638, -40.548714895056889);
            double2x2 r2 = double2x2(-85.22386912499735, -85.22386912499735, -85.22386912499735, -4.1264393348835711);
            TestUtils.AreEqual(a2 % b2, r2);

            double a3 = (-85.743732253901555);
            double2x2 b3 = double2x2(-235.70891796597692, -135.85116511948928, 391.48698371997432, 240.69596182587372);
            double2x2 r3 = double2x2(-85.743732253901555, -85.743732253901555, -85.743732253901555, -85.743732253901555);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_plus()
        {
            double2x2 a0 = double2x2(150.59985477784642, -137.85511237841803, 439.0911616939544, 401.84926075574447);
            double2x2 r0 = double2x2(150.59985477784642, -137.85511237841803, 439.0911616939544, 401.84926075574447);
            TestUtils.AreEqual(+a0, r0);

            double2x2 a1 = double2x2(401.8235406362561, -364.62483113101905, 444.56690975863808, -135.17793161011207);
            double2x2 r1 = double2x2(401.8235406362561, -364.62483113101905, 444.56690975863808, -135.17793161011207);
            TestUtils.AreEqual(+a1, r1);

            double2x2 a2 = double2x2(188.5903004093982, -176.78832515365832, 67.193958552178856, -202.57394585505779);
            double2x2 r2 = double2x2(188.5903004093982, -176.78832515365832, 67.193958552178856, -202.57394585505779);
            TestUtils.AreEqual(+a2, r2);

            double2x2 a3 = double2x2(-83.51769761159909, 369.19699805285643, 453.94577071347544, 288.73217619989634);
            double2x2 r3 = double2x2(-83.51769761159909, 369.19699805285643, 453.94577071347544, 288.73217619989634);
            TestUtils.AreEqual(+a3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_neg()
        {
            double2x2 a0 = double2x2(-169.28116782441788, -377.02522366914206, 36.614130752447068, -258.38245713821726);
            double2x2 r0 = double2x2(169.28116782441788, 377.02522366914206, -36.614130752447068, 258.38245713821726);
            TestUtils.AreEqual(-a0, r0);

            double2x2 a1 = double2x2(469.91457460351035, 350.96924678933306, 176.10255464171178, 494.42163037435228);
            double2x2 r1 = double2x2(-469.91457460351035, -350.96924678933306, -176.10255464171178, -494.42163037435228);
            TestUtils.AreEqual(-a1, r1);

            double2x2 a2 = double2x2(201.18688664268086, 313.88018789602449, 381.03574937443977, 327.17948142028388);
            double2x2 r2 = double2x2(-201.18688664268086, -313.88018789602449, -381.03574937443977, -327.17948142028388);
            TestUtils.AreEqual(-a2, r2);

            double2x2 a3 = double2x2(292.367550270803, 448.669835537984, 339.4568738133911, 93.5053418118066);
            double2x2 r3 = double2x2(-292.367550270803, -448.669835537984, -339.4568738133911, -93.5053418118066);
            TestUtils.AreEqual(-a3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_prefix_inc()
        {
            double2x2 a0 = double2x2(86.5853612826138, 161.589808777715, 443.92963978458647, -338.26843587414754);
            double2x2 r0 = double2x2(87.5853612826138, 162.589808777715, 444.92963978458647, -337.26843587414754);
            TestUtils.AreEqual(++a0, r0);

            double2x2 a1 = double2x2(-34.558641688227, 359.14160864387713, 145.02611143189768, 157.23312409093285);
            double2x2 r1 = double2x2(-33.558641688227, 360.14160864387713, 146.02611143189768, 158.23312409093285);
            TestUtils.AreEqual(++a1, r1);

            double2x2 a2 = double2x2(25.361956369766062, 346.04049341103087, 381.77565520898236, 244.66301571794929);
            double2x2 r2 = double2x2(26.361956369766062, 347.04049341103087, 382.77565520898236, 245.66301571794929);
            TestUtils.AreEqual(++a2, r2);

            double2x2 a3 = double2x2(49.973209165955495, 218.37651906645692, 166.64780505311103, -153.75656921870848);
            double2x2 r3 = double2x2(50.973209165955495, 219.37651906645692, 167.64780505311103, -152.75656921870848);
            TestUtils.AreEqual(++a3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_postfix_inc()
        {
            double2x2 a0 = double2x2(-281.78208912619488, 215.34223971857796, 120.82084923648313, -325.35367003332533);
            double2x2 r0 = double2x2(-281.78208912619488, 215.34223971857796, 120.82084923648313, -325.35367003332533);
            TestUtils.AreEqual(a0++, r0);

            double2x2 a1 = double2x2(-179.7229221704057, -375.17335360831271, 193.36569628183065, 329.52426472749755);
            double2x2 r1 = double2x2(-179.7229221704057, -375.17335360831271, 193.36569628183065, 329.52426472749755);
            TestUtils.AreEqual(a1++, r1);

            double2x2 a2 = double2x2(-341.15366927774329, 277.30739582577132, -15.209680325914974, -362.90921490402388);
            double2x2 r2 = double2x2(-341.15366927774329, 277.30739582577132, -15.209680325914974, -362.90921490402388);
            TestUtils.AreEqual(a2++, r2);

            double2x2 a3 = double2x2(480.75709866022555, -132.57326060746482, -43.343021174586852, 63.972996026264923);
            double2x2 r3 = double2x2(480.75709866022555, -132.57326060746482, -43.343021174586852, 63.972996026264923);
            TestUtils.AreEqual(a3++, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_prefix_dec()
        {
            double2x2 a0 = double2x2(340.00185433961542, 496.07084750387389, 288.38421048241867, 183.6946252247759);
            double2x2 r0 = double2x2(339.00185433961542, 495.07084750387389, 287.38421048241867, 182.6946252247759);
            TestUtils.AreEqual(--a0, r0);

            double2x2 a1 = double2x2(-353.61481230036111, -240.59158407924303, 15.320201642494794, 276.58867395882896);
            double2x2 r1 = double2x2(-354.61481230036111, -241.59158407924303, 14.320201642494794, 275.58867395882896);
            TestUtils.AreEqual(--a1, r1);

            double2x2 a2 = double2x2(311.9143594763774, -268.38814676384823, 349.17022506760907, 468.03655383923865);
            double2x2 r2 = double2x2(310.9143594763774, -269.38814676384823, 348.17022506760907, 467.03655383923865);
            TestUtils.AreEqual(--a2, r2);

            double2x2 a3 = double2x2(-93.05706147712516, -164.93854029706614, 278.54028071022606, -142.6552203365859);
            double2x2 r3 = double2x2(-94.05706147712516, -165.93854029706614, 277.54028071022606, -143.6552203365859);
            TestUtils.AreEqual(--a3, r3);
        }

        [TestCompiler]
        public static void double2x2_operator_postfix_dec()
        {
            double2x2 a0 = double2x2(-148.11175806266806, 252.84978473039803, -106.15790395911688, 132.64859277226435);
            double2x2 r0 = double2x2(-148.11175806266806, 252.84978473039803, -106.15790395911688, 132.64859277226435);
            TestUtils.AreEqual(a0--, r0);

            double2x2 a1 = double2x2(-370.72375100232836, -321.15781441384826, 450.60180565835992, 330.95722190055869);
            double2x2 r1 = double2x2(-370.72375100232836, -321.15781441384826, 450.60180565835992, 330.95722190055869);
            TestUtils.AreEqual(a1--, r1);

            double2x2 a2 = double2x2(425.62580533773905, -164.30984576247158, 234.14963995392884, -320.72596064243743);
            double2x2 r2 = double2x2(425.62580533773905, -164.30984576247158, 234.14963995392884, -320.72596064243743);
            TestUtils.AreEqual(a2--, r2);

            double2x2 a3 = double2x2(-337.03135673004732, -298.12717380101196, 453.00240561599026, -453.87702510034529);
            double2x2 r3 = double2x2(-337.03135673004732, -298.12717380101196, 453.00240561599026, -453.87702510034529);
            TestUtils.AreEqual(a3--, r3);
        }


    }
}
