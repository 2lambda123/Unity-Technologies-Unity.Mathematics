//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using static Unity.Mathematics.math;
using Burst.Compiler.IL.Tests;

namespace Unity.Mathematics.Tests
{
    [TestFixture]
    public class TestDouble3x2
    {
        [TestCompiler]
        public static void double3x2_zero()
        {
            TestUtils.AreEqual(double3x2.zero.c0.x, 0.0);
            TestUtils.AreEqual(double3x2.zero.c0.y, 0.0);
            TestUtils.AreEqual(double3x2.zero.c0.z, 0.0);
            TestUtils.AreEqual(double3x2.zero.c1.x, 0.0);
            TestUtils.AreEqual(double3x2.zero.c1.y, 0.0);
            TestUtils.AreEqual(double3x2.zero.c1.z, 0.0);
        }

        [TestCompiler]
        public static void double3x2_operator_equal_wide_wide()
        {
            double3x2 a0 = double3x2(331.74411336134381, -417.68328280825324, -438.45087620171296, -57.990659979167674, -183.11340030613979, 72.322805676759572);
            double3x2 b0 = double3x2(-426.58283277348744, 431.34453149854414, 263.33917987688403, -309.39192905528091, 391.19957441426789, -468.23727748740339);
            bool3x2 r0 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            double3x2 a1 = double3x2(-292.70611562053955, -181.37693437439248, 43.847759028825749, 481.28738020420417, 258.42531287783072, 352.58044759956215);
            double3x2 b1 = double3x2(-389.91158145941404, -192.67202505500615, -8.9501826804830671, -339.08699599797228, 104.67790680037717, -443.50479933410173);
            bool3x2 r1 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            double3x2 a2 = double3x2(70.853262219044041, -41.08313061719906, -501.14396285505217, 469.41773794098651, 379.49792998819521, -174.45778878706403);
            double3x2 b2 = double3x2(358.64011566650129, -415.74920602131135, -141.96963483745679, 379.13005107414449, 56.103776719469465, 132.80950385556071);
            bool3x2 r2 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            double3x2 a3 = double3x2(-456.50745055475619, 172.21558841141666, 258.43929326647856, 509.82020616429872, -199.17567572331785, 194.29238781439722);
            double3x2 b3 = double3x2(-233.77619158186775, -159.6457365302582, 369.80502408081895, 41.048255224269042, 316.68433752501585, -258.03174722289282);
            bool3x2 r3 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_equal_wide_scalar()
        {
            double3x2 a0 = double3x2(327.10191431972282, 440.46724745280449, -443.74519440333603, 325.54625597854431, 435.37174793489828, 58.382070330149531);
            double b0 = (342.44057504387604);
            bool3x2 r0 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            double3x2 a1 = double3x2(-398.43499369101369, 445.50211235764539, -17.79271484249864, -92.372576994994915, -350.23152200795312, 450.23677775367946);
            double b1 = (377.06661551867921);
            bool3x2 r1 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            double3x2 a2 = double3x2(14.983312852207291, 412.48854870930711, 454.70332476808846, 289.29169024587225, 356.9315957300978, 413.76286263659733);
            double b2 = (-504.42695665006852);
            bool3x2 r2 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            double3x2 a3 = double3x2(233.37280165095478, 355.56782905923569, -235.84088026538529, 322.29774561631393, 114.38103371224418, 352.20176927754733);
            double b3 = (-481.17156742567738);
            bool3x2 r3 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_equal_scalar_wide()
        {
            double a0 = (430.78112884554139);
            double3x2 b0 = double3x2(-434.72746225573468, 103.73032074036553, -263.03657090991578, -224.56018291439869, 204.11080298391676, 196.56822476003697);
            bool3x2 r0 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            double a1 = (-424.75656743755405);
            double3x2 b1 = double3x2(467.45050332855919, -45.433633110222218, 138.19161063907279, 181.06193717804831, -449.21580073294035, -335.15445700993507);
            bool3x2 r1 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            double a2 = (-77.466203964066779);
            double3x2 b2 = double3x2(107.90240125912351, -330.9516920200324, -115.29893904332954, 244.52287136973951, -481.47620724210338, 134.603816333508);
            bool3x2 r2 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            double a3 = (-208.27164492768776);
            double3x2 b3 = double3x2(420.91620250275184, -464.2388801352302, 64.914991170594021, 62.831700115851959, -429.80427165972264, -5.5338294531841825);
            bool3x2 r3 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_not_equal_wide_wide()
        {
            double3x2 a0 = double3x2(19.253994712258645, 121.33544045376379, 468.30967615000418, -212.3654521500531, -410.63349337625948, 507.53425359517996);
            double3x2 b0 = double3x2(-249.06633507882538, -19.04659057550441, 323.62254896928675, 294.94198026086292, -492.46095990224785, -166.48327048424784);
            bool3x2 r0 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            double3x2 a1 = double3x2(52.201180720795492, -319.64238682372604, -448.90629670066119, 255.3703111407209, -70.462687286763753, -18.913782366976989);
            double3x2 b1 = double3x2(421.19530482832124, 87.662903588108179, 193.87513670412602, -279.28983200680921, 158.5136307023995, 426.63510413963115);
            bool3x2 r1 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            double3x2 a2 = double3x2(-131.6240962164589, 288.07495202127609, 290.71794785685745, 191.28321585025787, -220.54244790810276, 404.79477591290822);
            double3x2 b2 = double3x2(-404.54781813386262, 480.74048040841728, -184.48030838020162, 355.44509212833134, 414.67556948898152, -134.75917131023442);
            bool3x2 r2 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            double3x2 a3 = double3x2(-266.0124501036538, 258.96735704083335, -375.4471391995657, 124.13765889226352, -395.24205011652879, 154.0925844433217);
            double3x2 b3 = double3x2(-458.71905324362172, -43.342498561061234, -446.39871498867808, -50.549474501306861, -142.7746928403036, -462.01238772925569);
            bool3x2 r3 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_not_equal_wide_scalar()
        {
            double3x2 a0 = double3x2(-418.02227206622354, 231.44822632123169, -469.47851083682781, -94.974084183096011, -376.08437770236486, -428.11901088623284);
            double b0 = (-206.33659205508258);
            bool3x2 r0 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            double3x2 a1 = double3x2(492.92776774471986, 80.418608941332764, -124.3909161670091, -409.29052205071343, 353.96103851588487, 170.98932441090665);
            double b1 = (-91.333830160709965);
            bool3x2 r1 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            double3x2 a2 = double3x2(-494.89575242199737, -180.17698510930734, 324.90474930634014, 365.8997806822415, 86.0467493934774, 75.14543465298857);
            double b2 = (181.01510843123083);
            bool3x2 r2 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            double3x2 a3 = double3x2(-505.78051423736872, 385.47710985014078, -221.90603195033316, 237.35153805341179, 401.89356560348233, -418.38730378560132);
            double b3 = (504.5179734195201);
            bool3x2 r3 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_not_equal_scalar_wide()
        {
            double a0 = (357.34340898941434);
            double3x2 b0 = double3x2(192.97637400076553, -323.1933154180615, -25.125236284511743, -270.50307739456326, -454.42681977452094, -458.81890103724731);
            bool3x2 r0 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            double a1 = (-274.53837049870674);
            double3x2 b1 = double3x2(127.64221078140758, -43.887720366887606, -179.47230180514617, 498.28768920259904, -333.81438866900953, -169.48795779491212);
            bool3x2 r1 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            double a2 = (-146.25878126279395);
            double3x2 b2 = double3x2(-33.0286543523095, 156.74361498502253, -285.2065595524416, -10.882838969529985, 259.28342473659825, -469.94077060648277);
            bool3x2 r2 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            double a3 = (46.414288304007755);
            double3x2 b3 = double3x2(-415.38435359270511, 311.547697450755, 244.51599394740356, 110.52776794812075, -290.50965823349992, -53.821174408225886);
            bool3x2 r3 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_less_wide_wide()
        {
            double3x2 a0 = double3x2(487.82488011188104, -508.92173480844207, 53.876066948229436, 443.78694531125336, -81.078602590169112, 103.16550521886234);
            double3x2 b0 = double3x2(453.09734770893, -123.83057814642348, 492.75013636646338, 434.4634313222316, -402.46478933955768, -480.75231598352656);
            bool3x2 r0 = bool3x2(false, true, true, false, false, false);
            TestUtils.AreEqual(a0 < b0, r0);

            double3x2 a1 = double3x2(-496.19975470760824, 30.001322044991525, 490.88452862709971, 485.69708298412013, -360.6310734043974, -442.65436169256191);
            double3x2 b1 = double3x2(317.30066051953509, 175.82104428849232, 301.86634244670461, 77.7766850356835, -188.5760563298017, 479.33786819844408);
            bool3x2 r1 = bool3x2(true, true, false, false, true, true);
            TestUtils.AreEqual(a1 < b1, r1);

            double3x2 a2 = double3x2(-310.85801544359794, -142.11604244174254, -131.92170983735554, -279.9177059046541, -335.16161338200868, 207.23738751524934);
            double3x2 b2 = double3x2(-393.34224600034872, 21.696369419664279, 151.5708139648525, -115.47818117750722, -417.10818715445146, -272.83872545549588);
            bool3x2 r2 = bool3x2(false, true, true, true, false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            double3x2 a3 = double3x2(267.39401996666288, 259.68653762512213, 197.36238655697662, 378.09459632360119, -358.61897652159394, -187.33231910845836);
            double3x2 b3 = double3x2(210.97852788259206, -355.15476028768103, 183.07980808200307, -260.30830037794465, 312.9526771572198, 383.91627305742179);
            bool3x2 r3 = bool3x2(false, false, false, false, true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_less_wide_scalar()
        {
            double3x2 a0 = double3x2(18.15358901869206, -409.34645695674533, 180.78649028613529, -185.15496572533385, 228.26473127504096, 124.1257570367892);
            double b0 = (152.320865940452);
            bool3x2 r0 = bool3x2(true, true, false, true, false, true);
            TestUtils.AreEqual(a0 < b0, r0);

            double3x2 a1 = double3x2(265.74384534812714, 493.12318371847425, 36.373661296616206, 131.67983132772144, 85.934578220329513, -89.371177953375138);
            double b1 = (-307.54556694046858);
            bool3x2 r1 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a1 < b1, r1);

            double3x2 a2 = double3x2(-36.894802825942065, -193.74187311611223, -320.66100302369381, 424.3283214160839, -392.51732057729612, 435.07643553012815);
            double b2 = (-491.25716256129425);
            bool3x2 r2 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            double3x2 a3 = double3x2(181.86553605919028, -108.90917997663337, -9.3816139741715, 109.85700731624706, -377.40399592807705, -91.781760973754217);
            double b3 = (350.03270141688768);
            bool3x2 r3 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_less_scalar_wide()
        {
            double a0 = (416.68128915162822);
            double3x2 b0 = double3x2(-105.38907938142728, -389.249608459533, 408.84688944781522, -87.039535324573308, 268.69133508796403, -470.20163295706811);
            bool3x2 r0 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a0 < b0, r0);

            double a1 = (271.31567419288479);
            double3x2 b1 = double3x2(-170.32271750752011, -156.5984128250733, -0.288699388638463, 72.090836796951862, -54.429979111268153, 191.60324797015789);
            bool3x2 r1 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a1 < b1, r1);

            double a2 = (370.54399149983374);
            double3x2 b2 = double3x2(283.23240412549694, -362.76201956475245, -145.50098688225307, 315.12990894686891, 340.82956067697592, -60.229261664780438);
            bool3x2 r2 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            double a3 = (-194.84369883073668);
            double3x2 b3 = double3x2(-261.05675828692353, -246.82587897350356, 91.537619394966214, -233.52279077913744, 16.32558513447907, -44.038489123824263);
            bool3x2 r3 = bool3x2(false, false, true, false, true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_greater_wide_wide()
        {
            double3x2 a0 = double3x2(-188.03303131276419, 234.30020367088741, -56.305944230549926, 240.95838248029281, 501.48760938154885, -303.42498435798336);
            double3x2 b0 = double3x2(-17.400830992218516, -59.539615897247415, -24.285316717012449, 222.38749109133494, -207.17042574992888, 365.54648630951829);
            bool3x2 r0 = bool3x2(false, true, false, true, true, false);
            TestUtils.AreEqual(a0 > b0, r0);

            double3x2 a1 = double3x2(-305.509098910498, -470.74254177079655, -305.09075155159962, 26.045478117673383, 169.99735816288614, -498.38803433738093);
            double3x2 b1 = double3x2(183.57330068553483, -23.080710183400981, 337.16379920447423, 175.81176026901778, -8.5140435735294773, -125.86538249154825);
            bool3x2 r1 = bool3x2(false, false, false, false, true, false);
            TestUtils.AreEqual(a1 > b1, r1);

            double3x2 a2 = double3x2(270.14296186628894, 69.658893379223969, -163.97516043669322, 273.17413605059221, 193.871112675346, -157.93932945930368);
            double3x2 b2 = double3x2(-212.85705981629764, 12.657097107105415, 134.17510539580837, -101.51198606449736, -505.14506053605351, -150.59660417893741);
            bool3x2 r2 = bool3x2(true, true, false, true, true, false);
            TestUtils.AreEqual(a2 > b2, r2);

            double3x2 a3 = double3x2(439.05371185720605, 414.23264165140347, -246.5580800727746, 326.22428217820095, -457.29665610627114, -338.94572059202278);
            double3x2 b3 = double3x2(286.16057862255752, 358.07543508991387, 105.75404195941712, 61.524060039559458, 144.40534288455046, -298.4254330594211);
            bool3x2 r3 = bool3x2(true, true, false, true, false, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_greater_wide_scalar()
        {
            double3x2 a0 = double3x2(468.88079831976484, -355.42101089815657, -45.708264610594256, 407.1765884864966, 348.72522871043782, 418.54536147534168);
            double b0 = (201.80273232320451);
            bool3x2 r0 = bool3x2(true, false, false, true, true, true);
            TestUtils.AreEqual(a0 > b0, r0);

            double3x2 a1 = double3x2(-422.75017686502554, 434.16361948203462, -255.04906833127563, 178.80637868624478, 379.82339232965535, -346.9423937028937);
            double b1 = (-364.27550928866282);
            bool3x2 r1 = bool3x2(false, true, true, true, true, true);
            TestUtils.AreEqual(a1 > b1, r1);

            double3x2 a2 = double3x2(-121.10213261521523, -282.73573912435012, 437.08399340002052, 15.620958097102516, 208.42844329049274, -509.64582824597409);
            double b2 = (164.48760254890078);
            bool3x2 r2 = bool3x2(false, false, true, false, true, false);
            TestUtils.AreEqual(a2 > b2, r2);

            double3x2 a3 = double3x2(-293.80177678437985, 488.46164273119609, -162.21690304680584, 301.607709786672, -345.05337516640003, -76.300566470390436);
            double b3 = (127.58438569287978);
            bool3x2 r3 = bool3x2(false, true, false, true, false, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_greater_scalar_wide()
        {
            double a0 = (137.5041864558608);
            double3x2 b0 = double3x2(-443.866813627941, 279.85275639214217, -462.40431115701995, -280.71377028185583, 120.71278553861794, -31.670009866203202);
            bool3x2 r0 = bool3x2(true, false, true, true, true, true);
            TestUtils.AreEqual(a0 > b0, r0);

            double a1 = (363.42834418054122);
            double3x2 b1 = double3x2(263.125410440902, -156.36087257990653, 66.354000837706963, -303.12960519601108, 419.33739371753177, -392.72105640579065);
            bool3x2 r1 = bool3x2(true, true, true, true, false, true);
            TestUtils.AreEqual(a1 > b1, r1);

            double a2 = (-378.76293986791882);
            double3x2 b2 = double3x2(-398.36114258242822, -314.28247299524139, 89.530705732074921, 408.40716404859313, 303.354281805155, 16.91672015977872);
            bool3x2 r2 = bool3x2(true, false, false, false, false, false);
            TestUtils.AreEqual(a2 > b2, r2);

            double a3 = (-425.38421293040005);
            double3x2 b3 = double3x2(205.63918767014479, -181.90697034723451, 256.78762042559106, -272.80261839218559, -192.99896702216893, 457.53929326382433);
            bool3x2 r3 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_less_equal_wide_wide()
        {
            double3x2 a0 = double3x2(333.04760686170664, 239.35082756697705, 26.569201720212163, 41.492498178729988, -162.66233904783724, -271.00273454887918);
            double3x2 b0 = double3x2(46.131192944073632, -378.08232301198052, -466.77821443359284, -173.33503373588206, -482.23928640887107, 183.34649356796706);
            bool3x2 r0 = bool3x2(false, false, false, false, false, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            double3x2 a1 = double3x2(-108.98620920487969, 392.08160537857634, 314.48862924915204, 208.10215745125993, 39.935965795040147, 458.77050254250435);
            double3x2 b1 = double3x2(399.07617134557859, -127.63707238418846, -118.19683914920171, -329.72744504070255, -208.8176177520387, 368.28686850531346);
            bool3x2 r1 = bool3x2(true, false, false, false, false, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            double3x2 a2 = double3x2(-404.07500166635725, 359.3899287466844, 405.92972941227708, -463.01838967903444, -459.44302985604992, 271.79186666747171);
            double3x2 b2 = double3x2(68.845622333160463, 452.3652081211867, -255.05062997296949, 440.11260172357436, -138.22575408696463, -237.15905701236755);
            bool3x2 r2 = bool3x2(true, true, false, true, true, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            double3x2 a3 = double3x2(73.0907366616143, 263.65795553087162, -355.34615652418984, -184.6120685006548, -320.97342720673112, 340.87495032924926);
            double3x2 b3 = double3x2(201.34304890471651, -403.24875015916712, 230.68296324027835, -57.315656450258416, 124.13107853947724, 38.174519795074389);
            bool3x2 r3 = bool3x2(true, false, true, true, true, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_less_equal_wide_scalar()
        {
            double3x2 a0 = double3x2(122.81770640370326, -283.69426144459021, -288.84764994720354, -185.45390447669376, -315.2538966216398, 279.57381428385793);
            double b0 = (-181.94389947780587);
            bool3x2 r0 = bool3x2(false, true, true, true, true, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            double3x2 a1 = double3x2(-317.9591602375541, -368.80326216705294, -132.48886758298096, -207.25397477264238, -328.49221364059122, -115.35588770516023);
            double b1 = (-255.569789767065);
            bool3x2 r1 = bool3x2(true, true, false, false, true, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            double3x2 a2 = double3x2(-192.52138981247384, -38.063392418466208, 509.92862081431258, -410.58454175041265, -231.74948440853018, 179.0554345487875);
            double b2 = (454.18384692360826);
            bool3x2 r2 = bool3x2(true, true, false, true, true, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            double3x2 a3 = double3x2(-253.84079778093883, 320.48968783043779, 65.780525953406709, 157.06309015912143, 126.58013945751827, -476.03334091419043);
            double b3 = (228.50253807217928);
            bool3x2 r3 = bool3x2(true, false, true, true, true, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_less_equal_scalar_wide()
        {
            double a0 = (-336.46568385533322);
            double3x2 b0 = double3x2(251.95838630011235, -22.858304749642627, -238.90586220422102, 284.66662014865619, -358.3240021943692, 468.53025625112014);
            bool3x2 r0 = bool3x2(true, true, true, true, false, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            double a1 = (-439.03722092091908);
            double3x2 b1 = double3x2(-197.06769594786118, -367.5955204291248, -143.89508754755144, -387.84270614564548, -88.237509530148259, 439.36053415730623);
            bool3x2 r1 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            double a2 = (-487.98472117259388);
            double3x2 b2 = double3x2(-393.41587013444672, 399.10247511374882, 365.36438076820434, -225.01526866900514, -305.57958927079085, -155.50471718400007);
            bool3x2 r2 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            double a3 = (-241.34569870743235);
            double3x2 b3 = double3x2(-22.937379609298603, -113.9404576355314, 421.05099959906704, -493.35816096391443, -422.88027043961, 27.082915080284238);
            bool3x2 r3 = bool3x2(true, true, true, false, false, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_greater_equal_wide_wide()
        {
            double3x2 a0 = double3x2(143.64125377668131, -251.70416295328374, 118.57615881719448, 23.871594201713606, 84.634044448209011, -145.38224155520192);
            double3x2 b0 = double3x2(-409.2710322855371, -84.9138353266352, 509.12827157840513, -61.134530811167565, 139.21721822545737, -30.229416146049914);
            bool3x2 r0 = bool3x2(true, false, false, true, false, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            double3x2 a1 = double3x2(-234.44732653091069, 90.461873811884743, 203.55582604350332, 370.97961180795892, -64.089706689161119, -140.50303155766011);
            double3x2 b1 = double3x2(210.73626075067386, 27.014938605490556, 467.6829266341789, -206.05482993184347, 109.55236654614669, -413.97032160962482);
            bool3x2 r1 = bool3x2(false, true, false, true, false, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            double3x2 a2 = double3x2(-61.647308139897575, 463.91894624378483, -81.438769616856575, -56.363175179978441, 39.754479665194822, -389.11254877090107);
            double3x2 b2 = double3x2(95.3849814382312, -493.09765624119791, 330.59692946569851, 106.93486433240344, -316.19577589453934, 206.49047026712935);
            bool3x2 r2 = bool3x2(false, true, false, false, true, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            double3x2 a3 = double3x2(117.34721213083117, -460.31869599796772, -209.22120557037238, -223.78431211401909, -36.6575873068802, 488.59948824746516);
            double3x2 b3 = double3x2(114.22677975251656, 54.440611626226769, -242.84274184091146, 240.49563442938756, 151.10935718897235, 165.14314635337473);
            bool3x2 r3 = bool3x2(true, false, true, false, false, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_greater_equal_wide_scalar()
        {
            double3x2 a0 = double3x2(-355.36085359908679, 304.30147209032509, 385.1285471325408, -263.95484483612461, -435.80643650321588, 126.50078660179895);
            double b0 = (-139.19751436039689);
            bool3x2 r0 = bool3x2(false, true, true, false, false, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            double3x2 a1 = double3x2(77.010820663073446, -212.65009675391491, -413.1957916753347, -11.07635713139382, -457.00790355028954, -123.01295214659206);
            double b1 = (-226.75392376014679);
            bool3x2 r1 = bool3x2(true, true, false, true, false, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            double3x2 a2 = double3x2(280.99802006455047, 383.07020991997342, 173.83111461150975, -168.51573260525043, -286.82006443982016, 404.74096054804556);
            double b2 = (-112.26507215959253);
            bool3x2 r2 = bool3x2(true, true, true, false, false, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            double3x2 a3 = double3x2(59.757235793283826, -264.70601165700054, -13.229999309978439, -202.23782620310681, 64.693119794453082, -182.85754188469497);
            double b3 = (150.14046747523378);
            bool3x2 r3 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_greater_equal_scalar_wide()
        {
            double a0 = (-246.0732854558496);
            double3x2 b0 = double3x2(142.15627557698463, -19.29862476293863, -151.98687584325057, 330.020889197486, -224.80012260414668, 451.59992119837545);
            bool3x2 r0 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            double a1 = (-435.98180576599287);
            double3x2 b1 = double3x2(405.88183064287614, -324.02012720891281, 300.85477914514706, -341.6529263656833, 349.34832422311808, -342.97096721407536);
            bool3x2 r1 = bool3x2(false, false, false, false, false, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            double a2 = (397.82466024804148);
            double3x2 b2 = double3x2(363.17085354550318, -141.00453168759333, -304.13972034311837, 317.87954702874629, -371.10323184128072, -166.71349652424152);
            bool3x2 r2 = bool3x2(true, true, true, true, true, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            double a3 = (191.64334472997268);
            double3x2 b3 = double3x2(-274.38806808851103, 33.124833360838124, -54.884210850523857, 442.023279157478, 161.0546434675598, -191.78272852291479);
            bool3x2 r3 = bool3x2(true, true, true, false, true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_add_wide_wide()
        {
            double3x2 a0 = double3x2(-404.27537054767618, -214.93513522620088, -164.2730897237887, 338.47717563178264, 302.84880771434348, -330.63301840919678);
            double3x2 b0 = double3x2(433.90024944483309, 359.72051994862056, 420.50439115078393, -416.371905282313, -163.21369154900952, -35.65208698979211);
            double3x2 r0 = double3x2(29.624878897156918, 144.78538472241968, 256.23130142699523, -77.894729650530337, 139.63511616533395, -366.28510539898889);
            TestUtils.AreEqual(a0 + b0, r0);

            double3x2 a1 = double3x2(-21.244342098592028, 157.13040383026487, 32.444800153581809, -333.966129220075, -488.63531588420051, 484.60532520925869);
            double3x2 b1 = double3x2(260.76101482136221, -20.117472896407094, 156.77011568693911, 315.04057350523794, -110.87443380750454, -373.96641629467086);
            double3x2 r1 = double3x2(239.51667272277018, 137.01293093385777, 189.21491584052092, -18.92555571483706, -599.50974969170511, 110.63890891458783);
            TestUtils.AreEqual(a1 + b1, r1);

            double3x2 a2 = double3x2(-143.61662895214585, -246.09088933006439, -133.72267705468585, 280.921041381043, -197.23690018301687, 72.3357828000261);
            double3x2 b2 = double3x2(12.48257947549348, 97.394265458637051, -149.58347685150034, -463.56459853777875, -332.26615992759639, 384.89107078355323);
            double3x2 r2 = double3x2(-131.13404947665236, -148.69662387142733, -283.30615390618618, -182.64355715673577, -529.50306011061321, 457.22685358357933);
            TestUtils.AreEqual(a2 + b2, r2);

            double3x2 a3 = double3x2(408.85914750064683, 362.22289269148507, -238.82044779454378, -305.65768184590047, 3.2989790454968215, -434.63414760801669);
            double3x2 b3 = double3x2(-47.64057853056147, 231.06199585230183, -383.3149589893012, -107.28389816511606, 367.01860754891231, 304.00379218906346);
            double3x2 r3 = double3x2(361.21856897008536, 593.28488854378691, -622.13540678384493, -412.94158001101653, 370.31758659440914, -130.63035541895323);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_add_wide_scalar()
        {
            double3x2 a0 = double3x2(-323.42942276756719, 324.634587200654, -277.88344706123854, -472.86264513100622, -459.05652997412557, 144.10591918980049);
            double b0 = (-311.26692190359665);
            double3x2 r0 = double3x2(-634.69634467116384, 13.367665297057329, -589.15036896483525, -784.12956703460281, -770.32345187772216, -167.16100271379617);
            TestUtils.AreEqual(a0 + b0, r0);

            double3x2 a1 = double3x2(-334.47418872195954, -388.34398263895139, 303.38458146871278, -7.709385637058574, -29.018897308511157, 45.12297942355417);
            double b1 = (149.11431343346567);
            double3x2 r1 = double3x2(-185.35987528849387, -239.22966920548572, 452.49889490217845, 141.40492779640709, 120.09541612495451, 194.23729285701984);
            TestUtils.AreEqual(a1 + b1, r1);

            double3x2 a2 = double3x2(101.80118827791944, 279.4432104935139, -191.04749569252482, 118.38775759487771, 11.06376481571408, -38.552246826958026);
            double b2 = (-410.41598982848973);
            double3x2 r2 = double3x2(-308.61480155057029, -130.97277933497583, -601.46348552101449, -292.028232233612, -399.35222501277565, -448.96823665544775);
            TestUtils.AreEqual(a2 + b2, r2);

            double3x2 a3 = double3x2(410.89496893943056, -218.20421348242286, -374.088939125691, -344.11773101618405, -368.17753594376961, 94.002569957637547);
            double b3 = (-14.252791649779681);
            double3x2 r3 = double3x2(396.64217728965087, -232.45700513220254, -388.34173077547069, -358.37052266596373, -382.43032759354929, 79.749778307857866);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_add_scalar_wide()
        {
            double a0 = (190.83125194852767);
            double3x2 b0 = double3x2(411.15716881824528, -70.761643204261361, -404.53508991959279, 238.02884232161045, 442.24392506212178, 151.43196327585349);
            double3x2 r0 = double3x2(601.988420766773, 120.0696087442663, -213.70383797106513, 428.86009427013812, 633.07517701064944, 342.26321522438116);
            TestUtils.AreEqual(a0 + b0, r0);

            double a1 = (-447.09386154967075);
            double3x2 b1 = double3x2(-299.92477836270109, 477.43272541343822, -292.32724894784729, 59.315583971941692, -378.93333238127332, -228.86587463545885);
            double3x2 r1 = double3x2(-747.01863991237178, 30.338863863767472, -739.421110497518, -387.77827757772906, -826.02719393094412, -675.9597361851296);
            TestUtils.AreEqual(a1 + b1, r1);

            double a2 = (-309.56731023898692);
            double3x2 b2 = double3x2(-78.709975994522665, -93.987299724476088, -173.50858672592256, 342.7675656484289, -172.60135157993125, 76.3781631348553);
            double3x2 r2 = double3x2(-388.27728623350959, -403.554609963463, -483.07589696490948, 33.200255409441979, -482.16866181891817, -233.18914710413162);
            TestUtils.AreEqual(a2 + b2, r2);

            double a3 = (502.48778867278611);
            double3x2 b3 = double3x2(-262.74656570271895, 353.17375938649, 288.06972493234548, 433.60712715313173, 397.0944532813013, -309.56912937274626);
            double3x2 r3 = double3x2(239.74122297006716, 855.66154805927613, 790.55751360513159, 936.09491582591784, 899.58224195408741, 192.91865930003985);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_sub_wide_wide()
        {
            double3x2 a0 = double3x2(379.05223649509821, -16.164036996739014, 107.16038208229486, 30.064602627449062, -428.43869443817005, 245.62773215287723);
            double3x2 b0 = double3x2(236.68317877346794, 20.170748481606438, 111.4803836864794, -484.679841028843, -447.70867630825785, 18.1945517147866);
            double3x2 r0 = double3x2(142.36905772163027, -36.334785478345452, -4.32000160418454, 514.74444365629211, 19.269981870087804, 227.43318043809063);
            TestUtils.AreEqual(a0 - b0, r0);

            double3x2 a1 = double3x2(179.60420449990977, 505.37777805019994, 317.71882858766185, -198.47338900271495, 166.69455845965751, -379.02708190447981);
            double3x2 b1 = double3x2(-296.14766063175523, 367.63596051169372, -267.45500219401674, -71.1860635612095, -248.33460843206132, -138.19108230350122);
            double3x2 r1 = double3x2(475.751865131665, 137.74181753850621, 585.17383078167859, -127.28732544150546, 415.02916689171883, -240.8359996009786);
            TestUtils.AreEqual(a1 - b1, r1);

            double3x2 a2 = double3x2(332.8962687612028, 159.25619871879746, -405.39593453211523, -44.4034602848829, -97.96675567420516, 427.35325475565776);
            double3x2 b2 = double3x2(-474.84816501794762, -275.85935390920349, -172.86971887055307, -72.159977708086387, -161.56859047783939, 498.74157475807772);
            double3x2 r2 = double3x2(807.74443377915043, 435.11555262800096, -232.52621566156216, 27.756517423203491, 63.601834803634233, -71.38832000241996);
            TestUtils.AreEqual(a2 - b2, r2);

            double3x2 a3 = double3x2(64.905246049587277, 448.51595065021695, 344.09549323846375, -299.15137900931359, 465.76325938932746, 402.46793694164046);
            double3x2 b3 = double3x2(-123.51264220267194, -329.45570078932479, -154.94471867147121, -481.69881056328251, 74.205483709557711, -267.31708992054553);
            double3x2 r3 = double3x2(188.41788825225922, 777.9716514395418, 499.04021190993495, 182.54743155396892, 391.55777567976975, 669.785026862186);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_sub_wide_scalar()
        {
            double3x2 a0 = double3x2(102.56966142662316, -199.24868759850443, 218.15437827732148, 72.79636791758071, -139.42634851272516, 13.459313160488023);
            double b0 = (-504.27757405875138);
            double3x2 r0 = double3x2(606.84723548537454, 305.02888646024695, 722.43195233607287, 577.07394197633209, 364.85122554602623, 517.73688721923941);
            TestUtils.AreEqual(a0 - b0, r0);

            double3x2 a1 = double3x2(-31.259209885848293, -375.99724524840587, 484.57066248570129, 118.8643591957466, -126.18295174752501, -323.06732884192252);
            double b1 = (-273.21787489262312);
            double3x2 r1 = double3x2(241.95866500677482, -102.77937035578276, 757.78853737832446, 392.08223408836972, 147.03492314509811, -49.8494539492994);
            TestUtils.AreEqual(a1 - b1, r1);

            double3x2 a2 = double3x2(128.219562828643, -125.915703593714, -39.709145802869045, -388.43712133375794, 29.628258003680116, 164.51195700676737);
            double b2 = (-59.646107463001329);
            double3x2 r2 = double3x2(187.86567029164434, -66.269596130712671, 19.936961660132283, -328.79101387075661, 89.274365466681445, 224.1580644697687);
            TestUtils.AreEqual(a2 - b2, r2);

            double3x2 a3 = double3x2(-245.12654005974838, -168.44942887520858, -283.30114401658119, -492.36922549287289, 470.42952487917125, -384.21620506058269);
            double b3 = (-293.85304059360783);
            double3x2 r3 = double3x2(48.726500533859451, 125.40361171839925, 10.551896577026639, -198.51618489926506, 764.28256547277908, -90.363164466974865);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_sub_scalar_wide()
        {
            double a0 = (385.51228135894621);
            double3x2 b0 = double3x2(78.826067245950071, -43.925143500755155, -401.83536762829652, -336.14667931950964, 25.871118319160814, 188.92978080964167);
            double3x2 r0 = double3x2(306.68621411299614, 429.43742485970137, 787.34764898724279, 721.65896067845586, 359.6411630397854, 196.58250054930454);
            TestUtils.AreEqual(a0 - b0, r0);

            double a1 = (132.73553449136);
            double3x2 b1 = double3x2(-391.64339822886672, -131.12338477518568, 43.832313319590071, -278.08958948687166, -440.45503946787449, -375.45243161518704);
            double3x2 r1 = double3x2(524.37893272022666, 263.85891926654568, 88.903221171769928, 410.82512397823166, 573.19057395923448, 508.18796610654704);
            TestUtils.AreEqual(a1 - b1, r1);

            double a2 = (190.74367079080253);
            double3x2 b2 = double3x2(364.12960856227653, 349.77856866911918, 492.41104125064385, 122.08065443955388, -191.47411522244761, 114.19905596328852);
            double3x2 r2 = double3x2(-173.385937771474, -159.03489787831666, -301.66737045984132, 68.663016351248643, 382.21778601325013, 76.54461482751401);
            TestUtils.AreEqual(a2 - b2, r2);

            double a3 = (79.321660317164742);
            double3x2 b3 = double3x2(105.47045784139561, -447.61224219184942, -490.96494292233371, 245.04158055272023, 256.28489339364921, -149.75633461296388);
            double3x2 r3 = double3x2(-26.148797524230872, 526.93390250901416, 570.28660323949839, -165.71992023555549, -176.96323307648447, 229.07799493012863);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_mul_wide_wide()
        {
            double3x2 a0 = double3x2(48.729794286531273, 263.59457958098244, -378.48718493920154, 494.61832236434259, -185.09561094320173, 423.89342494676509);
            double3x2 b0 = double3x2(351.02689258708938, 422.91789956713, -490.61739109950952, 81.404518403766929, -357.22656481211379, 378.99459451203916);
            double3x2 r0 = double3x2(17105.468264809177, 111478.86593366979, 185692.39523946863, 40264.166325748447, 66121.069259039446, 160653.31670401874);
            TestUtils.AreEqual(a0 * b0, r0);

            double3x2 a1 = double3x2(19.861804256151345, -439.21847292371956, 200.14622530720487, -178.35696204861483, -285.07807530326681, 56.749516751966212);
            double3x2 b1 = double3x2(318.32116880934745, 208.1715439335311, 345.88571063889458, -149.02886087681577, 293.05592431363459, 423.94813533497427);
            double3x2 r1 = double3x2(6322.432745480568, -91432.787632658525, 69227.719372074862, 26580.334883554529, -83543.818859550782, 24058.85180815696);
            TestUtils.AreEqual(a1 * b1, r1);

            double3x2 a2 = double3x2(42.604453345110869, 472.96119306653793, -264.85660350735145, -278.03821314407429, 88.717738908118463, 171.39477570885549);
            double3x2 b2 = double3x2(53.429250503624417, -257.18689191396669, 87.375958721794177, 84.2100913916762, -59.685752658027127, -144.90168935847549);
            double3x2 r2 = double3x2(2276.3240103459079, -121639.41924070442, -23142.099655252947, -23413.623339240843, -5295.1850208493879, -24835.392547430161);
            TestUtils.AreEqual(a2 * b2, r2);

            double3x2 a3 = double3x2(366.37312500848111, -253.82156121629362, -217.54853139517297, 431.06731172607624, -159.41258747848337, -162.98086722333954);
            double3x2 b3 = double3x2(436.83346983270417, -444.17268368423572, 292.19968070285381, -29.194205536131847, 80.048135556303009, 396.24801439617204);
            double3x2 r3 = double3x2(160044.04345090588, 112740.60402236365, -63567.611411044309, -12584.667698438887, -12760.68041185865, -64580.84502181445);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_mul_wide_scalar()
        {
            double3x2 a0 = double3x2(-387.48086828155482, -48.625516675703921, -100.41558151152708, -161.4535282409999, -428.578962764041, -198.31901440318626);
            double b0 = (367.40878146114233);
            double3x2 r0 = double3x2(-142363.87365483146, -17865.441829738833, -36893.566442862175, -59319.444073627907, -157463.67446901661, -72864.1474224494);
            TestUtils.AreEqual(a0 * b0, r0);

            double3x2 a1 = double3x2(413.47737927617379, -65.20349958595051, 18.976513156190776, 89.787349027482492, -356.19757311241585, 13.606950527805338);
            double b1 = (-216.10473857452382);
            double3x2 r1 = double3x2(-89354.420954956775, 14090.785232165907, -4100.9144146746194, -19403.471588883629, 76975.983418338466, -2940.5264866078514);
            TestUtils.AreEqual(a1 * b1, r1);

            double3x2 a2 = double3x2(394.30371231320487, -362.69720595083072, 92.842557711919085, 344.98600284428619, -456.00521657243615, 283.0814770586237);
            double b2 = (-428.80947776735269);
            double3x2 r2 = double3x2(-169081.16895875384, 155527.99947145369, -39811.768687033327, -147933.26771670481, 195539.35877761492, -121388.02034311926);
            TestUtils.AreEqual(a2 * b2, r2);

            double3x2 a3 = double3x2(-209.5525592349249, -8.4340746442014733, 176.07398494336474, -365.27418845019963, 236.01468693279412, 423.78179259960621);
            double b3 = (-398.4071630902622);
            double3x2 r3 = double3x2(83487.240643090554, 3360.1957522878215, -70149.136835283483, 145527.85317054184, -94029.941868530877, -168837.70175891498);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_mul_scalar_wide()
        {
            double a0 = (468.91594407936373);
            double3x2 b0 = double3x2(123.86660796211413, 490.96148060772634, -247.16259181087958, -176.94950278892622, 382.26386874833327, -398.549474663357);
            double3x2 r0 = double3x2(58083.027412463176, 230219.66618577423, -115898.48008010101, -82974.443154643348, 179249.62290155469, -186886.2031741025);
            TestUtils.AreEqual(a0 * b0, r0);

            double a1 = (120.56934386145758);
            double3x2 b1 = double3x2(-263.27587879042881, 74.376708303753617, -309.85598554734884, 404.92799944660067, -105.62615566403889, 243.92625367079222);
            double3x2 r1 = double3x2(-31742.999960310637, 8967.5509187585976, -37359.132868989131, 48821.903204409304, -12735.276283021351, 29410.028355670878);
            TestUtils.AreEqual(a1 * b1, r1);

            double a2 = (-291.96407737022457);
            double3x2 b2 = double3x2(-92.46494607462779, -144.35298950241554, -7.5622308289456441, -257.84767329778879, -215.8806489519219, -480.02161358297877);
            double3x2 r2 = double3x2(26996.442669766271, 42145.887395706464, 2207.8997468337834, 75282.258036448, 63029.394493333217, 140149.06752752085);
            TestUtils.AreEqual(a2 * b2, r2);

            double a3 = (-91.380354208583185);
            double3x2 b3 = double3x2(-9.7301256701956049, 47.952799104132168, 6.1749904184486013, 201.40935883364148, 502.88858747058021, 504.705544468344);
            double3x2 r3 = double3x2(889.14233023650218, -4381.9437674286282, -564.27281167244053, -18404.858551141791, -45954.137250515691, -46120.171424553104);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_div_wide_wide()
        {
            double3x2 a0 = double3x2(6.8207170995049182, -338.63085881743154, 497.60438155457587, -491.26991938579357, 173.45471604794955, -441.55652376709344);
            double3x2 b0 = double3x2(-352.73601762984697, 302.20974292522749, -489.09516810304262, -380.891595779402, 289.64650525229354, -216.57524715018235);
            double3x2 r0 = double3x2(-0.019336605162511136, -1.1205160215539951, -1.0173978685672489, 1.2897893385663424, 0.59884967677018452, 2.038813435872012);
            TestUtils.AreEqual(a0 / b0, r0);

            double3x2 a1 = double3x2(321.01690331148768, -41.6019933417449, -40.212614316592294, -169.79586728373351, -179.33992084271273, -433.40119119798817);
            double3x2 b1 = double3x2(-289.15099658125592, 198.97850022044895, -292.72057856839177, 9.0584442657690261, -29.890428318591034, 257.63897216396356);
            double3x2 r1 = double3x2(-1.1102050731520718, -0.20907783150266945, 0.137375426467316, -18.744484406155202, 5.9999113740089225, -1.6822035407056666);
            TestUtils.AreEqual(a1 / b1, r1);

            double3x2 a2 = double3x2(-425.29711576239072, 335.54366675743074, 455.98288771881857, -438.4312343254831, -475.07163332173212, 398.719868607223);
            double3x2 b2 = double3x2(-340.16841117486752, 33.712226168118491, 281.61100186110059, -384.688157499157, 457.44125506721491, 228.60738502657387);
            double3x2 r2 = double3x2(1.2502545850554061, 9.9531744087180147, 1.6191941533013106, 1.1397055661284397, -1.0385412947765864, 1.7441250577310741);
            TestUtils.AreEqual(a2 / b2, r2);

            double3x2 a3 = double3x2(372.92769616326677, 31.940642133327515, 472.51835249015983, -31.912778153974898, 381.816795765337, 72.120304856505413);
            double3x2 b3 = double3x2(-300.2760046926681, -168.69059069859355, -59.644292620776355, 320.39064875263284, 0.85657191316443, -483.93725298528432);
            double3x2 r3 = double3x2(-1.2419497073865677, -0.18934453902290957, -7.92227272263036, -0.099605835183454783, 445.7498429463941, -0.14902821473572);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_div_wide_scalar()
        {
            double3x2 a0 = double3x2(-179.14525779483154, 46.961132786684288, 127.57277470807207, 391.67960924267754, 461.32760665441288, 150.55543119765605);
            double b0 = (-93.365409179295114);
            double3x2 r0 = double3x2(1.9187540585915315, -0.50298213438450257, -1.3663815735342255, -4.1951255040344977, -4.9410976796395571, -1.612539724519769);
            TestUtils.AreEqual(a0 / b0, r0);

            double3x2 a1 = double3x2(18.422910937305005, 37.5003321345431, 121.80905800769528, -22.542152176863567, 398.16749901239177, -331.00037280237319);
            double b1 = (169.15858395824148);
            double3x2 r1 = double3x2(0.10890911064763281, 0.22168743233154778, 0.72008795035648376, -0.13326046866429389, 2.3538119656445189, -1.956745942517963);
            TestUtils.AreEqual(a1 / b1, r1);

            double3x2 a2 = double3x2(-498.45196341837379, -329.66696110817929, -191.85219892852575, -35.942829387235861, -369.29486792594889, -414.91745753535884);
            double b2 = (502.30602597738891);
            double3x2 r2 = double3x2(-0.99232726194849874, -0.65630700023299959, -0.381942857554255, -0.07155564044309079, -0.73519896005104379, -0.82602524373067376);
            TestUtils.AreEqual(a2 / b2, r2);

            double3x2 a3 = double3x2(94.4215715371173, 102.39064626693289, -167.40129502462281, -121.16902619282206, -99.9818475712006, 392.3854484001107);
            double b3 = (-20.672259101957195);
            double3x2 r3 = double3x2(-4.5675497327806669, -4.9530458070370651, 8.0978713646624954, 5.8614312831126467, 4.8365225628259747, -18.981256304153071);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_div_scalar_wide()
        {
            double a0 = (451.8446936327241);
            double3x2 b0 = double3x2(-95.065177723330066, 207.048737383936, 502.38401603250952, 62.0412257006584, -110.84549408352257, -332.61274949303493);
            double3x2 r0 = double3x2(-4.7529989892590958, 2.1823107899221643, 0.89940101438952824, 7.2829749659173642, -4.07634696717809, -1.3584707571234758);
            TestUtils.AreEqual(a0 / b0, r0);

            double a1 = (224.27937065077913);
            double3x2 b1 = double3x2(-492.73451804217626, 435.03288027040333, 503.81881570435075, 291.34940757013362, 88.024186890583564, 328.70278874444909);
            double3x2 r1 = double3x2(-0.45517284143584524, 0.51554579164538972, 0.44515878260170016, 0.76979518345782327, 2.5479289110567351, 0.68231660433263241);
            TestUtils.AreEqual(a1 / b1, r1);

            double a2 = (50.010147356432981);
            double3x2 b2 = double3x2(-509.81615304845207, 158.94752819787129, 68.434325011649321, -237.56858002281217, 32.995745435820822, 169.61043103486782);
            double3x2 r2 = double3x2(-0.098094473973405275, 0.31463306113308115, 0.73077578171363478, -0.21050825555985067, 1.5156544183463421, 0.29485301730146596);
            TestUtils.AreEqual(a2 / b2, r2);

            double a3 = (-389.98006910364148);
            double3x2 b3 = double3x2(-383.04868167594481, 42.412895937642475, 3.117699386141112, -432.51841016882958, 253.81393134492168, -448.56073996450789);
            double3x2 r3 = double3x2(1.0180953172776106, -9.1948465315127113, -125.08584722349828, 0.901649640650941, -1.536480157086713, 0.86940303588427836);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_mod_wide_wide()
        {
            double3x2 a0 = double3x2(157.55858881657878, 504.93797158866096, 73.007050786636341, -387.60870975424007, 278.54447830773165, 282.22817314892461);
            double3x2 b0 = double3x2(180.25016530801088, -41.479829092267835, -308.6731518752282, -326.86006203613249, 411.58822674843861, 429.41059680907551);
            double3x2 r0 = double3x2(157.55858881657878, 7.18002248144694, 73.007050786636341, -60.748647718107577, 278.54447830773165, 282.22817314892461);
            TestUtils.AreEqual(a0 % b0, r0);

            double3x2 a1 = double3x2(57.086228635667908, -63.974762707936918, -345.26900379046288, -380.71618407811792, 470.28039787257114, -480.3074555249454);
            double3x2 b1 = double3x2(471.14820144658358, 226.1443618396969, 423.90749450396163, -300.951750657033, 67.241354258377783, -488.69098328458659);
            double3x2 r1 = double3x2(57.086228635667908, -63.974762707936918, -345.26900379046288, -79.7644334210849, 66.832272322304448, -480.3074555249454);
            TestUtils.AreEqual(a1 % b1, r1);

            double3x2 a2 = double3x2(65.251441747532908, 503.11623811308118, 387.60585540700981, -281.1812771676021, 89.576535028208241, -216.2852171474533);
            double3x2 b2 = double3x2(-440.438140835817, 508.522422788908, -108.23840456280783, 93.468003078116112, -20.988763103722022, 301.87540712108625);
            double3x2 r2 = double3x2(65.251441747532908, 503.11623811308118, 62.890641718586323, -0.77726793325376775, 5.6214826133201541, -216.2852171474533);
            TestUtils.AreEqual(a2 % b2, r2);

            double3x2 a3 = double3x2(95.61564044636475, 327.34658900245404, -362.11293976479811, 124.85387736412406, 461.39737794427083, 352.725561544637);
            double3x2 b3 = double3x2(142.588480300544, 439.71043392629849, 61.127557544562706, -37.541476982432187, -345.7211422145931, -253.64354741463603);
            double3x2 r3 = double3x2(95.61564044636475, 327.34658900245404, -56.475152041984586, 12.2294464168275, 115.67623572967773, 99.082014130000971);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_mod_wide_scalar()
        {
            double3x2 a0 = double3x2(42.072420378249376, 313.0502714184347, 111.52063970990514, 131.21203214079696, -460.44087026102511, -436.48505970299482);
            double b0 = (260.27255332668892);
            double3x2 r0 = double3x2(42.072420378249376, 52.777718091745783, 111.52063970990514, 131.21203214079696, -200.16831693433619, -176.2125063763059);
            TestUtils.AreEqual(a0 % b0, r0);

            double3x2 a1 = double3x2(-221.73172031237357, 24.183113824661405, -238.94258724848862, 335.60093203913459, -240.83247792014504, -12.394702678730084);
            double b1 = (-316.39089479874394);
            double3x2 r1 = double3x2(-221.73172031237357, 24.183113824661405, -238.94258724848862, 19.210037240390648, -240.83247792014504, -12.394702678730084);
            TestUtils.AreEqual(a1 % b1, r1);

            double3x2 a2 = double3x2(-152.48966867872031, -240.07150017473452, -51.555152678655077, 179.87273343832828, 15.702755220095924, 179.91509183678545);
            double b2 = (-387.4286050216428);
            double3x2 r2 = double3x2(-152.48966867872031, -240.07150017473452, -51.555152678655077, 179.87273343832828, 15.702755220095924, 179.91509183678545);
            TestUtils.AreEqual(a2 % b2, r2);

            double3x2 a3 = double3x2(453.63498398924014, 213.752941946384, 143.58056909571428, 490.956368913388, 426.85480018465535, -495.03063630267542);
            double b3 = (-76.825290477287638);
            double3x2 r3 = double3x2(69.508531602801952, 60.102360991808723, 66.755278618426644, 30.004626049662193, 42.728347798217158, -34.078893438949592);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_mod_scalar_wide()
        {
            double a0 = (-162.94581063228929);
            double3x2 b0 = double3x2(171.12575991969823, 159.20793659948185, 491.34807061187371, -136.53971416155792, 84.487527171376883, 414.39111657365743);
            double3x2 r0 = double3x2(-162.94581063228929, -3.73787403280744, -162.94581063228929, -26.40609647073137, -78.458283460912412, -162.94581063228929);
            TestUtils.AreEqual(a0 % b0, r0);

            double a1 = (-85.030597011107318);
            double3x2 b1 = double3x2(161.98958857450145, -7.6080162560604663, -85.22386912499735, 160.84123547414379, -234.48312078904507, 114.87764578446638);
            double3x2 r1 = double3x2(-85.030597011107318, -1.3424181944421889, -85.030597011107318, -85.030597011107318, -85.030597011107318, -85.030597011107318);
            TestUtils.AreEqual(a1 % b1, r1);

            double a2 = (-40.548714895056889);
            double3x2 b2 = double3x2(-85.743732253901555, -235.70891796597692, -135.85116511948928, 391.48698371997432, 240.69596182587372, -81.431793489228824);
            double3x2 r2 = double3x2(-40.548714895056889, -40.548714895056889, -40.548714895056889, -40.548714895056889, -40.548714895056889, -40.548714895056889);
            TestUtils.AreEqual(a2 % b2, r2);

            double a3 = (-398.18649286692334);
            double3x2 b3 = double3x2(-209.34607300970055, -431.59312625955471, 411.74689240555597, -119.3262727816246, -296.96579827785763, -319.0280036027674);
            double3x2 r3 = double3x2(-188.8404198572228, -398.18649286692334, -398.18649286692334, -40.207674522049558, -101.22069458906572, -79.158489264155946);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_plus()
        {
            double3x2 a0 = double3x2(150.59985477784642, -137.85511237841803, 439.0911616939544, 401.84926075574447, 401.8235406362561, -299.61462010984059);
            double3x2 r0 = double3x2(150.59985477784642, -137.85511237841803, 439.0911616939544, 401.84926075574447, 401.8235406362561, -299.61462010984059);
            TestUtils.AreEqual(+a0, r0);

            double3x2 a1 = double3x2(-364.62483113101905, -135.17793161011207, 188.5903004093982, -458.63783023256707, -176.78832515365832, 67.193958552178856);
            double3x2 r1 = double3x2(-364.62483113101905, -135.17793161011207, 188.5903004093982, -458.63783023256707, -176.78832515365832, 67.193958552178856);
            TestUtils.AreEqual(+a1, r1);

            double3x2 a2 = double3x2(-202.57394585505779, 466.91704891012841, 369.19699805285643, 453.94577071347544, 288.73217619989634, 27.980096114790058);
            double3x2 r2 = double3x2(-202.57394585505779, 466.91704891012841, 369.19699805285643, 453.94577071347544, 288.73217619989634, 27.980096114790058);
            TestUtils.AreEqual(+a2, r2);

            double3x2 a3 = double3x2(-277.21329058204469, -418.33454509188164, -85.528715888750128, 184.96412214309169, -113.68165474463331, -496.36373471485626);
            double3x2 r3 = double3x2(-277.21329058204469, -418.33454509188164, -85.528715888750128, 184.96412214309169, -113.68165474463331, -496.36373471485626);
            TestUtils.AreEqual(+a3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_neg()
        {
            double3x2 a0 = double3x2(-169.28116782441788, -377.02522366914206, 36.614130752447068, -258.38245713821726, 469.91457460351035, 388.94596380225664);
            double3x2 r0 = double3x2(169.28116782441788, 377.02522366914206, -36.614130752447068, 258.38245713821726, -469.91457460351035, -388.94596380225664);
            TestUtils.AreEqual(-a0, r0);

            double3x2 a1 = double3x2(350.96924678933306, 494.42163037435228, 201.18688664268086, -60.813943175978011, 313.88018789602449, 381.03574937443977);
            double3x2 r1 = double3x2(-350.96924678933306, -494.42163037435228, -201.18688664268086, 60.813943175978011, -313.88018789602449, -381.03574937443977);
            TestUtils.AreEqual(-a1, r1);

            double3x2 a2 = double3x2(327.17948142028388, 462.13620469632383, 448.669835537984, 339.4568738133911, 93.5053418118066, 385.74091667017944);
            double3x2 r2 = double3x2(-327.17948142028388, -462.13620469632383, -448.669835537984, -339.4568738133911, -93.5053418118066, -385.74091667017944);
            TestUtils.AreEqual(-a2, r2);

            double3x2 a3 = double3x2(-37.034369247515883, -14.980153806032661, -116.37013607675681, 258.54646241783462, 369.49387114564604, 292.99096097284507);
            double3x2 r3 = double3x2(37.034369247515883, 14.980153806032661, 116.37013607675681, -258.54646241783462, -369.49387114564604, -292.99096097284507);
            TestUtils.AreEqual(-a3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_prefix_inc()
        {
            double3x2 a0 = double3x2(86.5853612826138, 161.589808777715, 443.92963978458647, -338.26843587414754, -34.558641688227, -368.56747858997784);
            double3x2 r0 = double3x2(87.5853612826138, 162.589808777715, 444.92963978458647, -337.26843587414754, -33.558641688227, -367.56747858997784);
            TestUtils.AreEqual(++a0, r0);

            double3x2 a1 = double3x2(359.14160864387713, 157.23312409093285, 25.361956369766062, -484.20042751925087, 346.04049341103087, 381.77565520898236);
            double3x2 r1 = double3x2(360.14160864387713, 158.23312409093285, 26.361956369766062, -483.20042751925087, 347.04049341103087, 382.77565520898236);
            TestUtils.AreEqual(++a1, r1);

            double3x2 a2 = double3x2(244.66301571794929, -105.41791515490877, 218.37651906645692, 166.64780505311103, -153.75656921870848, 352.00194160640331);
            double3x2 r2 = double3x2(245.66301571794929, -104.41791515490877, 219.37651906645692, 167.64780505311103, -152.75656921870848, 353.00194160640331);
            TestUtils.AreEqual(++a2, r2);

            double3x2 a3 = double3x2(75.307212626238879, -484.35102032327609, 49.864846014354725, -269.91598070315831, -205.47034678490382, 375.42758410769864);
            double3x2 r3 = double3x2(76.307212626238879, -483.35102032327609, 50.864846014354725, -268.91598070315831, -204.47034678490382, 376.42758410769864);
            TestUtils.AreEqual(++a3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_postfix_inc()
        {
            double3x2 a0 = double3x2(-281.78208912619488, 215.34223971857796, 120.82084923648313, -325.35367003332533, -179.7229221704057, 44.563681384811048);
            double3x2 r0 = double3x2(-281.78208912619488, 215.34223971857796, 120.82084923648313, -325.35367003332533, -179.7229221704057, 44.563681384811048);
            TestUtils.AreEqual(a0++, r0);

            double3x2 a1 = double3x2(-375.17335360831271, 329.52426472749755, -341.15366927774329, -130.47432786341494, 277.30739582577132, -15.209680325914974);
            double3x2 r1 = double3x2(-375.17335360831271, 329.52426472749755, -341.15366927774329, -130.47432786341494, 277.30739582577132, -15.209680325914974);
            TestUtils.AreEqual(a1++, r1);

            double3x2 a2 = double3x2(-362.90921490402388, 20.483843097688577, -132.57326060746482, -43.343021174586852, 63.972996026264923, 423.37782903359175);
            double3x2 r2 = double3x2(-362.90921490402388, 20.483843097688577, -132.57326060746482, -43.343021174586852, 63.972996026264923, 423.37782903359175);
            TestUtils.AreEqual(a2++, r2);

            double3x2 a3 = double3x2(413.74356026842429, 121.25533944054291, -293.28351678200227, -121.77388840623848, 337.21565143075566, 64.448384553402889);
            double3x2 r3 = double3x2(413.74356026842429, 121.25533944054291, -293.28351678200227, -121.77388840623848, 337.21565143075566, 64.448384553402889);
            TestUtils.AreEqual(a3++, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_prefix_dec()
        {
            double3x2 a0 = double3x2(340.00185433961542, 496.07084750387389, 288.38421048241867, 183.6946252247759, -353.61481230036111, 398.28191751906741);
            double3x2 r0 = double3x2(339.00185433961542, 495.07084750387389, 287.38421048241867, 182.6946252247759, -354.61481230036111, 397.28191751906741);
            TestUtils.AreEqual(--a0, r0);

            double3x2 a1 = double3x2(-240.59158407924303, 276.58867395882896, 311.9143594763774, -305.80371084148237, -268.38814676384823, 349.17022506760907);
            double3x2 r1 = double3x2(-241.59158407924303, 275.58867395882896, 310.9143594763774, -306.80371084148237, -269.38814676384823, 348.17022506760907);
            TestUtils.AreEqual(--a1, r1);

            double3x2 a2 = double3x2(468.03655383923865, 429.5580677602245, -164.93854029706614, 278.54028071022606, -142.6552203365859, 96.548939034598334);
            double3x2 r2 = double3x2(467.03655383923865, 428.5580677602245, -165.93854029706614, 277.54028071022606, -143.6552203365859, 95.548939034598334);
            TestUtils.AreEqual(--a2, r2);

            double3x2 a3 = double3x2(-142.57021743737636, 225.87567363766755, -388.63057416893105, -455.29489419203946, -248.5845054353515, 384.13169425732065);
            double3x2 r3 = double3x2(-143.57021743737636, 224.87567363766755, -389.63057416893105, -456.29489419203946, -249.5845054353515, 383.13169425732065);
            TestUtils.AreEqual(--a3, r3);
        }

        [TestCompiler]
        public static void double3x2_operator_postfix_dec()
        {
            double3x2 a0 = double3x2(-148.11175806266806, 252.84978473039803, -106.15790395911688, 132.64859277226435, -370.72375100232836, 343.31118575824019);
            double3x2 r0 = double3x2(-148.11175806266806, 252.84978473039803, -106.15790395911688, 132.64859277226435, -370.72375100232836, 343.31118575824019);
            TestUtils.AreEqual(a0--, r0);

            double3x2 a1 = double3x2(-321.15781441384826, 330.95722190055869, 425.62580533773905, 269.75451553508378, -164.30984576247158, 234.14963995392884);
            double3x2 r1 = double3x2(-321.15781441384826, 330.95722190055869, 425.62580533773905, 269.75451553508378, -164.30984576247158, 234.14963995392884);
            TestUtils.AreEqual(a1--, r1);

            double3x2 a2 = double3x2(-320.72596064243743, -310.26764288091454, -298.12717380101196, 453.00240561599026, -453.87702510034529, -134.77023107128696);
            double3x2 r2 = double3x2(-320.72596064243743, -310.26764288091454, -298.12717380101196, 453.00240561599026, -453.87702510034529, -134.77023107128696);
            TestUtils.AreEqual(a2--, r2);

            double3x2 a3 = double3x2(416.19659323999497, -239.31490599332142, -492.06114386583732, 475.65828798509119, 56.159181859418368, 24.93278385369706);
            double3x2 r3 = double3x2(416.19659323999497, -239.31490599332142, -492.06114386583732, 475.65828798509119, 56.159181859418368, 24.93278385369706);
            TestUtils.AreEqual(a3--, r3);
        }


    }
}
