//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using static Unity.Mathematics.math;
using Burst.Compiler.IL.Tests;

namespace Unity.Mathematics.Tests
{
    [TestFixture]
    public class TestDouble3x3
    {
        [TestCompiler]
        public static void double3x3_zero()
        {
            TestUtils.AreEqual(double3x3.zero.c0.x, 0.0);
            TestUtils.AreEqual(double3x3.zero.c0.y, 0.0);
            TestUtils.AreEqual(double3x3.zero.c0.z, 0.0);
            TestUtils.AreEqual(double3x3.zero.c1.x, 0.0);
            TestUtils.AreEqual(double3x3.zero.c1.y, 0.0);
            TestUtils.AreEqual(double3x3.zero.c1.z, 0.0);
            TestUtils.AreEqual(double3x3.zero.c2.x, 0.0);
            TestUtils.AreEqual(double3x3.zero.c2.y, 0.0);
            TestUtils.AreEqual(double3x3.zero.c2.z, 0.0);
        }

        [TestCompiler]
        public static void double3x3_identity()
        {
            TestUtils.AreEqual(double3x3.identity.c0.x, 1.0);
            TestUtils.AreEqual(double3x3.identity.c0.y, 0.0);
            TestUtils.AreEqual(double3x3.identity.c0.z, 0.0);
            TestUtils.AreEqual(double3x3.identity.c1.x, 0.0);
            TestUtils.AreEqual(double3x3.identity.c1.y, 1.0);
            TestUtils.AreEqual(double3x3.identity.c1.z, 0.0);
            TestUtils.AreEqual(double3x3.identity.c2.x, 0.0);
            TestUtils.AreEqual(double3x3.identity.c2.y, 0.0);
            TestUtils.AreEqual(double3x3.identity.c2.z, 1.0);
        }

        [TestCompiler]
        public static void double3x3_operator_equal_wide_wide()
        {
            double3x3 a0 = double3x3(331.74411336134381, -417.68328280825324, -438.45087620171296, -57.990659979167674, -183.11340030613979, 72.322805676759572, -292.70611562053955, -181.37693437439248, 43.847759028825749);
            double3x3 b0 = double3x3(-426.58283277348744, 431.34453149854414, 263.33917987688403, -309.39192905528091, 391.19957441426789, -468.23727748740339, -389.91158145941404, -192.67202505500615, -8.9501826804830671);
            bool3x3 r0 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            double3x3 a1 = double3x3(481.28738020420417, 258.42531287783072, 352.58044759956215, 70.853262219044041, -41.08313061719906, -501.14396285505217, 469.41773794098651, 379.49792998819521, -174.45778878706403);
            double3x3 b1 = double3x3(-339.08699599797228, 104.67790680037717, -443.50479933410173, 358.64011566650129, -415.74920602131135, -141.96963483745679, 379.13005107414449, 56.103776719469465, 132.80950385556071);
            bool3x3 r1 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            double3x3 a2 = double3x3(-456.50745055475619, 172.21558841141666, 258.43929326647856, 509.82020616429872, -199.17567572331785, 194.29238781439722, 448.902596921149, -419.46158452493211, -267.882815247347);
            double3x3 b2 = double3x3(-233.77619158186775, -159.6457365302582, 369.80502408081895, 41.048255224269042, 316.68433752501585, -258.03174722289282, -239.09775721239754, -181.01363929594572, 241.82424961860488);
            bool3x3 r2 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            double3x3 a3 = double3x3(405.61311526112866, -267.16328037304959, -151.5087307204999, -207.57768950591685, -320.2479662002288, 433.78183647328137, -335.73520747559854, 296.54620732765, -248.16457450024996);
            double3x3 b3 = double3x3(-284.93379343903337, -486.17848347415145, -285.09099186821425, -154.24145395785638, 470.856234531317, 205.1927546026152, 163.19010765999099, 197.81356177004682, -234.3760493893065);
            bool3x3 r3 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_equal_wide_scalar()
        {
            double3x3 a0 = double3x3(327.10191431972282, 440.46724745280449, -443.74519440333603, 325.54625597854431, 435.37174793489828, 58.382070330149531, -398.43499369101369, 377.06661551867921, 445.50211235764539);
            double b0 = (342.44057504387604);
            bool3x3 r0 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            double3x3 a1 = double3x3(-17.79271484249864, -350.23152200795312, 450.23677775367946, 14.983312852207291, -504.42695665006852, 412.48854870930711, 454.70332476808846, 289.29169024587225, 356.9315957300978);
            double b1 = (-92.372576994994915);
            bool3x3 r1 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            double3x3 a2 = double3x3(413.76286263659733, -481.17156742567738, 355.56782905923569, -235.84088026538529, 322.29774561631393, 114.38103371224418, 352.20176927754733, -335.6345023287621, 273.71216858258106);
            double b2 = (233.37280165095478);
            bool3x3 r2 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            double3x3 a3 = double3x3(98.975350664451412, 260.326863171685, -154.79795534666533, -40.935995359409617, 482.79028891156906, -244.18042504237053, 150.70556433066054, 46.664298794541651, 510.54369020394222);
            double b3 = (-173.68302806358923);
            bool3x3 r3 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_equal_scalar_wide()
        {
            double a0 = (430.78112884554139);
            double3x3 b0 = double3x3(-434.72746225573468, 103.73032074036553, -263.03657090991578, -224.56018291439869, 204.11080298391676, 196.56822476003697, -424.75656743755405, 467.45050332855919, -45.433633110222218);
            bool3x3 r0 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            double a1 = (138.19161063907279);
            double3x3 b1 = double3x3(181.06193717804831, -449.21580073294035, -335.15445700993507, -77.466203964066779, 107.90240125912351, -330.9516920200324, -115.29893904332954, 244.52287136973951, -481.47620724210338);
            bool3x3 r1 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            double a2 = (134.603816333508);
            double3x3 b2 = double3x3(-208.27164492768776, 420.91620250275184, -464.2388801352302, 64.914991170594021, 62.831700115851959, -429.80427165972264, -5.5338294531841825, 21.240297088977059, 261.03865659471535);
            bool3x3 r2 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            double a3 = (-30.166149391870078);
            double3x3 b3 = double3x3(-380.67043489062712, 235.49166285036677, -322.0374516556214, 450.0082592675501, 375.54321330391952, -369.73558562329765, 278.30794228162051, 429.9319219207074, 26.011376631451526);
            bool3x3 r3 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_not_equal_wide_wide()
        {
            double3x3 a0 = double3x3(19.253994712258645, 121.33544045376379, 468.30967615000418, -212.3654521500531, -410.63349337625948, 507.53425359517996, 52.201180720795492, -319.64238682372604, -448.90629670066119);
            double3x3 b0 = double3x3(-249.06633507882538, -19.04659057550441, 323.62254896928675, 294.94198026086292, -492.46095990224785, -166.48327048424784, 421.19530482832124, 87.662903588108179, 193.87513670412602);
            bool3x3 r0 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            double3x3 a1 = double3x3(255.3703111407209, -70.462687286763753, -18.913782366976989, -131.6240962164589, 288.07495202127609, 290.71794785685745, 191.28321585025787, -220.54244790810276, 404.79477591290822);
            double3x3 b1 = double3x3(-279.28983200680921, 158.5136307023995, 426.63510413963115, -404.54781813386262, 480.74048040841728, -184.48030838020162, 355.44509212833134, 414.67556948898152, -134.75917131023442);
            bool3x3 r1 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            double3x3 a2 = double3x3(-266.0124501036538, 258.96735704083335, -375.4471391995657, 124.13765889226352, -395.24205011652879, 154.0925844433217, -270.39569557383459, 265.82249391536345, -70.626431736455515);
            double3x3 b2 = double3x3(-458.71905324362172, -43.342498561061234, -446.39871498867808, -50.549474501306861, -142.7746928403036, -462.01238772925569, 511.04468727067331, -497.39931058203769, -267.93794239123258);
            bool3x3 r2 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            double3x3 a3 = double3x3(-431.10743757295768, 281.84744728815156, -399.42249435904552, -476.45240305198934, -507.77596759599447, -171.74417575250573, -457.94082257614508, -495.59947108458704, -158.32464630823802);
            double3x3 b3 = double3x3(372.74036400985926, 206.70033631413264, 360.8574942838668, -181.10593255847039, 285.8468150039422, -359.91083853315138, 149.52561123181397, 327.11678448650832, -502.18724345703947);
            bool3x3 r3 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_not_equal_wide_scalar()
        {
            double3x3 a0 = double3x3(-418.02227206622354, 231.44822632123169, -469.47851083682781, -94.974084183096011, -376.08437770236486, -428.11901088623284, 492.92776774471986, -91.333830160709965, 80.418608941332764);
            double b0 = (-206.33659205508258);
            bool3x3 r0 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            double3x3 a1 = double3x3(-124.3909161670091, 353.96103851588487, 170.98932441090665, -494.89575242199737, 181.01510843123083, -180.17698510930734, 324.90474930634014, 365.8997806822415, 86.0467493934774);
            double b1 = (-409.29052205071343);
            bool3x3 r1 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            double3x3 a2 = double3x3(75.14543465298857, 504.5179734195201, 385.47710985014078, -221.90603195033316, 237.35153805341179, 401.89356560348233, -418.38730378560132, -235.43595348831076, 449.5686025328788);
            double b2 = (-505.78051423736872);
            bool3x3 r2 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            double3x3 a3 = double3x3(242.23383652522875, 434.63768430922073, 111.69043713048586, 503.15949868744212, 450.92791363733261, -376.86975663568347, 264.28460109619641, -50.702452921635654, -102.23515491477917);
            double b3 = (-117.3276942322625);
            bool3x3 r3 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_not_equal_scalar_wide()
        {
            double a0 = (357.34340898941434);
            double3x3 b0 = double3x3(192.97637400076553, -323.1933154180615, -25.125236284511743, -270.50307739456326, -454.42681977452094, -458.81890103724731, -274.53837049870674, 127.64221078140758, -43.887720366887606);
            bool3x3 r0 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            double a1 = (-179.47230180514617);
            double3x3 b1 = double3x3(498.28768920259904, -333.81438866900953, -169.48795779491212, -146.25878126279395, -33.0286543523095, 156.74361498502253, -285.2065595524416, -10.882838969529985, 259.28342473659825);
            bool3x3 r1 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            double a2 = (-469.94077060648277);
            double3x3 b2 = double3x3(46.414288304007755, -415.38435359270511, 311.547697450755, 244.51599394740356, 110.52776794812075, -290.50965823349992, -53.821174408225886, -362.34378235523764, -455.78517720465788);
            bool3x3 r2 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            double a3 = (-199.08631787034045);
            double3x3 b3 = double3x3(298.1869553524009, 319.69636145219965, 346.528325480655, -314.93358269097916, -106.49481849861093, 324.17685929135268, 394.8192629268483, -341.91522971816141, -461.86253354598887);
            bool3x3 r3 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_less_wide_wide()
        {
            double3x3 a0 = double3x3(487.82488011188104, -508.92173480844207, 53.876066948229436, 443.78694531125336, -81.078602590169112, 103.16550521886234, -496.19975470760824, 30.001322044991525, 490.88452862709971);
            double3x3 b0 = double3x3(453.09734770893, -123.83057814642348, 492.75013636646338, 434.4634313222316, -402.46478933955768, -480.75231598352656, 317.30066051953509, 175.82104428849232, 301.86634244670461);
            bool3x3 r0 = bool3x3(false, true, true, false, false, false, true, true, false);
            TestUtils.AreEqual(a0 < b0, r0);

            double3x3 a1 = double3x3(485.69708298412013, -360.6310734043974, -442.65436169256191, -310.85801544359794, -142.11604244174254, -131.92170983735554, -279.9177059046541, -335.16161338200868, 207.23738751524934);
            double3x3 b1 = double3x3(77.7766850356835, -188.5760563298017, 479.33786819844408, -393.34224600034872, 21.696369419664279, 151.5708139648525, -115.47818117750722, -417.10818715445146, -272.83872545549588);
            bool3x3 r1 = bool3x3(false, true, true, false, true, true, true, false, false);
            TestUtils.AreEqual(a1 < b1, r1);

            double3x3 a2 = double3x3(267.39401996666288, 259.68653762512213, 197.36238655697662, 378.09459632360119, -358.61897652159394, -187.33231910845836, -367.85962956392189, -268.33903253653045, 301.92506398909029);
            double3x3 b2 = double3x3(210.97852788259206, -355.15476028768103, 183.07980808200307, -260.30830037794465, 312.9526771572198, 383.91627305742179, -170.57874759034195, 102.49595479969673, 477.08598564429485);
            bool3x3 r2 = bool3x3(false, false, false, false, true, true, true, true, true);
            TestUtils.AreEqual(a2 < b2, r2);

            double3x3 a3 = double3x3(-455.97775790466824, 383.75170940149189, -324.97256270282554, 122.86617880820586, 54.385141159587192, 389.45291656509642, 366.40929739848207, -401.93672699571437, 420.42702432182944);
            double3x3 b3 = double3x3(164.40093644168269, -476.25960300688615, -64.781687051421841, -89.909424108410917, 279.35058344497838, -293.35631360363044, 432.90843244684322, -209.15995249951254, -232.09399925549235);
            bool3x3 r3 = bool3x3(true, false, true, false, true, false, true, true, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_less_wide_scalar()
        {
            double3x3 a0 = double3x3(18.15358901869206, -409.34645695674533, 180.78649028613529, -185.15496572533385, 228.26473127504096, 124.1257570367892, 265.74384534812714, -307.54556694046858, 493.12318371847425);
            double b0 = (152.320865940452);
            bool3x3 r0 = bool3x3(true, true, false, true, false, true, false, true, false);
            TestUtils.AreEqual(a0 < b0, r0);

            double3x3 a1 = double3x3(36.373661296616206, 85.934578220329513, -89.371177953375138, -36.894802825942065, -491.25716256129425, -193.74187311611223, -320.66100302369381, 424.3283214160839, -392.51732057729612);
            double b1 = (131.67983132772144);
            bool3x3 r1 = bool3x3(true, true, true, true, true, true, true, false, true);
            TestUtils.AreEqual(a1 < b1, r1);

            double3x3 a2 = double3x3(435.07643553012815, 350.03270141688768, -108.90917997663337, -9.3816139741715, 109.85700731624706, -377.40399592807705, -91.781760973754217, -197.49953302997142, -324.01638212987052);
            double b2 = (181.86553605919028);
            bool3x3 r2 = bool3x3(false, false, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 < b2, r2);

            double3x3 a3 = double3x3(-414.5658330463645, -107.00095062470109, 364.89461796586147, 246.61408888856602, 337.64567271696671, -130.24928933486774, 309.73714723705177, 219.85096774802128, -29.494020714188935);
            double b3 = (-141.85588628698878);
            bool3x3 r3 = bool3x3(true, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_less_scalar_wide()
        {
            double a0 = (416.68128915162822);
            double3x3 b0 = double3x3(-105.38907938142728, -389.249608459533, 408.84688944781522, -87.039535324573308, 268.69133508796403, -470.20163295706811, 271.31567419288479, -170.32271750752011, -156.5984128250733);
            bool3x3 r0 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 < b0, r0);

            double a1 = (-0.288699388638463);
            double3x3 b1 = double3x3(72.090836796951862, -54.429979111268153, 191.60324797015789, 370.54399149983374, 283.23240412549694, -362.76201956475245, -145.50098688225307, 315.12990894686891, 340.82956067697592);
            bool3x3 r1 = bool3x3(true, false, true, true, true, false, false, true, true);
            TestUtils.AreEqual(a1 < b1, r1);

            double a2 = (-60.229261664780438);
            double3x3 b2 = double3x3(-194.84369883073668, -261.05675828692353, -246.82587897350356, 91.537619394966214, -233.52279077913744, 16.32558513447907, -44.038489123824263, 49.527866625007164, -161.31599839092979);
            bool3x3 r2 = bool3x3(false, false, false, true, false, true, true, true, false);
            TestUtils.AreEqual(a2 < b2, r2);

            double a3 = (230.16357361067253);
            double3x3 b3 = double3x3(-341.87553636258258, 87.1088130879723, 229.06688963112742, 53.482747818102439, 353.14384834521627, -435.01465841523122, -349.59581749029263, 272.96419752434088, -335.46744338398219);
            bool3x3 r3 = bool3x3(false, false, false, false, true, false, false, true, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_greater_wide_wide()
        {
            double3x3 a0 = double3x3(-188.03303131276419, 234.30020367088741, -56.305944230549926, 240.95838248029281, 501.48760938154885, -303.42498435798336, -305.509098910498, -470.74254177079655, -305.09075155159962);
            double3x3 b0 = double3x3(-17.400830992218516, -59.539615897247415, -24.285316717012449, 222.38749109133494, -207.17042574992888, 365.54648630951829, 183.57330068553483, -23.080710183400981, 337.16379920447423);
            bool3x3 r0 = bool3x3(false, true, false, true, true, false, false, false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            double3x3 a1 = double3x3(26.045478117673383, 169.99735816288614, -498.38803433738093, 270.14296186628894, 69.658893379223969, -163.97516043669322, 273.17413605059221, 193.871112675346, -157.93932945930368);
            double3x3 b1 = double3x3(175.81176026901778, -8.5140435735294773, -125.86538249154825, -212.85705981629764, 12.657097107105415, 134.17510539580837, -101.51198606449736, -505.14506053605351, -150.59660417893741);
            bool3x3 r1 = bool3x3(false, true, false, true, true, false, true, true, false);
            TestUtils.AreEqual(a1 > b1, r1);

            double3x3 a2 = double3x3(439.05371185720605, 414.23264165140347, -246.5580800727746, 326.22428217820095, -457.29665610627114, -338.94572059202278, 310.63012161414611, -134.70940715386968, 485.68231581416092);
            double3x3 b2 = double3x3(286.16057862255752, 358.07543508991387, 105.75404195941712, 61.524060039559458, 144.40534288455046, -298.4254330594211, 485.26323126501552, -341.9769438905534, 74.833457743205827);
            bool3x3 r2 = bool3x3(true, true, false, true, false, false, false, true, true);
            TestUtils.AreEqual(a2 > b2, r2);

            double3x3 a3 = double3x3(-400.9538278062613, -31.012796654837587, 182.3174222364637, 418.05578990376364, -125.63734847197185, 31.655438199478908, -340.32462636582773, -170.48736985516149, 49.865577959392908);
            double3x3 b3 = double3x3(332.48101226076528, -151.8344138375644, -355.44888441425235, -283.69871462681272, -144.68749601425952, 310.087001706514, -312.36403837444448, 191.85406240814086, -79.25133017415709);
            bool3x3 r3 = bool3x3(false, true, true, true, true, false, false, false, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_greater_wide_scalar()
        {
            double3x3 a0 = double3x3(468.88079831976484, -355.42101089815657, -45.708264610594256, 407.1765884864966, 348.72522871043782, 418.54536147534168, -422.75017686502554, -364.27550928866282, 434.16361948203462);
            double b0 = (201.80273232320451);
            bool3x3 r0 = bool3x3(true, false, false, true, true, true, false, false, true);
            TestUtils.AreEqual(a0 > b0, r0);

            double3x3 a1 = double3x3(-255.04906833127563, 379.82339232965535, -346.9423937028937, -121.10213261521523, 164.48760254890078, -282.73573912435012, 437.08399340002052, 15.620958097102516, 208.42844329049274);
            double b1 = (178.80637868624478);
            bool3x3 r1 = bool3x3(false, true, false, false, false, false, true, false, true);
            TestUtils.AreEqual(a1 > b1, r1);

            double3x3 a2 = double3x3(-509.64582824597409, 127.58438569287978, 488.46164273119609, -162.21690304680584, 301.607709786672, -345.05337516640003, -76.300566470390436, -238.10045754076003, -238.17711483602278);
            double b2 = (-293.80177678437985);
            bool3x3 r2 = bool3x3(false, true, true, true, true, false, true, true, true);
            TestUtils.AreEqual(a2 > b2, r2);

            double3x3 a3 = double3x3(-42.973865767463053, 277.37788332504124, -130.11950332025043, -142.39128286316583, 100.41328458693499, -137.01717740717214, -7.1899974379641662, 237.22797428687477, 96.944584653221341);
            double b3 = (-427.23177142964295);
            bool3x3 r3 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_greater_scalar_wide()
        {
            double a0 = (137.5041864558608);
            double3x3 b0 = double3x3(-443.866813627941, 279.85275639214217, -462.40431115701995, -280.71377028185583, 120.71278553861794, -31.670009866203202, 363.42834418054122, 263.125410440902, -156.36087257990653);
            bool3x3 r0 = bool3x3(true, false, true, true, true, true, false, false, true);
            TestUtils.AreEqual(a0 > b0, r0);

            double a1 = (66.354000837706963);
            double3x3 b1 = double3x3(-303.12960519601108, 419.33739371753177, -392.72105640579065, -378.76293986791882, -398.36114258242822, -314.28247299524139, 89.530705732074921, 408.40716404859313, 303.354281805155);
            bool3x3 r1 = bool3x3(true, false, true, true, true, true, false, false, false);
            TestUtils.AreEqual(a1 > b1, r1);

            double a2 = (16.91672015977872);
            double3x3 b2 = double3x3(-425.38421293040005, 205.63918767014479, -181.90697034723451, 256.78762042559106, -272.80261839218559, -192.99896702216893, 457.53929326382433, -12.808107620481451, 421.60074849687555);
            bool3x3 r2 = bool3x3(true, false, true, false, true, true, false, true, false);
            TestUtils.AreEqual(a2 > b2, r2);

            double a3 = (-235.21027456745986);
            double3x3 b3 = double3x3(-483.95103787069723, 157.52913220111702, 193.49083027313031, -301.34031905855068, -252.42128169369943, 181.76429304003921, -272.32317055031808, 162.38368208817383, -384.40652269143914);
            bool3x3 r3 = bool3x3(true, false, false, true, true, false, true, false, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_less_equal_wide_wide()
        {
            double3x3 a0 = double3x3(333.04760686170664, 239.35082756697705, 26.569201720212163, 41.492498178729988, -162.66233904783724, -271.00273454887918, -108.98620920487969, 392.08160537857634, 314.48862924915204);
            double3x3 b0 = double3x3(46.131192944073632, -378.08232301198052, -466.77821443359284, -173.33503373588206, -482.23928640887107, 183.34649356796706, 399.07617134557859, -127.63707238418846, -118.19683914920171);
            bool3x3 r0 = bool3x3(false, false, false, false, false, true, true, false, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            double3x3 a1 = double3x3(208.10215745125993, 39.935965795040147, 458.77050254250435, -404.07500166635725, 359.3899287466844, 405.92972941227708, -463.01838967903444, -459.44302985604992, 271.79186666747171);
            double3x3 b1 = double3x3(-329.72744504070255, -208.8176177520387, 368.28686850531346, 68.845622333160463, 452.3652081211867, -255.05062997296949, 440.11260172357436, -138.22575408696463, -237.15905701236755);
            bool3x3 r1 = bool3x3(false, false, false, true, true, false, true, true, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            double3x3 a2 = double3x3(73.0907366616143, 263.65795553087162, -355.34615652418984, -184.6120685006548, -320.97342720673112, 340.87495032924926, 226.30997263002678, 186.87980827450747, -130.89232522383907);
            double3x3 b2 = double3x3(201.34304890471651, -403.24875015916712, 230.68296324027835, -57.315656450258416, 124.13107853947724, 38.174519795074389, 209.63194403873376, 236.80982863009433, 485.75283478468327);
            bool3x3 r2 = bool3x3(true, false, true, true, true, false, false, true, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            double3x3 a3 = double3x3(-315.20464744940614, 99.360690401569286, -486.00732134562327, -314.1681431802773, -67.264763148159147, 492.77910327016332, 130.78952342401703, -384.71569532189318, 311.2721909541973);
            double3x3 b3 = double3x3(29.86522461374534, 383.06395906166358, 469.72357938705181, 101.12729005754329, -419.61170907486775, -199.11533627245359, -482.76045511791506, 117.24066239094395, -398.85441965556447);
            bool3x3 r3 = bool3x3(true, true, true, true, false, false, false, true, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_less_equal_wide_scalar()
        {
            double3x3 a0 = double3x3(122.81770640370326, -283.69426144459021, -288.84764994720354, -185.45390447669376, -315.2538966216398, 279.57381428385793, -317.9591602375541, -255.569789767065, -368.80326216705294);
            double b0 = (-181.94389947780587);
            bool3x3 r0 = bool3x3(false, true, true, true, true, false, true, true, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            double3x3 a1 = double3x3(-132.48886758298096, -328.49221364059122, -115.35588770516023, -192.52138981247384, 454.18384692360826, -38.063392418466208, 509.92862081431258, -410.58454175041265, -231.74948440853018);
            double b1 = (-207.25397477264238);
            bool3x3 r1 = bool3x3(false, true, false, false, false, false, false, true, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            double3x3 a2 = double3x3(179.0554345487875, 228.50253807217928, 320.48968783043779, 65.780525953406709, 157.06309015912143, 126.58013945751827, -476.03334091419043, 441.41712280801369, -281.3482803224345);
            double b2 = (-253.84079778093883);
            bool3x3 r2 = bool3x3(false, false, false, false, false, false, true, false, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            double3x3 a3 = double3x3(145.75812751881688, 365.08533566309393, -483.5095829831015, -37.3781221086989, -168.46701892114572, 215.75490174803645, 403.47087139797907, -101.32112054774592, 129.15508538538359);
            double b3 = (403.82184500425205);
            bool3x3 r3 = bool3x3(true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_less_equal_scalar_wide()
        {
            double a0 = (-336.46568385533322);
            double3x3 b0 = double3x3(251.95838630011235, -22.858304749642627, -238.90586220422102, 284.66662014865619, -358.3240021943692, 468.53025625112014, -439.03722092091908, -197.06769594786118, -367.5955204291248);
            bool3x3 r0 = bool3x3(true, true, true, true, false, true, false, true, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            double a1 = (-143.89508754755144);
            double3x3 b1 = double3x3(-387.84270614564548, -88.237509530148259, 439.36053415730623, -487.98472117259388, -393.41587013444672, 399.10247511374882, 365.36438076820434, -225.01526866900514, -305.57958927079085);
            bool3x3 r1 = bool3x3(false, true, true, false, false, true, true, false, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            double a2 = (-155.50471718400007);
            double3x3 b2 = double3x3(-241.34569870743235, -22.937379609298603, -113.9404576355314, 421.05099959906704, -493.35816096391443, -422.88027043961, 27.082915080284238, -505.90307330801295, 470.21987150154075);
            bool3x3 r2 = bool3x3(false, true, true, true, false, false, true, false, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            double a3 = (399.4183444452558);
            double3x3 b3 = double3x3(312.55033912907834, -309.13674726576392, -317.88682594796961, -501.45542764172677, -73.508258615391469, 54.299954678071686, -311.15378513520295, -112.94509153857132, -479.15494488140331);
            bool3x3 r3 = bool3x3(false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_greater_equal_wide_wide()
        {
            double3x3 a0 = double3x3(143.64125377668131, -251.70416295328374, 118.57615881719448, 23.871594201713606, 84.634044448209011, -145.38224155520192, -234.44732653091069, 90.461873811884743, 203.55582604350332);
            double3x3 b0 = double3x3(-409.2710322855371, -84.9138353266352, 509.12827157840513, -61.134530811167565, 139.21721822545737, -30.229416146049914, 210.73626075067386, 27.014938605490556, 467.6829266341789);
            bool3x3 r0 = bool3x3(true, false, false, true, false, false, false, true, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            double3x3 a1 = double3x3(370.97961180795892, -64.089706689161119, -140.50303155766011, -61.647308139897575, 463.91894624378483, -81.438769616856575, -56.363175179978441, 39.754479665194822, -389.11254877090107);
            double3x3 b1 = double3x3(-206.05482993184347, 109.55236654614669, -413.97032160962482, 95.3849814382312, -493.09765624119791, 330.59692946569851, 106.93486433240344, -316.19577589453934, 206.49047026712935);
            bool3x3 r1 = bool3x3(true, false, true, false, true, false, false, true, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            double3x3 a2 = double3x3(117.34721213083117, -460.31869599796772, -209.22120557037238, -223.78431211401909, -36.6575873068802, 488.59948824746516, 437.58726497999726, -330.40929690488116, -373.01058619702724);
            double3x3 b2 = double3x3(114.22677975251656, 54.440611626226769, -242.84274184091146, 240.49563442938756, 151.10935718897235, 165.14314635337473, 92.217346949604, 13.223984962899181, 204.37954220752215);
            bool3x3 r2 = bool3x3(true, false, true, false, false, true, true, false, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            double3x3 a3 = double3x3(-352.30841200068051, 243.23199927212295, 488.73347281326232, -466.79067466537964, -491.695761194311, -316.41960659456424, 442.01610418875521, 87.848809521574935, 421.66772647465939);
            double3x3 b3 = double3x3(-477.91111276946549, -349.73384134365892, -488.80882262103671, 4.9692504429115161, 266.0371149825105, 259.68289411239459, -430.25155063637141, 395.97140354475539, -422.67095370901325);
            bool3x3 r3 = bool3x3(true, true, true, false, false, false, true, false, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_greater_equal_wide_scalar()
        {
            double3x3 a0 = double3x3(-355.36085359908679, 304.30147209032509, 385.1285471325408, -263.95484483612461, -435.80643650321588, 126.50078660179895, 77.010820663073446, -226.75392376014679, -212.65009675391491);
            double b0 = (-139.19751436039689);
            bool3x3 r0 = bool3x3(false, true, true, false, false, true, true, false, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            double3x3 a1 = double3x3(-413.1957916753347, -457.00790355028954, -123.01295214659206, 280.99802006455047, -112.26507215959253, 383.07020991997342, 173.83111461150975, -168.51573260525043, -286.82006443982016);
            double b1 = (-11.07635713139382);
            bool3x3 r1 = bool3x3(false, false, false, true, false, true, true, false, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            double3x3 a2 = double3x3(404.74096054804556, 150.14046747523378, -264.70601165700054, -13.229999309978439, -202.23782620310681, 64.693119794453082, -182.85754188469497, -322.09215489127308, 454.1434278218743);
            double b2 = (59.757235793283826);
            bool3x3 r2 = bool3x3(true, true, false, false, false, true, false, false, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            double3x3 a3 = double3x3(-119.18700295276335, 393.12921661563644, -335.40823785188059, -430.91002555885819, 56.312722470756967, -482.47082994993349, 261.03973758455356, -177.77778085403975, 128.37924891727937);
            double b3 = (-472.93142364590028);
            bool3x3 r3 = bool3x3(true, true, true, true, true, false, true, true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_greater_equal_scalar_wide()
        {
            double a0 = (-246.0732854558496);
            double3x3 b0 = double3x3(142.15627557698463, -19.29862476293863, -151.98687584325057, 330.020889197486, -224.80012260414668, 451.59992119837545, -435.98180576599287, 405.88183064287614, -324.02012720891281);
            bool3x3 r0 = bool3x3(false, false, false, false, false, false, true, false, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            double a1 = (300.85477914514706);
            double3x3 b1 = double3x3(-341.6529263656833, 349.34832422311808, -342.97096721407536, 397.82466024804148, 363.17085354550318, -141.00453168759333, -304.13972034311837, 317.87954702874629, -371.10323184128072);
            bool3x3 r1 = bool3x3(true, false, true, false, false, true, true, false, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            double a2 = (-166.71349652424152);
            double3x3 b2 = double3x3(191.64334472997268, -274.38806808851103, 33.124833360838124, -54.884210850523857, 442.023279157478, 161.0546434675598, -191.78272852291479, 158.51682551136093, -506.65673017253016);
            bool3x3 r2 = bool3x3(false, true, false, false, false, false, true, false, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            double a3 = (270.83307827209728);
            double3x3 b3 = double3x3(-134.91857797229596, -57.234952238032122, -439.54626127683849, -101.91915731407664, 145.80298072928701, -499.493224138158, 447.14088103135157, 417.13286919944585, 441.3402981429083);
            bool3x3 r3 = bool3x3(true, true, true, true, true, true, false, false, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_add_wide_wide()
        {
            double3x3 a0 = double3x3(-404.27537054767618, -214.93513522620088, -164.2730897237887, 338.47717563178264, 302.84880771434348, -330.63301840919678, -21.244342098592028, 157.13040383026487, 32.444800153581809);
            double3x3 b0 = double3x3(433.90024944483309, 359.72051994862056, 420.50439115078393, -416.371905282313, -163.21369154900952, -35.65208698979211, 260.76101482136221, -20.117472896407094, 156.77011568693911);
            double3x3 r0 = double3x3(29.624878897156918, 144.78538472241968, 256.23130142699523, -77.894729650530337, 139.63511616533395, -366.28510539898889, 239.51667272277018, 137.01293093385777, 189.21491584052092);
            TestUtils.AreEqual(a0 + b0, r0);

            double3x3 a1 = double3x3(-333.966129220075, -488.63531588420051, 484.60532520925869, -143.61662895214585, -246.09088933006439, -133.72267705468585, 280.921041381043, -197.23690018301687, 72.3357828000261);
            double3x3 b1 = double3x3(315.04057350523794, -110.87443380750454, -373.96641629467086, 12.48257947549348, 97.394265458637051, -149.58347685150034, -463.56459853777875, -332.26615992759639, 384.89107078355323);
            double3x3 r1 = double3x3(-18.92555571483706, -599.50974969170511, 110.63890891458783, -131.13404947665236, -148.69662387142733, -283.30615390618618, -182.64355715673577, -529.50306011061321, 457.22685358357933);
            TestUtils.AreEqual(a1 + b1, r1);

            double3x3 a2 = double3x3(408.85914750064683, 362.22289269148507, -238.82044779454378, -305.65768184590047, 3.2989790454968215, -434.63414760801669, 50.483021521234377, -353.55148260367639, 507.86170196340504);
            double3x3 b2 = double3x3(-47.64057853056147, 231.06199585230183, -383.3149589893012, -107.28389816511606, 367.01860754891231, 304.00379218906346, -509.41568612932025, -253.26553904882888, 419.96041818147546);
            double3x3 r2 = double3x3(361.21856897008536, 593.28488854378691, -622.13540678384493, -412.94158001101653, 370.31758659440914, -130.63035541895323, -458.93266460808587, -606.81702165250522, 927.8221201448805);
            TestUtils.AreEqual(a2 + b2, r2);

            double3x3 a3 = double3x3(-19.464916953567865, 461.2949242355744, -8.662851099233535, 154.59528048084826, 229.35077177237292, 67.865267069947549, -350.41518680677524, -323.57476797866389, 83.023379602946079);
            double3x3 b3 = double3x3(218.59906325982843, -352.96871893153, 335.24433080071788, -270.91708982685446, -59.567715434156241, -379.068419871418, -200.97818217099558, 284.23933304671164, -431.91462131585672);
            double3x3 r3 = double3x3(199.13414630626056, 108.32620530404438, 326.58147970148434, -116.32180934600621, 169.78305633821668, -311.20315280147042, -551.39336897777082, -39.33543493195225, -348.89124171291064);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_add_wide_scalar()
        {
            double3x3 a0 = double3x3(-323.42942276756719, 324.634587200654, -277.88344706123854, -472.86264513100622, -459.05652997412557, 144.10591918980049, -334.47418872195954, 149.11431343346567, -388.34398263895139);
            double b0 = (-311.26692190359665);
            double3x3 r0 = double3x3(-634.69634467116384, 13.367665297057329, -589.15036896483525, -784.12956703460281, -770.32345187772216, -167.16100271379617, -645.74111062555619, -162.15260847013099, -699.610904542548);
            TestUtils.AreEqual(a0 + b0, r0);

            double3x3 a1 = double3x3(303.38458146871278, -29.018897308511157, 45.12297942355417, 101.80118827791944, -410.41598982848973, 279.4432104935139, -191.04749569252482, 118.38775759487771, 11.06376481571408);
            double b1 = (-7.709385637058574);
            double3x3 r1 = double3x3(295.67519583165421, -36.728282945569731, 37.413593786495596, 94.091802640860863, -418.1253754655483, 271.73382485645533, -198.75688132958339, 110.67837195781914, 3.3543791786555062);
            TestUtils.AreEqual(a1 + b1, r1);

            double3x3 a2 = double3x3(-38.552246826958026, -14.252791649779681, -218.20421348242286, -374.088939125691, -344.11773101618405, -368.17753594376961, 94.002569957637547, 466.70810125149228, 141.67926580350809);
            double b2 = (410.89496893943056);
            double3x3 r2 = double3x3(372.34272211247253, 396.64217728965087, 192.6907554570077, 36.806029813739542, 66.7772379232465, 42.717432995660943, 504.8975388970681, 877.60307019092284, 552.57423474293864);
            TestUtils.AreEqual(a2 + b2, r2);

            double3x3 a3 = double3x3(-438.578229393148, -230.74357210413717, -393.342430536329, -280.73714388568749, 307.49130573286266, -471.07736061097933, 55.402026917506987, 390.84355348667293, 235.5409396791556);
            double b3 = (299.54073753000273);
            double3x3 r3 = double3x3(-139.03749186314525, 68.797165425865558, -93.801693006326275, 18.803593644315242, 607.03204326286539, -171.5366230809766, 354.94276444750972, 690.38429101667566, 535.08167720915833);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_add_scalar_wide()
        {
            double a0 = (190.83125194852767);
            double3x3 b0 = double3x3(411.15716881824528, -70.761643204261361, -404.53508991959279, 238.02884232161045, 442.24392506212178, 151.43196327585349, -447.09386154967075, -299.92477836270109, 477.43272541343822);
            double3x3 r0 = double3x3(601.988420766773, 120.0696087442663, -213.70383797106513, 428.86009427013812, 633.07517701064944, 342.26321522438116, -256.26260960114308, -109.09352641417343, 668.26397736196589);
            TestUtils.AreEqual(a0 + b0, r0);

            double a1 = (-292.32724894784729);
            double3x3 b1 = double3x3(59.315583971941692, -378.93333238127332, -228.86587463545885, -309.56731023898692, -78.709975994522665, -93.987299724476088, -173.50858672592256, 342.7675656484289, -172.60135157993125);
            double3x3 r1 = double3x3(-233.0116649759056, -671.26058132912067, -521.19312358330615, -601.89455918683416, -371.03722494236996, -386.31454867232338, -465.83583567376985, 50.440316700581604, -464.92860052777854);
            TestUtils.AreEqual(a1 + b1, r1);

            double a2 = (76.3781631348553);
            double3x3 b2 = double3x3(502.48778867278611, -262.74656570271895, 353.17375938649, 288.06972493234548, 433.60712715313173, 397.0944532813013, -309.56912937274626, 235.58616529944641, -383.31499189106512);
            double3x3 r2 = double3x3(578.86595180764141, -186.36840256786365, 429.55192252134532, 364.44788806720078, 509.985290287987, 473.4726164161566, -233.19096623789096, 311.96432843430171, -306.93682875620982);
            TestUtils.AreEqual(a2 + b2, r2);

            double a3 = (81.2998922249767);
            double3x3 b3 = double3x3(440.01951643452958, -1.4462339884817084, 277.80738104405225, -488.5011062512645, 268.63283479801976, -475.54067991466292, 490.3301677602949, -476.8236222103348, -203.88508019404725);
            double3x3 r3 = double3x3(521.31940865950628, 79.853658236495, 359.10727326902895, -407.2012140262878, 349.93272702299646, -394.24078768968621, 571.6300599852716, -395.5237299853581, -122.58518796907055);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_sub_wide_wide()
        {
            double3x3 a0 = double3x3(379.05223649509821, -16.164036996739014, 107.16038208229486, 30.064602627449062, -428.43869443817005, 245.62773215287723, 179.60420449990977, 505.37777805019994, 317.71882858766185);
            double3x3 b0 = double3x3(236.68317877346794, 20.170748481606438, 111.4803836864794, -484.679841028843, -447.70867630825785, 18.1945517147866, -296.14766063175523, 367.63596051169372, -267.45500219401674);
            double3x3 r0 = double3x3(142.36905772163027, -36.334785478345452, -4.32000160418454, 514.74444365629211, 19.269981870087804, 227.43318043809063, 475.751865131665, 137.74181753850621, 585.17383078167859);
            TestUtils.AreEqual(a0 - b0, r0);

            double3x3 a1 = double3x3(-198.47338900271495, 166.69455845965751, -379.02708190447981, 332.8962687612028, 159.25619871879746, -405.39593453211523, -44.4034602848829, -97.96675567420516, 427.35325475565776);
            double3x3 b1 = double3x3(-71.1860635612095, -248.33460843206132, -138.19108230350122, -474.84816501794762, -275.85935390920349, -172.86971887055307, -72.159977708086387, -161.56859047783939, 498.74157475807772);
            double3x3 r1 = double3x3(-127.28732544150546, 415.02916689171883, -240.8359996009786, 807.74443377915043, 435.11555262800096, -232.52621566156216, 27.756517423203491, 63.601834803634233, -71.38832000241996);
            TestUtils.AreEqual(a1 - b1, r1);

            double3x3 a2 = double3x3(64.905246049587277, 448.51595065021695, 344.09549323846375, -299.15137900931359, 465.76325938932746, 402.46793694164046, -243.42509400259007, 333.47163668902203, -150.87357838026878);
            double3x3 b2 = double3x3(-123.51264220267194, -329.45570078932479, -154.94471867147121, -481.69881056328251, 74.205483709557711, -267.31708992054553, 211.44059834789516, 186.44930824378935, 471.03012035369409);
            double3x3 r2 = double3x3(188.41788825225922, 777.9716514395418, 499.04021190993495, 182.54743155396892, 391.55777567976975, 669.785026862186, -454.86569235048523, 147.02232844523269, -621.90369873396287);
            TestUtils.AreEqual(a2 - b2, r2);

            double3x3 a3 = double3x3(-29.316586269678794, 103.71026067794776, 199.27447972040363, 464.22418496768182, 432.71609350327219, 108.6947839766251, -395.83869261100824, -211.500915387413, -209.26928553789355);
            double3x3 b3 = double3x3(115.38684492715959, -389.97295469323774, 70.008547100242481, -206.0760434633475, 256.43102443238297, -194.21229013903638, -170.82720502225084, -505.36379670787778, -70.768529209666212);
            double3x3 r3 = double3x3(-144.70343119683838, 493.6832153711855, 129.26593262016115, 670.30022843102938, 176.28506907088922, 302.90707411566149, -225.0114875887574, 293.86288132046479, -138.50075632822734);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_sub_wide_scalar()
        {
            double3x3 a0 = double3x3(102.56966142662316, -199.24868759850443, 218.15437827732148, 72.79636791758071, -139.42634851272516, 13.459313160488023, -31.259209885848293, -273.21787489262312, -375.99724524840587);
            double b0 = (-504.27757405875138);
            double3x3 r0 = double3x3(606.84723548537454, 305.02888646024695, 722.43195233607287, 577.07394197633209, 364.85122554602623, 517.73688721923941, 473.01836417290309, 231.05969916612827, 128.28032881034551);
            TestUtils.AreEqual(a0 - b0, r0);

            double3x3 a1 = double3x3(484.57066248570129, -126.18295174752501, -323.06732884192252, 128.219562828643, -59.646107463001329, -125.915703593714, -39.709145802869045, -388.43712133375794, 29.628258003680116);
            double b1 = (118.8643591957466);
            double3x3 r1 = double3x3(365.70630328995469, -245.04731094327161, -441.93168803766912, 9.355203632896405, -178.51046665874793, -244.7800627894606, -158.57350499861565, -507.30148052950454, -89.236101192066485);
            TestUtils.AreEqual(a1 - b1, r1);

            double3x3 a2 = double3x3(164.51195700676737, -293.85304059360783, -168.44942887520858, -283.30114401658119, -492.36922549287289, 470.42952487917125, -384.21620506058269, 407.13263029937286, 312.91347875861152);
            double b2 = (-245.12654005974838);
            double3x3 r2 = double3x3(409.63849706651575, -48.726500533859451, 76.6771111845398, -38.174603956832811, -247.24268543312451, 715.55606493891969, -139.08966500083432, 652.2591703591213, 558.04001881835984);
            TestUtils.AreEqual(a2 - b2, r2);

            double3x3 a3 = double3x3(509.8000040044077, -329.48876801575011, 253.45835912109271, 310.496014024362, 370.29655974465265, -224.97911439881619, -336.76006452029571, 132.73749619942976, 332.28889647698441);
            double b3 = (150.7968085514367);
            double3x3 r3 = double3x3(359.003195452971, -480.28557656718681, 102.66155056965601, 159.69920547292531, 219.49975119321596, -375.77592295025289, -487.55687307173241, -18.059312352006941, 181.49208792554771);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_sub_scalar_wide()
        {
            double a0 = (385.51228135894621);
            double3x3 b0 = double3x3(78.826067245950071, -43.925143500755155, -401.83536762829652, -336.14667931950964, 25.871118319160814, 188.92978080964167, 132.73553449136, -391.64339822886672, -131.12338477518568);
            double3x3 r0 = double3x3(306.68621411299614, 429.43742485970137, 787.34764898724279, 721.65896067845586, 359.6411630397854, 196.58250054930454, 252.77674686758621, 777.155679587813, 516.635666134132);
            TestUtils.AreEqual(a0 - b0, r0);

            double a1 = (43.832313319590071);
            double3x3 b1 = double3x3(-278.08958948687166, -440.45503946787449, -375.45243161518704, 190.74367079080253, 364.12960856227653, 349.77856866911918, 492.41104125064385, 122.08065443955388, -191.47411522244761);
            double3x3 r1 = double3x3(321.92190280646173, 484.28735278746456, 419.28474493477711, -146.91135747121245, -320.29729524268646, -305.94625534952911, -448.57872793105378, -78.248341119963811, 235.30642854203768);
            TestUtils.AreEqual(a1 - b1, r1);

            double a2 = (114.19905596328852);
            double3x3 b2 = double3x3(79.321660317164742, 105.47045784139561, -447.61224219184942, -490.96494292233371, 245.04158055272023, 256.28489339364921, -149.75633461296388, -447.19284865222539, -468.42200897094887);
            double3x3 r2 = double3x3(34.877395646123773, 8.728598121892901, 561.81129815513793, 605.16399888562228, -130.84252458943172, -142.0858374303607, 263.9553905762524, 561.39190461551391, 582.62106493423744);
            TestUtils.AreEqual(a2 - b2, r2);

            double a3 = (-312.23922863241251);
            double3x3 b3 = double3x3(481.43708227641741, -27.601870788075928, 63.156121044958013, -451.78376767215497, 364.7882789879983, -400.73532099311024, 125.03755265336372, -221.62194715329537, 252.24216353718293);
            double3x3 r3 = double3x3(-793.67631090882992, -284.63735784433658, -375.39534967737052, 139.54453903974246, -677.0275076204108, 88.49609236069773, -437.27678128577622, -90.617281479117139, -564.48139216959544);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_mul_wide_wide()
        {
            double3x3 a0 = double3x3(48.729794286531273, 263.59457958098244, -378.48718493920154, 494.61832236434259, -185.09561094320173, 423.89342494676509, 19.861804256151345, -439.21847292371956, 200.14622530720487);
            double3x3 b0 = double3x3(351.02689258708938, 422.91789956713, -490.61739109950952, 81.404518403766929, -357.22656481211379, 378.99459451203916, 318.32116880934745, 208.1715439335311, 345.88571063889458);
            double3x3 r0 = double3x3(17105.468264809177, 111478.86593366979, 185692.39523946863, 40264.166325748447, 66121.069259039446, 160653.31670401874, 6322.432745480568, -91432.787632658525, 69227.719372074862);
            TestUtils.AreEqual(a0 * b0, r0);

            double3x3 a1 = double3x3(-178.35696204861483, -285.07807530326681, 56.749516751966212, 42.604453345110869, 472.96119306653793, -264.85660350735145, -278.03821314407429, 88.717738908118463, 171.39477570885549);
            double3x3 b1 = double3x3(-149.02886087681577, 293.05592431363459, 423.94813533497427, 53.429250503624417, -257.18689191396669, 87.375958721794177, 84.2100913916762, -59.685752658027127, -144.90168935847549);
            double3x3 r1 = double3x3(26580.334883554529, -83543.818859550782, 24058.85180815696, 2276.3240103459079, -121639.41924070442, -23142.099655252947, -23413.623339240843, -5295.1850208493879, -24835.392547430161);
            TestUtils.AreEqual(a1 * b1, r1);

            double3x3 a2 = double3x3(366.37312500848111, -253.82156121629362, -217.54853139517297, 431.06731172607624, -159.41258747848337, -162.98086722333954, -190.60251554781689, 300.64993896179362, -264.47304904855463);
            double3x3 b2 = double3x3(436.83346983270417, -444.17268368423572, 292.19968070285381, -29.194205536131847, 80.048135556303009, 396.24801439617204, -81.420618810421161, 423.22849078813033, -331.09617177168661);
            double3x3 r2 = double3x3(160044.04345090588, 112740.60402236365, -63567.611411044309, -12584.667698438887, -12760.68041185865, -64580.84502181445, 15518.974762726171, 127243.61992234342, 87566.014076761945);
            TestUtils.AreEqual(a2 * b2, r2);

            double3x3 a3 = double3x3(-260.20568454461437, -217.72262416487683, -131.68655377798086, -451.57858416604745, -165.73887808888168, 432.81164833196055, -221.72314439607931, -365.07360689950809, 353.79841892504987);
            double3x3 b3 = double3x3(267.67386997289668, 351.64644424600829, 80.083564557173986, 239.80521427830922, 239.52843033500403, -172.316666444911, -432.45244308582153, 217.68321643475588, 275.3127554745007);
            double3x3 r3 = double3x3(-69650.262571003681, -76561.386619488985, -10545.928630790695, -108290.89913943451, -39699.173314114421, -74580.66043909057, 95884.71548275488, -79470.3969853226, 97405.21759677722);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_mul_wide_scalar()
        {
            double3x3 a0 = double3x3(-387.48086828155482, -48.625516675703921, -100.41558151152708, -161.4535282409999, -428.578962764041, -198.31901440318626, 413.47737927617379, -216.10473857452382, -65.20349958595051);
            double b0 = (367.40878146114233);
            double3x3 r0 = double3x3(-142363.87365483146, -17865.441829738833, -36893.566442862175, -59319.444073627907, -157463.67446901661, -72864.1474224494, 151915.2200816056, -79398.77866764451, -23956.338329876176);
            TestUtils.AreEqual(a0 * b0, r0);

            double3x3 a1 = double3x3(18.976513156190776, -356.19757311241585, 13.606950527805338, 394.30371231320487, -428.80947776735269, -362.69720595083072, 92.842557711919085, 344.98600284428619, -456.00521657243615);
            double b1 = (89.787349027482492);
            double3x3 r1 = double3x3(1703.8508100795145, -31982.035819786695, 1221.732016239745, 35403.485040297768, -38501.66624658979, -32565.620621999937, 8336.0871338842644, 30975.378646975991, -40943.499538742071);
            TestUtils.AreEqual(a1 * b1, r1);

            double3x3 a2 = double3x3(283.0814770586237, -398.4071630902622, -8.4340746442014733, 176.07398494336474, -365.27418845019963, 236.01468693279412, 423.78179259960621, 485.64624260628887, -52.757115150223058);
            double b2 = (-209.5525592349249);
            double3x3 r2 = double3x3(-59320.44798963728, 83487.240643090554, 1767.3819264708075, -36896.754159573713, 76544.141012199572, -49457.481663796592, -88804.559196411632, -101768.41302097305, 11055.388497580871);
            TestUtils.AreEqual(a2 * b2, r2);

            double3x3 a3 = double3x3(-217.14844546893073, -362.12892954523159, -404.3379387354189, -211.23373923601292, -70.451044353866507, 96.2902086229484, 338.63338319334821, 437.53323456157614, -282.0212983014161);
            double b3 = (268.02685916983842);
            double3x3 r3 = double3x3(-58201.615812650438, -97060.27960054412, -108373.42776246088, -56616.315678129205, -18882.772143401817, 25808.362186017352, 90762.842107369463, 117270.65864195945, -75589.282802728645);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_mul_scalar_wide()
        {
            double a0 = (468.91594407936373);
            double3x3 b0 = double3x3(123.86660796211413, 490.96148060772634, -247.16259181087958, -176.94950278892622, 382.26386874833327, -398.549474663357, 120.56934386145758, -263.27587879042881, 74.376708303753617);
            double3x3 r0 = double3x3(58083.027412463176, 230219.66618577423, -115898.48008010101, -82974.443154643348, 179249.62290155469, -186886.2031741025, 56536.887703824817, -123454.25725633805, 34876.424391770081);
            TestUtils.AreEqual(a0 * b0, r0);

            double a1 = (-309.85598554734884);
            double3x3 b1 = double3x3(404.92799944660067, -105.62615566403889, 243.92625367079222, -291.96407737022457, -92.46494607462779, -144.35298950241554, -7.5622308289456441, -257.84767329778879, -215.8806489519219);
            double3x3 r1 = double3x3(-125469.36434424277, 32728.896562858452, -75582.009732035935, 90466.816937973344, 28650.816994536257, 44728.637828977066, 2343.2024864394975, 79895.644930777169, 66891.911241599);
            TestUtils.AreEqual(a1 * b1, r1);

            double a2 = (-480.02161358297877);
            double3x3 b2 = double3x3(-91.380354208583185, -9.7301256701956049, 47.952799104132168, 6.1749904184486013, 201.40935883364148, 502.88858747058021, 504.705544468344, 286.20864333128964, -265.3671935840357);
            double3x3 r2 = double3x3(43864.545076988245, 4670.6706245724572, -23018.380001785943, -2964.1288645231307, -96680.845418037759, -241397.39121009287, -242269.56983997033, -137386.3347932809, 127381.98845619551);
            TestUtils.AreEqual(a2 * b2, r2);

            double a3 = (-24.219190370393562);
            double3x3 b3 = double3x3(107.50664024590822, 133.72855979470933, 410.17002720859364, -365.49276678892443, -147.5186236591631, 34.277940050828192, -75.761270319931782, -127.2658188935676, 452.85256478416386);
            double3x3 r3 = double3x3(-2603.7237861970652, -3238.797447626624, -9933.9859731944362, 8851.9388978628176, 3572.7816295797147, -830.18395559594592, 1834.8766285812753, 3082.2750954273433, -10967.722476228648);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_div_wide_wide()
        {
            double3x3 a0 = double3x3(6.8207170995049182, -338.63085881743154, 497.60438155457587, -491.26991938579357, 173.45471604794955, -441.55652376709344, 321.01690331148768, -41.6019933417449, -40.212614316592294);
            double3x3 b0 = double3x3(-352.73601762984697, 302.20974292522749, -489.09516810304262, -380.891595779402, 289.64650525229354, -216.57524715018235, -289.15099658125592, 198.97850022044895, -292.72057856839177);
            double3x3 r0 = double3x3(-0.019336605162511136, -1.1205160215539951, -1.0173978685672489, 1.2897893385663424, 0.59884967677018452, 2.038813435872012, -1.1102050731520718, -0.20907783150266945, 0.137375426467316);
            TestUtils.AreEqual(a0 / b0, r0);

            double3x3 a1 = double3x3(-169.79586728373351, -179.33992084271273, -433.40119119798817, -425.29711576239072, 335.54366675743074, 455.98288771881857, -438.4312343254831, -475.07163332173212, 398.719868607223);
            double3x3 b1 = double3x3(9.0584442657690261, -29.890428318591034, 257.63897216396356, -340.16841117486752, 33.712226168118491, 281.61100186110059, -384.688157499157, 457.44125506721491, 228.60738502657387);
            double3x3 r1 = double3x3(-18.744484406155202, 5.9999113740089225, -1.6822035407056666, 1.2502545850554061, 9.9531744087180147, 1.6191941533013106, 1.1397055661284397, -1.0385412947765864, 1.7441250577310741);
            TestUtils.AreEqual(a1 / b1, r1);

            double3x3 a2 = double3x3(372.92769616326677, 31.940642133327515, 472.51835249015983, -31.912778153974898, 381.816795765337, 72.120304856505413, 214.97419438835891, 423.20729489960115, 165.06038935718141);
            double3x3 b2 = double3x3(-300.2760046926681, -168.69059069859355, -59.644292620776355, 320.39064875263284, 0.85657191316443, -483.93725298528432, 62.526219635515531, -224.53404937709405, -414.907621815292);
            double3x3 r2 = double3x3(-1.2419497073865677, -0.18934453902290957, -7.92227272263036, -0.099605835183454783, 445.7498429463941, -0.14902821473572, 3.4381447597745276, -1.8848245781593909, -0.39782443290632719);
            TestUtils.AreEqual(a2 / b2, r2);

            double3x3 a3 = double3x3(-62.500339775579221, -431.33482643185874, 215.50685868761821, -312.63883486047337, -324.87448349822057, 216.07773957777658, -253.50361382845028, -175.87086518847889, 338.05080405718218);
            double3x3 b3 = double3x3(-475.28885458190405, -84.2698309813951, 325.77279272944327, -12.982145553912119, 403.84371418684896, 455.13163373206351, 375.57564824427277, 241.79062163168123, -251.9366096239242);
            double3x3 r3 = double3x3(0.13149969575987366, 5.1184963991097581, 0.661525036765726, 24.08221611459755, -0.80445596176324, 0.47475878089586226, -0.67497351069889555, -0.72736843142072871, -1.3418089755268361);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_div_wide_scalar()
        {
            double3x3 a0 = double3x3(-179.14525779483154, 46.961132786684288, 127.57277470807207, 391.67960924267754, 461.32760665441288, 150.55543119765605, 18.422910937305005, 169.15858395824148, 37.5003321345431);
            double b0 = (-93.365409179295114);
            double3x3 r0 = double3x3(1.9187540585915315, -0.50298213438450257, -1.3663815735342255, -4.1951255040344977, -4.9410976796395571, -1.612539724519769, -0.19732051837234924, -1.8117907418302666, -0.40165123747842196);
            TestUtils.AreEqual(a0 / b0, r0);

            double3x3 a1 = double3x3(121.80905800769528, 398.16749901239177, -331.00037280237319, -498.45196341837379, 502.30602597738891, -329.66696110817929, -191.85219892852575, -35.942829387235861, -369.29486792594889);
            double b1 = (-22.542152176863567);
            double3x3 r1 = double3x3(-5.403612621012984, -17.66324243969288, 14.683618946646087, 22.111995319149983, -22.282966685538451, 14.624467021677606, 8.51081997066082, 1.5944719521557598, 16.382413934059922);
            TestUtils.AreEqual(a1 / b1, r1);

            double3x3 a2 = double3x3(-414.91745753535884, -20.672259101957195, 102.39064626693289, -167.40129502462281, -121.16902619282206, -99.9818475712006, 392.3854484001107, 352.32091943934597, -5.7023003127902143);
            double b2 = (94.4215715371173);
            double3x3 r2 = double3x3(-4.39430789787537, -0.21893576611178189, 1.0843988783504088, -1.7729136710970441, -1.2832769484798321, -1.0588877726092236, 4.1556758907138418, 3.7313604688399824, -0.060391923370483505);
            TestUtils.AreEqual(a2 / b2, r2);

            double3x3 a3 = double3x3(-319.48041334724076, -323.0052484585928, 217.07829986190347, 436.19710298823054, 165.35459406923246, 441.9047574670542, -196.72366556745192, 486.58201597937477, 152.84829695189762);
            double b3 = (-370.4504160221901);
            double3x3 r3 = double3x3(0.86241072901941018, 0.871925727407591, -0.5859847646895352, -1.1774776977497097, -0.4463609350065561, -1.1928850349585893, 0.53103912712482448, -1.3134875679292755, -0.41260122904745761);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_div_scalar_wide()
        {
            double a0 = (451.8446936327241);
            double3x3 b0 = double3x3(-95.065177723330066, 207.048737383936, 502.38401603250952, 62.0412257006584, -110.84549408352257, -332.61274949303493, 224.27937065077913, -492.73451804217626, 435.03288027040333);
            double3x3 r0 = double3x3(-4.7529989892590958, 2.1823107899221643, 0.89940101438952824, 7.2829749659173642, -4.07634696717809, -1.3584707571234758, 2.0146511572670782, -0.91701449175526983, 1.0386449257625563);
            TestUtils.AreEqual(a0 / b0, r0);

            double a1 = (503.81881570435075);
            double3x3 b1 = double3x3(291.34940757013362, 88.024186890583564, 328.70278874444909, 50.010147356432981, -509.81615304845207, 158.94752819787129, 68.434325011649321, -237.56858002281217, 32.995745435820822);
            double3x3 r1 = double3x3(1.7292597912115937, 5.7236406662933579, 1.5327488325511169, 10.074331757383689, -0.98823627437412453, 3.1697178396958434, 7.3620776652445619, -2.1207300041780455, 15.269205439965459);
            TestUtils.AreEqual(a1 / b1, r1);

            double a2 = (169.61043103486782);
            double3x3 b2 = double3x3(-389.98006910364148, -383.04868167594481, 42.412895937642475, 3.117699386141112, -432.51841016882958, 253.81393134492168, -448.56073996450789, 303.8206900580883, 385.48510497877612);
            double3x3 r2 = double3x3(-0.43492076768105803, -0.44279079696286872, 3.9990297121950222, 54.402432700479409, -0.39214615389125734, 0.66824712944686593, -0.37812143579103275, 0.55825832994599389, 0.43999217828197579);
            TestUtils.AreEqual(a2 / b2, r2);

            double a3 = (-168.35216696949311);
            double3x3 b3 = double3x3(-29.548844589641703, -52.128476882413224, 325.49435749905854, 181.44034227237125, -214.25014291249687, -496.52554415935907, -270.4107636280408, 480.02879904211909, 459.51221129834289);
            double3x3 r3 = double3x3(5.697419621899825, 3.2295623627992609, -0.51721992437297493, -0.927865131100609, 0.78577388411941829, 0.33906043495611327, 0.62257938519439726, -0.35071263912797329, -0.36637147573035611);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_mod_wide_wide()
        {
            double3x3 a0 = double3x3(157.55858881657878, 504.93797158866096, 73.007050786636341, -387.60870975424007, 278.54447830773165, 282.22817314892461, 57.086228635667908, -63.974762707936918, -345.26900379046288);
            double3x3 b0 = double3x3(180.25016530801088, -41.479829092267835, -308.6731518752282, -326.86006203613249, 411.58822674843861, 429.41059680907551, 471.14820144658358, 226.1443618396969, 423.90749450396163);
            double3x3 r0 = double3x3(157.55858881657878, 7.18002248144694, 73.007050786636341, -60.748647718107577, 278.54447830773165, 282.22817314892461, 57.086228635667908, -63.974762707936918, -345.26900379046288);
            TestUtils.AreEqual(a0 % b0, r0);

            double3x3 a1 = double3x3(-380.71618407811792, 470.28039787257114, -480.3074555249454, 65.251441747532908, 503.11623811308118, 387.60585540700981, -281.1812771676021, 89.576535028208241, -216.2852171474533);
            double3x3 b1 = double3x3(-300.951750657033, 67.241354258377783, -488.69098328458659, -440.438140835817, 508.522422788908, -108.23840456280783, 93.468003078116112, -20.988763103722022, 301.87540712108625);
            double3x3 r1 = double3x3(-79.7644334210849, 66.832272322304448, -480.3074555249454, 65.251441747532908, 503.11623811308118, 62.890641718586323, -0.77726793325376775, 5.6214826133201541, -216.2852171474533);
            TestUtils.AreEqual(a1 % b1, r1);

            double3x3 a2 = double3x3(95.61564044636475, 327.34658900245404, -362.11293976479811, 124.85387736412406, 461.39737794427083, 352.725561544637, -454.79088399130427, -366.85277979767545, -175.17117246201781);
            double3x3 b2 = double3x3(142.588480300544, 439.71043392629849, 61.127557544562706, -37.541476982432187, -345.7211422145931, -253.64354741463603, -271.91116655613814, -2.0261776456731013, 320.03621807696118);
            double3x3 r2 = double3x3(95.61564044636475, 327.34658900245404, -56.475152041984586, 12.2294464168275, 115.67623572967773, 99.082014130000971, -182.87971743516613, -0.1146259308441131, -175.17117246201781);
            TestUtils.AreEqual(a2 % b2, r2);

            double3x3 a3 = double3x3(504.99337672860986, 148.55762083295622, 405.26872916019931, -299.78938998830938, -202.46591744314225, 180.76950391604078, -172.16593821913278, 175.43341859403688, -381.47127860666774);
            double3x3 b3 = double3x3(-421.68276544179895, 481.62895487324749, 1.4451916224534216, -384.13113254314806, -125.21711712946052, -323.2398299291915, -433.92500826061007, 146.14983017097688, 24.142515908993119);
            double3x3 r3 = double3x3(83.310611286810911, 148.55762083295622, 0.61507487324126942, -299.78938998830938, -77.248800313681727, 180.76950391604078, -172.16593821913278, 29.283588423059996, -19.333539971770961);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_mod_wide_scalar()
        {
            double3x3 a0 = double3x3(42.072420378249376, 313.0502714184347, 111.52063970990514, 131.21203214079696, -460.44087026102511, -436.48505970299482, -221.73172031237357, -316.39089479874394, 24.183113824661405);
            double b0 = (260.27255332668892);
            double3x3 r0 = double3x3(42.072420378249376, 52.777718091745783, 111.52063970990514, 131.21203214079696, -200.16831693433619, -176.2125063763059, -221.73172031237357, -56.118341472055022, 24.183113824661405);
            TestUtils.AreEqual(a0 % b0, r0);

            double3x3 a1 = double3x3(-238.94258724848862, -240.83247792014504, -12.394702678730084, -152.48966867872031, -387.4286050216428, -240.07150017473452, -51.555152678655077, 179.87273343832828, 15.702755220095924);
            double b1 = (335.60093203913459);
            double3x3 r1 = double3x3(-238.94258724848862, -240.83247792014504, -12.394702678730084, -152.48966867872031, -51.827672982508204, -240.07150017473452, -51.555152678655077, 179.87273343832828, 15.702755220095924);
            TestUtils.AreEqual(a1 % b1, r1);

            double3x3 a2 = double3x3(179.91509183678545, -76.825290477287638, 213.752941946384, 143.58056909571428, 490.956368913388, 426.85480018465535, -495.03063630267542, -452.60006472682585, -235.30729376306164);
            double b2 = (453.63498398924014);
            double3x3 r2 = double3x3(179.91509183678545, -76.825290477287638, 213.752941946384, 143.58056909571428, 37.321384924147878, 426.85480018465535, -41.395652313435278, -452.60006472682585, -235.30729376306164);
            TestUtils.AreEqual(a2 % b2, r2);

            double3x3 a3 = double3x3(-457.42373702368872, 46.652746937541679, 268.33579624273614, 463.73137471812379, 90.744354051884443, -293.53712262471072, -227.90062748077355, 349.62746374198582, 342.57875720717891);
            double b3 = (320.5324658455944);
            double3x3 r3 = double3x3(-136.89127117809431, 46.652746937541679, 268.33579624273614, 143.19890887252939, 90.744354051884443, -293.53712262471072, -227.90062748077355, 29.094997896391419, 22.046291361584508);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_mod_scalar_wide()
        {
            double a0 = (-162.94581063228929);
            double3x3 b0 = double3x3(171.12575991969823, 159.20793659948185, 491.34807061187371, -136.53971416155792, 84.487527171376883, 414.39111657365743, -85.030597011107318, 161.98958857450145, -7.6080162560604663);
            double3x3 r0 = double3x3(-162.94581063228929, -3.73787403280744, -162.94581063228929, -26.40609647073137, -78.458283460912412, -162.94581063228929, -77.915213621181977, -0.95622205778784064, -3.1774692550195027);
            TestUtils.AreEqual(a0 % b0, r0);

            double a1 = (-85.22386912499735);
            double3x3 b1 = double3x3(160.84123547414379, -234.48312078904507, 114.87764578446638, -40.548714895056889, -85.743732253901555, -235.70891796597692, -135.85116511948928, 391.48698371997432, 240.69596182587372);
            double3x3 r1 = double3x3(-85.22386912499735, -85.22386912499735, -85.22386912499735, -4.1264393348835711, -85.22386912499735, -85.22386912499735, -85.22386912499735, -85.22386912499735, -85.22386912499735);
            TestUtils.AreEqual(a1 % b1, r1);

            double a2 = (-81.431793489228824);
            double3x3 b2 = double3x3(-398.18649286692334, -209.34607300970055, -431.59312625955471, 411.74689240555597, -119.3262727816246, -296.96579827785763, -319.0280036027674, 194.75985416898493, -189.40671953438164);
            double3x3 r2 = double3x3(-81.431793489228824, -81.431793489228824, -81.431793489228824, -81.431793489228824, -81.431793489228824, -81.431793489228824, -81.431793489228824, -81.431793489228824, -81.431793489228824);
            TestUtils.AreEqual(a2 % b2, r2);

            double a3 = (-292.2099994589621);
            double3x3 b3 = double3x3(-228.6486285797547, 306.94449176776436, 313.81824293444788, 224.43680845221354, 426.09956641965528, -14.85599256253613, -477.12157009407952, 248.82241618299042, -186.53584751232336);
            double3x3 r3 = double3x3(-63.5613708792074, -292.2099994589621, -292.2099994589621, -67.773191006748561, -292.2099994589621, -9.946140770775628, -292.2099994589621, -43.387583275971679, -105.67415194663874);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_plus()
        {
            double3x3 a0 = double3x3(150.59985477784642, -137.85511237841803, 439.0911616939544, 401.84926075574447, 401.8235406362561, -299.61462010984059, -364.62483113101905, 444.56690975863808, -135.17793161011207);
            double3x3 r0 = double3x3(150.59985477784642, -137.85511237841803, 439.0911616939544, 401.84926075574447, 401.8235406362561, -299.61462010984059, -364.62483113101905, 444.56690975863808, -135.17793161011207);
            TestUtils.AreEqual(+a0, r0);

            double3x3 a1 = double3x3(188.5903004093982, -176.78832515365832, 67.193958552178856, -202.57394585505779, -83.51769761159909, 466.91704891012841, 369.19699805285643, 453.94577071347544, 288.73217619989634);
            double3x3 r1 = double3x3(188.5903004093982, -176.78832515365832, 67.193958552178856, -202.57394585505779, -83.51769761159909, 466.91704891012841, 369.19699805285643, 453.94577071347544, 288.73217619989634);
            TestUtils.AreEqual(+a1, r1);

            double3x3 a2 = double3x3(27.980096114790058, -419.95589919572507, -418.33454509188164, -85.528715888750128, 184.96412214309169, -113.68165474463331, -496.36373471485626, 473.1383943376776, -214.0607856316775);
            double3x3 r2 = double3x3(27.980096114790058, -419.95589919572507, -418.33454509188164, -85.528715888750128, 184.96412214309169, -113.68165474463331, -496.36373471485626, 473.1383943376776, -214.0607856316775);
            TestUtils.AreEqual(+a2, r2);

            double3x3 a3 = double3x3(-316.09472742494881, -259.0203923001049, 504.88502692844952, 195.07316622281132, 279.80552710211157, 368.66611187936087, 88.025323193532131, -123.76487904589851, 378.99703305726734);
            double3x3 r3 = double3x3(-316.09472742494881, -259.0203923001049, 504.88502692844952, 195.07316622281132, 279.80552710211157, 368.66611187936087, 88.025323193532131, -123.76487904589851, 378.99703305726734);
            TestUtils.AreEqual(+a3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_neg()
        {
            double3x3 a0 = double3x3(-169.28116782441788, -377.02522366914206, 36.614130752447068, -258.38245713821726, 469.91457460351035, 388.94596380225664, 350.96924678933306, 176.10255464171178, 494.42163037435228);
            double3x3 r0 = double3x3(169.28116782441788, 377.02522366914206, -36.614130752447068, 258.38245713821726, -469.91457460351035, -388.94596380225664, -350.96924678933306, -176.10255464171178, -494.42163037435228);
            TestUtils.AreEqual(-a0, r0);

            double3x3 a1 = double3x3(201.18688664268086, 313.88018789602449, 381.03574937443977, 327.17948142028388, 292.367550270803, 462.13620469632383, 448.669835537984, 339.4568738133911, 93.5053418118066);
            double3x3 r1 = double3x3(-201.18688664268086, -313.88018789602449, -381.03574937443977, -327.17948142028388, -292.367550270803, -462.13620469632383, -448.669835537984, -339.4568738133911, -93.5053418118066);
            TestUtils.AreEqual(-a1, r1);

            double3x3 a2 = double3x3(385.74091667017944, -298.23503627359639, -14.980153806032661, -116.37013607675681, 258.54646241783462, 369.49387114564604, 292.99096097284507, -349.35756055887674, 160.5608623775471);
            double3x3 r2 = double3x3(-385.74091667017944, 298.23503627359639, 14.980153806032661, 116.37013607675681, -258.54646241783462, -369.49387114564604, -292.99096097284507, 349.35756055887674, -160.5608623775471);
            TestUtils.AreEqual(-a2, r2);

            double3x3 a3 = double3x3(-429.38118692365532, -12.666179901299131, -273.52127540927438, -138.77289706970237, 97.6512835480512, 94.233489318859483, 184.84458955789194, -136.30266982703591, 31.710360780223482);
            double3x3 r3 = double3x3(429.38118692365532, 12.666179901299131, 273.52127540927438, 138.77289706970237, -97.6512835480512, -94.233489318859483, -184.84458955789194, 136.30266982703591, -31.710360780223482);
            TestUtils.AreEqual(-a3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_prefix_inc()
        {
            double3x3 a0 = double3x3(86.5853612826138, 161.589808777715, 443.92963978458647, -338.26843587414754, -34.558641688227, -368.56747858997784, 359.14160864387713, 145.02611143189768, 157.23312409093285);
            double3x3 r0 = double3x3(87.5853612826138, 162.589808777715, 444.92963978458647, -337.26843587414754, -33.558641688227, -367.56747858997784, 360.14160864387713, 146.02611143189768, 158.23312409093285);
            TestUtils.AreEqual(++a0, r0);

            double3x3 a1 = double3x3(25.361956369766062, 346.04049341103087, 381.77565520898236, 244.66301571794929, 49.973209165955495, -105.41791515490877, 218.37651906645692, 166.64780505311103, -153.75656921870848);
            double3x3 r1 = double3x3(26.361956369766062, 347.04049341103087, 382.77565520898236, 245.66301571794929, 50.973209165955495, -104.41791515490877, 219.37651906645692, 167.64780505311103, -152.75656921870848);
            TestUtils.AreEqual(++a1, r1);

            double3x3 a2 = double3x3(352.00194160640331, -18.343178996044742, -484.35102032327609, 49.864846014354725, -269.91598070315831, -205.47034678490382, 375.42758410769864, -157.74896748259152, -218.15819678928619);
            double3x3 r2 = double3x3(353.00194160640331, -17.343178996044742, -483.35102032327609, 50.864846014354725, -268.91598070315831, -204.47034678490382, 376.42758410769864, -156.74896748259152, -217.15819678928619);
            TestUtils.AreEqual(++a2, r2);

            double3x3 a3 = double3x3(-343.99890796467611, 312.92835226325712, -29.018069519204118, -309.89783277637224, -6.816866639450609, 73.209922586199809, -186.31689962480073, -126.75758486928305, 176.92212422980094);
            double3x3 r3 = double3x3(-342.99890796467611, 313.92835226325712, -28.018069519204118, -308.89783277637224, -5.816866639450609, 74.209922586199809, -185.31689962480073, -125.75758486928305, 177.92212422980094);
            TestUtils.AreEqual(++a3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_postfix_inc()
        {
            double3x3 a0 = double3x3(-281.78208912619488, 215.34223971857796, 120.82084923648313, -325.35367003332533, -179.7229221704057, 44.563681384811048, -375.17335360831271, 193.36569628183065, 329.52426472749755);
            double3x3 r0 = double3x3(-281.78208912619488, 215.34223971857796, 120.82084923648313, -325.35367003332533, -179.7229221704057, 44.563681384811048, -375.17335360831271, 193.36569628183065, 329.52426472749755);
            TestUtils.AreEqual(a0++, r0);

            double3x3 a1 = double3x3(-341.15366927774329, 277.30739582577132, -15.209680325914974, -362.90921490402388, 480.75709866022555, 20.483843097688577, -132.57326060746482, -43.343021174586852, 63.972996026264923);
            double3x3 r1 = double3x3(-341.15366927774329, 277.30739582577132, -15.209680325914974, -362.90921490402388, 480.75709866022555, 20.483843097688577, -132.57326060746482, -43.343021174586852, 63.972996026264923);
            TestUtils.AreEqual(a1++, r1);

            double3x3 a2 = double3x3(423.37782903359175, -39.51211382798482, 121.25533944054291, -293.28351678200227, -121.77388840623848, 337.21565143075566, 64.448384553402889, -319.07164469318076, 342.49631158565);
            double3x3 r2 = double3x3(423.37782903359175, -39.51211382798482, 121.25533944054291, -293.28351678200227, -121.77388840623848, 337.21565143075566, 64.448384553402889, -319.07164469318076, 342.49631158565);
            TestUtils.AreEqual(a2++, r2);

            double3x3 a3 = double3x3(357.92879335858333, 71.875258717627844, 176.15167888260987, -239.43034588519032, 7.4498913322807994, 427.48699375031845, 348.65245096229592, 285.95730294192083, -299.58461274746088);
            double3x3 r3 = double3x3(357.92879335858333, 71.875258717627844, 176.15167888260987, -239.43034588519032, 7.4498913322807994, 427.48699375031845, 348.65245096229592, 285.95730294192083, -299.58461274746088);
            TestUtils.AreEqual(a3++, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_prefix_dec()
        {
            double3x3 a0 = double3x3(340.00185433961542, 496.07084750387389, 288.38421048241867, 183.6946252247759, -353.61481230036111, 398.28191751906741, -240.59158407924303, 15.320201642494794, 276.58867395882896);
            double3x3 r0 = double3x3(339.00185433961542, 495.07084750387389, 287.38421048241867, 182.6946252247759, -354.61481230036111, 397.28191751906741, -241.59158407924303, 14.320201642494794, 275.58867395882896);
            TestUtils.AreEqual(--a0, r0);

            double3x3 a1 = double3x3(311.9143594763774, -268.38814676384823, 349.17022506760907, 468.03655383923865, -93.05706147712516, 429.5580677602245, -164.93854029706614, 278.54028071022606, -142.6552203365859);
            double3x3 r1 = double3x3(310.9143594763774, -269.38814676384823, 348.17022506760907, 467.03655383923865, -94.05706147712516, 428.5580677602245, -165.93854029706614, 277.54028071022606, -143.6552203365859);
            TestUtils.AreEqual(--a1, r1);

            double3x3 a2 = double3x3(96.548939034598334, -2.3991115104403207, 225.87567363766755, -388.63057416893105, -455.29489419203946, -248.5845054353515, 384.13169425732065, 80.483908929156087, 240.10786282276172);
            double3x3 r2 = double3x3(95.548939034598334, -3.3991115104403207, 224.87567363766755, -389.63057416893105, -456.29489419203946, -249.5845054353515, 383.13169425732065, 79.483908929156087, 239.10786282276172);
            TestUtils.AreEqual(--a2, r2);

            double3x3 a3 = double3x3(-385.30504173101161, -497.5459575585769, -71.498238835250163, -383.51482671476663, 4.6307823679553621, 270.4036635227518, -287.67175091787789, -447.2697848972258, -168.87592108961007);
            double3x3 r3 = double3x3(-386.30504173101161, -498.5459575585769, -72.498238835250163, -384.51482671476663, 3.6307823679553621, 269.4036635227518, -288.67175091787789, -448.2697848972258, -169.87592108961007);
            TestUtils.AreEqual(--a3, r3);
        }

        [TestCompiler]
        public static void double3x3_operator_postfix_dec()
        {
            double3x3 a0 = double3x3(-148.11175806266806, 252.84978473039803, -106.15790395911688, 132.64859277226435, -370.72375100232836, 343.31118575824019, -321.15781441384826, 450.60180565835992, 330.95722190055869);
            double3x3 r0 = double3x3(-148.11175806266806, 252.84978473039803, -106.15790395911688, 132.64859277226435, -370.72375100232836, 343.31118575824019, -321.15781441384826, 450.60180565835992, 330.95722190055869);
            TestUtils.AreEqual(a0--, r0);

            double3x3 a1 = double3x3(425.62580533773905, -164.30984576247158, 234.14963995392884, -320.72596064243743, -337.03135673004732, -310.26764288091454, -298.12717380101196, 453.00240561599026, -453.87702510034529);
            double3x3 r1 = double3x3(425.62580533773905, -164.30984576247158, 234.14963995392884, -320.72596064243743, -337.03135673004732, -310.26764288091454, -298.12717380101196, 453.00240561599026, -453.87702510034529);
            TestUtils.AreEqual(a1--, r1);

            double3x3 a2 = double3x3(-134.77023107128696, 511.61862850171451, -239.31490599332142, -492.06114386583732, 475.65828798509119, 56.159181859418368, 24.93278385369706, -92.121535105687371, 247.94059693438032);
            double3x3 r2 = double3x3(-134.77023107128696, 511.61862850171451, -239.31490599332142, -492.06114386583732, 475.65828798509119, 56.159181859418368, 24.93278385369706, -92.121535105687371, 247.94059693438032);
            TestUtils.AreEqual(a2--, r2);

            double3x3 a3 = double3x3(-467.19752548038844, 294.71154631986815, 47.244094155376843, -130.60298663498975, -335.94721022990871, 63.551795273810512, 41.2713649465104, 228.40885530617504, 427.09362312177825);
            double3x3 r3 = double3x3(-467.19752548038844, 294.71154631986815, 47.244094155376843, -130.60298663498975, -335.94721022990871, 63.551795273810512, 41.2713649465104, 228.40885530617504, 427.09362312177825);
            TestUtils.AreEqual(a3--, r3);
        }


    }
}
