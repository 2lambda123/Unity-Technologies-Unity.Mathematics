//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using static Unity.Mathematics.math;
using Burst.Compiler.IL.Tests;

namespace Unity.Mathematics.Tests
{
    [TestFixture]
    public class TestFloat4x4
    {
        [TestCompiler]
        public static void float4x4_zero()
        {
            TestUtils.AreEqual(float4x4.zero.c0.x, 0.0f);
            TestUtils.AreEqual(float4x4.zero.c0.y, 0.0f);
            TestUtils.AreEqual(float4x4.zero.c0.z, 0.0f);
            TestUtils.AreEqual(float4x4.zero.c0.w, 0.0f);
            TestUtils.AreEqual(float4x4.zero.c1.x, 0.0f);
            TestUtils.AreEqual(float4x4.zero.c1.y, 0.0f);
            TestUtils.AreEqual(float4x4.zero.c1.z, 0.0f);
            TestUtils.AreEqual(float4x4.zero.c1.w, 0.0f);
            TestUtils.AreEqual(float4x4.zero.c2.x, 0.0f);
            TestUtils.AreEqual(float4x4.zero.c2.y, 0.0f);
            TestUtils.AreEqual(float4x4.zero.c2.z, 0.0f);
            TestUtils.AreEqual(float4x4.zero.c2.w, 0.0f);
            TestUtils.AreEqual(float4x4.zero.c3.x, 0.0f);
            TestUtils.AreEqual(float4x4.zero.c3.y, 0.0f);
            TestUtils.AreEqual(float4x4.zero.c3.z, 0.0f);
            TestUtils.AreEqual(float4x4.zero.c3.w, 0.0f);
        }

        [TestCompiler]
        public static void float4x4_identity()
        {
            TestUtils.AreEqual(float4x4.identity.c0.x, 1.0f);
            TestUtils.AreEqual(float4x4.identity.c0.y, 0.0f);
            TestUtils.AreEqual(float4x4.identity.c0.z, 0.0f);
            TestUtils.AreEqual(float4x4.identity.c0.w, 0.0f);
            TestUtils.AreEqual(float4x4.identity.c1.x, 0.0f);
            TestUtils.AreEqual(float4x4.identity.c1.y, 1.0f);
            TestUtils.AreEqual(float4x4.identity.c1.z, 0.0f);
            TestUtils.AreEqual(float4x4.identity.c1.w, 0.0f);
            TestUtils.AreEqual(float4x4.identity.c2.x, 0.0f);
            TestUtils.AreEqual(float4x4.identity.c2.y, 0.0f);
            TestUtils.AreEqual(float4x4.identity.c2.z, 1.0f);
            TestUtils.AreEqual(float4x4.identity.c2.w, 0.0f);
            TestUtils.AreEqual(float4x4.identity.c3.x, 0.0f);
            TestUtils.AreEqual(float4x4.identity.c3.y, 0.0f);
            TestUtils.AreEqual(float4x4.identity.c3.z, 0.0f);
            TestUtils.AreEqual(float4x4.identity.c3.w, 1.0f);
        }

        [TestCompiler]
        public static void float4x4_operator_equal_wide_wide()
        {
            float4x4 a0 = float4x4(331.744141f, -417.6833f, -438.450867f, -57.99066f, -183.1134f, 72.3228149f, -292.706116f, -181.376923f, 43.84778f, 481.287354f, 258.4253f, 352.580444f, 70.85327f, -41.08313f, -501.143951f, 469.417725f);
            float4x4 b0 = float4x4(-426.582825f, 431.344543f, 263.339172f, -309.3919f, 391.1996f, -468.237274f, -389.9116f, -192.672028f, -8.950195f, -339.086975f, 104.677917f, -443.5048f, 358.640137f, -415.7492f, -141.969635f, 379.130066f);
            bool4x4 r0 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            float4x4 a1 = float4x4(379.497925f, -174.4578f, -456.507446f, 172.215576f, 258.43927f, 509.8202f, -199.17569f, 194.292358f, 448.9026f, -419.461578f, -267.8828f, 405.6131f, -267.163269f, -151.508728f, -207.5777f, -320.248f);
            float4x4 b1 = float4x4(56.10376f, 132.809509f, -233.776184f, -159.645721f, 369.805054f, 41.04828f, 316.684326f, -258.031738f, -239.097748f, -181.013641f, 241.82428f, -284.933777f, -486.1785f, -285.091f, -154.241455f, 470.856262f);
            bool4x4 r1 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            float4x4 a2 = float4x4(433.78186f, -335.735229f, 296.5462f, -248.164581f, 330.834229f, -85.5262756f, 106.857727f, 267.6709f, -347.652283f, -352.6518f, -234.508057f, 135.012878f, 162.490662f, -112.027222f, 429.732544f, -464.068054f);
            float4x4 b2 = float4x4(205.192749f, 163.190125f, 197.813538f, -234.376038f, 128.9331f, 400.6203f, -200.4678f, 266.168945f, -295.0514f, 249.9538f, 138.4314f, -374.326324f, -401.524f, -482.328979f, -54.69342f, -99.3192444f);
            bool4x4 r2 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            float4x4 a3 = float4x4(178.052979f, 119.266418f, 140.419556f, -42.57794f, -502.9332f, 0.152160645f, -184.649475f, 120.208496f, -241.849365f, -449.438721f, -313.589661f, 193.364258f, -441.820129f, -511.300568f, -202.15921f, -152.108582f);
            float4x4 b3 = float4x4(-473.036041f, 107.631592f, -480.8977f, -260.91095f, 326.9145f, 115.184082f, -507.007172f, 445.3045f, 94.32233f, -424.5263f, -58.20175f, -216.649536f, -473.408875f, 186.07019f, -277.8356f, -126.472351f);
            bool4x4 r3 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_equal_wide_scalar()
        {
            float4x4 a0 = float4x4(327.101929f, 440.467224f, -443.745178f, 325.546265f, 435.371765f, 58.38208f, -398.435f, 377.0666f, 445.502136f, -17.7927246f, -92.37259f, -350.2315f, 450.236755f, 14.9833374f, -504.426971f, 412.488525f);
            float b0 = (342.440552f);
            bool4x4 r0 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            float4x4 a1 = float4x4(454.7033f, 356.93158f, 413.762878f, 233.3728f, -481.17157f, 355.5678f, -235.840881f, 322.297729f, 114.381042f, 352.201782f, -335.634521f, 273.712158f, 98.97534f, -173.683014f, 260.326843f, -154.797943f);
            float b1 = (289.2917f);
            bool4x4 r1 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            float4x4 a2 = float4x4(-40.9360046f, -244.18042f, 150.705566f, 46.6643066f, 510.5437f, -466.703918f, -313.411346f, -227.1417f, -429.960022f, -375.853638f, -413.806458f, 81.11273f, 500.628052f, 127.815674f, -27.17163f, 16.4016724f);
            float b2 = (482.790283f);
            bool4x4 r2 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            float4x4 a3 = float4x4(-348.93158f, -372.772522f, 6.144104f, -418.270874f, 311.612122f, -427.1006f, 304.0957f, -508.7515f, -191.009277f, 218.1803f, 449.199524f, -408.645569f, -165.473236f, -356.10968f, 159.300537f, 316.5664f);
            float b3 = (262.974548f);
            bool4x4 r3 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_equal_scalar_wide()
        {
            float a0 = (430.781128f);
            float4x4 b0 = float4x4(-434.727478f, 103.730347f, -263.03656f, -224.560181f, 204.110779f, 196.568237f, -424.756561f, 467.4505f, -45.4336243f, 138.191589f, 181.061951f, -449.2158f, -335.154449f, -77.46622f, 107.902405f, -330.9517f);
            bool4x4 r0 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            float a1 = (-115.29895f);
            float4x4 b1 = float4x4(244.522888f, -481.4762f, 134.603821f, -208.271637f, 420.9162f, -464.2389f, 64.91498f, 62.8317261f, -429.80426f, -5.533844f, 21.2402954f, 261.038635f, -30.1661377f, -380.670441f, 235.491638f, -322.037445f);
            bool4x4 r1 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            float a2 = (450.00824f);
            float4x4 b2 = float4x4(375.5432f, -369.7356f, 278.307922f, 429.931946f, 26.0113525f, 447.70752f, 10.2235107f, 158.794312f, 81.00751f, 55.3158569f, 446.983459f, -173.133026f, 395.042969f, 121.359192f, 53.0856323f, -222.371277f);
            bool4x4 r2 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            float a3 = (510.417419f);
            float4x4 b3 = float4x4(198.145752f, 30.177002f, -136.85434f, 127.052795f, -343.643677f, 55.9691772f, 184.048462f, 224.6081f, 121.9151f, -309.897949f, 66.00311f, -305.588135f, 496.732544f, 6.86206055f, 457.570251f, 384.821655f);
            bool4x4 r3 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_not_equal_wide_wide()
        {
            float4x4 a0 = float4x4(19.2539673f, 121.335449f, 468.3097f, -212.365448f, -410.633484f, 507.534241f, 52.20117f, -319.6424f, -448.9063f, 255.3703f, -70.46268f, -18.9137878f, -131.624084f, 288.074951f, 290.717957f, 191.2832f);
            float4x4 b0 = float4x4(-249.066345f, -19.0466f, 323.622559f, 294.941956f, -492.460968f, -166.483276f, 421.1953f, 87.6629f, 193.875122f, -279.289825f, 158.513611f, 426.635132f, -404.547821f, 480.740479f, -184.480316f, 355.445068f);
            bool4x4 r0 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            float4x4 a1 = float4x4(-220.54245f, 404.7948f, -266.012451f, 258.967346f, -375.447144f, 124.137634f, -395.242065f, 154.09259f, -270.3957f, 265.8225f, -70.6264343f, -431.107422f, 281.847473f, -399.4225f, -476.4524f, -507.77597f);
            float4x4 b1 = float4x4(414.6756f, -134.759186f, -458.719055f, -43.3425f, -446.3987f, -50.54947f, -142.774689f, -462.0124f, 511.044678f, -497.399323f, -267.937927f, 372.740356f, 206.700317f, 360.857483f, -181.105927f, 285.8468f);
            bool4x4 r1 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            float4x4 a2 = float4x4(-171.744171f, -457.940826f, -495.599457f, -158.324646f, 446.907776f, -415.842682f, -477.624023f, 309.877136f, -46.64041f, 239.136169f, 61.6972046f, -85.92847f, 333.78302f, 95.39337f, 452.70343f, -78.89011f);
            float4x4 b2 = float4x4(-359.910828f, 149.525635f, 327.11676f, -502.187256f, -213.2872f, -136.063965f, -480.364319f, -500.8494f, 238.087341f, 291.673279f, 176.682556f, -464.6045f, -479.9456f, 39.28723f, 410.109863f, 317.6588f);
            bool4x4 r2 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            float4x4 a3 = float4x4(-450.622742f, -390.8053f, -196.833862f, -478.4129f, 157.369324f, -432.3071f, -364.095245f, 338.36438f, 408.823181f, -104.502106f, 91.75787f, -287.8504f, 238.017639f, 327.7426f, -280.2766f, -442.8907f);
            float4x4 b3 = float4x4(350.290833f, 476.668762f, -507.433f, -85.51248f, 256.009766f, -369.339233f, 216.956543f, 250.211731f, -410.5731f, -202.539734f, -287.449219f, 163.5733f, -505.3363f, 496.34613f, 314.388123f, -475.2021f);
            bool4x4 r3 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_not_equal_wide_scalar()
        {
            float4x4 a0 = float4x4(-418.022278f, 231.448242f, -469.478516f, -94.97409f, -376.084381f, -428.119019f, 492.9278f, -91.33383f, 80.41858f, -124.39093f, -409.290527f, 353.96106f, 170.989319f, -494.895752f, 181.015137f, -180.176971f);
            float b0 = (-206.336578f);
            bool4x4 r0 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            float4x4 a1 = float4x4(324.904724f, 86.04675f, 75.14545f, -505.780518f, 504.517944f, 385.4771f, -221.906036f, 237.351563f, 401.893555f, -418.3873f, -235.435944f, 449.5686f, 242.233826f, -117.3277f, 434.6377f, 111.69043f);
            float b1 = (365.89978f);
            bool4x4 r1 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            float4x4 a2 = float4x4(503.1595f, -376.869751f, 264.2846f, -50.7024536f, -102.235168f, -203.671021f, -454.774658f, -12.1090393f, 272.4212f, -412.821442f, 66.87189f, -319.171753f, -190.822876f, 392.8404f, -341.5468f, -308.191833f);
            float b2 = (450.927917f);
            bool4x4 r2 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            float4x4 a3 = float4x4(-389.8844f, 250.916077f, 376.87616f, -424.24176f, -198.854553f, 357.97113f, 264.427551f, 179.674377f, -265.977936f, 502.2683f, 216.363708f, -28.9024353f, 350.184753f, 504.936768f, -331.928223f, -269.7294f);
            float b3 = (164.820618f);
            bool4x4 r3 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_not_equal_scalar_wide()
        {
            float a0 = (357.343384f);
            float4x4 b0 = float4x4(192.976379f, -323.1933f, -25.1252441f, -270.503082f, -454.426819f, -458.8189f, -274.5384f, 127.642212f, -43.8877258f, -179.47229f, 498.287659f, -333.8144f, -169.487946f, -146.258789f, -33.028656f, 156.743591f);
            bool4x4 r0 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            float a1 = (-285.206543f);
            float4x4 b1 = float4x4(-10.882843f, 259.283447f, -469.940765f, 46.4143066f, -415.384338f, 311.547668f, 244.515991f, 110.527771f, -290.509644f, -53.821167f, -362.343781f, -455.7852f, -199.0863f, 298.186951f, 319.69635f, 346.52832f);
            bool4x4 r1 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            float a2 = (-314.9336f);
            float4x4 b2 = float4x4(-106.494812f, 324.17688f, 394.819275f, -341.915222f, -461.862549f, 63.3418579f, 52.88849f, 374.55603f, -92.46463f, -421.137146f, 171.128052f, -215.688965f, -321.5428f, -15.0583191f, 259.5998f, -287.845276f);
            bool4x4 r2 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            float a3 = (-303.912659f);
            float4x4 b3 = float4x4(-230.063263f, 382.651917f, -244.704529f, -201.070892f, 96.36072f, -122.741028f, 242.358765f, 130.969177f, 348.082825f, 107.002258f, -424.19458f, 71.42737f, -356.8014f, 34.34076f, -333.4087f, -168.342712f);
            bool4x4 r3 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_less_wide_wide()
        {
            float4x4 a0 = float4x4(487.8249f, -508.921722f, 53.8760376f, 443.786926f, -81.07861f, 103.165527f, -496.199768f, 30.0013428f, 490.884521f, 485.697083f, -360.631073f, -442.654358f, -310.858032f, -142.116028f, -131.921722f, -279.917725f);
            float4x4 b0 = float4x4(453.097351f, -123.830566f, 492.750122f, 434.46344f, -402.464783f, -480.752319f, 317.300659f, 175.821045f, 301.866333f, 77.77667f, -188.57605f, 479.3379f, -393.342255f, 21.69635f, 151.5708f, -115.47818f);
            bool4x4 r0 = bool4x4(false, true, true, false, false, false, true, true, false, false, true, true, false, true, true, true);
            TestUtils.AreEqual(a0 < b0, r0);

            float4x4 a1 = float4x4(-335.161621f, 207.237366f, 267.394043f, 259.686523f, 197.362366f, 378.0946f, -358.618958f, -187.3323f, -367.859619f, -268.33905f, 301.925049f, -455.977753f, 383.7517f, -324.972565f, 122.86615f, 54.38513f);
            float4x4 b1 = float4x4(-417.1082f, -272.838745f, 210.978516f, -355.154755f, 183.079834f, -260.3083f, 312.9527f, 383.91626f, -170.578735f, 102.495972f, 477.086f, 164.40094f, -476.2596f, -64.78168f, -89.9094238f, 279.3506f);
            bool4x4 r1 = bool4x4(false, false, false, false, false, false, true, true, true, true, true, true, false, true, false, true);
            TestUtils.AreEqual(a1 < b1, r1);

            float4x4 a2 = float4x4(389.452942f, 366.4093f, -401.936737f, 420.427f, -469.8202f, 392.4143f, -54.6706543f, 325.956848f, 305.990051f, -122.444f, -92.09015f, 94.59674f, -473.130432f, -144.590424f, 23.95111f, 33.9790649f);
            float4x4 b2 = float4x4(-293.356323f, 432.908447f, -209.159943f, -232.094f, 328.851868f, -31.7108765f, 329.653931f, -111.8107f, -14.0323181f, -473.342957f, 129.586365f, -300.24762f, -469.163544f, 231.653625f, -187.531769f, -224.72818f);
            bool4x4 r2 = bool4x4(false, true, true, false, true, false, true, false, false, false, true, false, true, true, false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            float4x4 a3 = float4x4(-383.305328f, -137.76123f, 458.5434f, 273.853027f, -79.00577f, 60.3161621f, -427.3283f, -292.9284f, -290.216431f, 141.22821f, -479.465424f, -140.559265f, 124.046936f, 394.038879f, 447.430481f, 255.9549f);
            float4x4 b3 = float4x4(-413.255981f, 446.737366f, -108.240753f, 353.3003f, 475.754944f, 485.073242f, 87.73309f, -457.902222f, 298.838135f, -375.1015f, 15.7280884f, -252.133423f, 154.656921f, -444.7732f, -323.2266f, 229.711609f);
            bool4x4 r3 = bool4x4(false, true, false, true, true, true, true, false, true, false, true, false, true, false, false, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_less_wide_scalar()
        {
            float4x4 a0 = float4x4(18.1535645f, -409.346466f, 180.7865f, -185.154968f, 228.264709f, 124.125732f, 265.743835f, -307.545563f, 493.123169f, 36.3736572f, 131.67981f, 85.93457f, -89.3711853f, -36.8948059f, -491.257172f, -193.741882f);
            float b0 = (152.320862f);
            bool4x4 r0 = bool4x4(true, true, false, true, false, true, false, true, false, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 < b0, r0);

            float4x4 a1 = float4x4(-320.661f, -392.517334f, 435.076416f, 181.86554f, 350.0327f, -108.90918f, -9.381622f, 109.856995f, -377.404f, -91.78177f, -197.499542f, -324.0164f, -414.565826f, -141.8559f, -107.000946f, 364.8946f);
            float b1 = (424.3283f);
            bool4x4 r1 = bool4x4(true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 < b1, r1);

            float4x4 a2 = float4x4(246.614075f, -130.2493f, 309.737122f, 219.850952f, -29.4940186f, 425.7171f, -20.5202942f, 177.995361f, -28.9998474f, 94.57269f, -344.9118f, -137.279968f, -230.438782f, -49.2548523f, 171.460266f, 193.200012f);
            float b2 = (337.6457f);
            bool4x4 r2 = bool4x4(true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 < b2, r2);

            float4x4 a3 = float4x4(151.697021f, -177.425842f, -246.024445f, 348.288025f, 314.288147f, 211.562744f, -321.8319f, 216.988037f, 93.6687f, -296.092468f, -48.7566223f, -495.529175f, 395.689026f, -333.770447f, -273.3192f, 233.039978f);
            float b3 = (-167.172119f);
            bool4x4 r3 = bool4x4(false, true, true, false, false, false, true, false, false, true, false, true, false, true, true, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_less_scalar_wide()
        {
            float a0 = (416.681274f);
            float4x4 b0 = float4x4(-105.389069f, -389.2496f, 408.846863f, -87.03952f, 268.691345f, -470.20163f, 271.315674f, -170.322723f, -156.598419f, -0.2886963f, 72.09082f, -54.4299927f, 191.603271f, 370.544f, 283.232422f, -362.762024f);
            bool4x4 r0 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 < b0, r0);

            float a1 = (-145.500977f);
            float4x4 b1 = float4x4(315.129883f, 340.8296f, -60.229248f, -194.843689f, -261.056763f, -246.825867f, 91.5376f, -233.5228f, 16.3255615f, -44.0384827f, 49.5278931f, -161.31601f, 230.163574f, -341.875549f, 87.1088257f, 229.0669f);
            bool4x4 r1 = bool4x4(true, true, true, false, false, false, true, false, true, true, true, false, true, false, true, true);
            TestUtils.AreEqual(a1 < b1, r1);

            float a2 = (53.4827271f);
            float4x4 b2 = float4x4(353.14386f, -435.014648f, -349.595825f, 272.964172f, -335.467438f, -92.51926f, 95.6543f, 242.6903f, -23.8696289f, -296.855469f, 361.50354f, 73.51141f, 480.124268f, -411.623077f, -424.673645f, 328.378235f);
            bool4x4 r2 = bool4x4(true, false, false, true, false, false, true, true, false, false, true, true, true, false, false, true);
            TestUtils.AreEqual(a2 < b2, r2);

            float a3 = (433.9438f);
            float4x4 b3 = float4x4(469.144531f, 139.9613f, -243.380829f, 99.52496f, -356.332336f, 369.5763f, -194.690735f, -365.516724f, -259.634247f, 85.83685f, -290.2122f, 502.9933f, 125.238037f, -170.413177f, 496.982f, 228.503113f);
            bool4x4 r3 = bool4x4(true, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_greater_wide_wide()
        {
            float4x4 a0 = float4x4(-188.03302f, 234.300232f, -56.30594f, 240.958374f, 501.4876f, -303.425f, -305.5091f, -470.742554f, -305.090759f, 26.0454712f, 169.997375f, -498.388031f, 270.142944f, 69.6588745f, -163.975159f, 273.174133f);
            float4x4 b0 = float4x4(-17.4008179f, -59.53961f, -24.2853088f, 222.387512f, -207.170441f, 365.5465f, 183.5733f, -23.080719f, 337.163818f, 175.811768f, -8.514038f, -125.865387f, -212.857056f, 12.6571045f, 134.17511f, -101.511993f);
            bool4x4 r0 = bool4x4(false, true, false, true, true, false, false, false, false, false, true, false, true, true, false, true);
            TestUtils.AreEqual(a0 > b0, r0);

            float4x4 a1 = float4x4(193.8711f, -157.939331f, 439.0537f, 414.232666f, -246.558075f, 326.2243f, -457.296661f, -338.94574f, 310.630127f, -134.709412f, 485.6823f, -400.953827f, -31.0127869f, 182.317444f, 418.0558f, -125.63736f);
            float4x4 b1 = float4x4(-505.14505f, -150.596619f, 286.160583f, 358.075439f, 105.754028f, 61.5240479f, 144.405334f, -298.4254f, 485.263245f, -341.976929f, 74.8334351f, 332.481018f, -151.834412f, -355.448883f, -283.69873f, -144.6875f);
            bool4x4 r1 = bool4x4(true, false, true, true, false, true, false, false, false, true, true, false, true, true, true, true);
            TestUtils.AreEqual(a1 > b1, r1);

            float4x4 a2 = float4x4(31.6554565f, -340.324646f, -170.487366f, 49.8656f, 434.931152f, -89.63016f, 177.261658f, -180.568726f, -385.911346f, 214.026978f, -243.115479f, -75.1943054f, 407.808777f, 392.4162f, -408.15686f, 452.019653f);
            float4x4 b2 = float4x4(310.086975f, -312.364044f, 191.854065f, -79.25134f, 179.970032f, -447.756683f, -47.91211f, -386.2624f, -143.91568f, -137.2384f, 103.151062f, -392.962341f, 21.57965f, 78.88812f, 257.681519f, -474.859375f);
            bool4x4 r2 = bool4x4(false, false, false, true, true, true, true, true, false, true, false, true, true, true, false, true);
            TestUtils.AreEqual(a2 > b2, r2);

            float4x4 a3 = float4x4(-280.6086f, -482.131378f, -27.27002f, 384.061951f, -76.602356f, -264.908081f, -347.536377f, -356.78064f, -483.2657f, -481.537537f, 14.274292f, -413.572021f, -126.718689f, -208.172791f, 311.437866f, -183.094482f);
            float4x4 b3 = float4x4(-41.0882263f, -255.383667f, 485.418335f, -393.223938f, 456.541931f, -206.28772f, -465.197144f, -495.1007f, 56.5797729f, 49.9714355f, -500.398956f, 440.504333f, -459.362274f, 319.932983f, 482.977478f, -334.750366f);
            bool4x4 r3 = bool4x4(false, false, false, true, false, false, true, true, false, false, true, false, true, false, false, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_greater_wide_scalar()
        {
            float4x4 a0 = float4x4(468.8808f, -355.421021f, -45.708252f, 407.176575f, 348.72522f, 418.545349f, -422.750183f, -364.2755f, 434.163635f, -255.049072f, 178.8064f, 379.823364f, -346.942383f, -121.102142f, 164.48761f, -282.735718f);
            float b0 = (201.802734f);
            bool4x4 r0 = bool4x4(true, false, false, true, true, true, false, false, true, false, false, true, false, false, false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            float4x4 a1 = float4x4(437.083984f, 208.428467f, -509.6458f, -293.801758f, 127.584412f, 488.46167f, -162.216888f, 301.607727f, -345.053375f, -76.30057f, -238.100464f, -238.177124f, -42.973877f, -427.231781f, 277.377869f, -130.1195f);
            float b1 = (15.6209717f);
            bool4x4 r1 = bool4x4(true, true, false, false, true, true, false, true, false, false, false, false, false, false, true, false);
            TestUtils.AreEqual(a1 > b1, r1);

            float4x4 a2 = float4x4(-142.3913f, -137.017181f, -7.19000244f, 237.227966f, 96.94458f, 300.371826f, 459.7182f, 490.047729f, 449.307373f, -112.741364f, -137.8487f, 132.370483f, 410.731384f, 228.559631f, 434.726929f, -344.5157f);
            float b2 = (100.413269f);
            bool4x4 r2 = bool4x4(false, false, false, true, false, true, true, true, true, false, false, true, true, true, true, false);
            TestUtils.AreEqual(a2 > b2, r2);

            float4x4 a3 = float4x4(-223.801331f, 485.099976f, 239.058167f, 250.682556f, -437.781647f, -331.88266f, -395.491364f, -406.431122f, 181.778625f, -17.1540833f, 327.350281f, 385.9016f, -34.86252f, -339.8173f, 413.428467f, -2.05709839f);
            float b3 = (-311.5487f);
            bool4x4 r3 = bool4x4(true, true, true, true, false, false, false, false, true, true, true, true, true, false, true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_greater_scalar_wide()
        {
            float a0 = (137.504211f);
            float4x4 b0 = float4x4(-443.866821f, 279.852783f, -462.4043f, -280.713776f, 120.712769f, -31.6700134f, 363.428345f, 263.125427f, -156.36087f, 66.3540039f, -303.1296f, 419.3374f, -392.721069f, -378.762939f, -398.361145f, -314.282471f);
            bool4x4 r0 = bool4x4(true, false, true, true, true, true, false, false, true, true, true, false, true, true, true, true);
            TestUtils.AreEqual(a0 > b0, r0);

            float a1 = (89.5307f);
            float4x4 b1 = float4x4(408.407166f, 303.3543f, 16.916748f, -425.384216f, 205.63916f, -181.906982f, 256.7876f, -272.8026f, -192.998962f, 457.5393f, -12.8081055f, 421.600769f, -235.210266f, -483.95105f, 157.529114f, 193.490845f);
            bool4x4 r1 = bool4x4(false, false, true, true, false, true, false, true, true, false, true, false, true, true, false, false);
            TestUtils.AreEqual(a1 > b1, r1);

            float a2 = (-301.340332f);
            float4x4 b2 = float4x4(-252.4213f, 181.764282f, -272.323181f, 162.383667f, -384.406525f, -434.1296f, 98.33081f, -438.860046f, 73.80786f, -466.34906f, -315.6296f, -310.005737f, 12.364563f, 432.5692f, -460.619873f, 364.926331f);
            bool4x4 r2 = bool4x4(false, false, false, false, true, true, false, true, false, true, true, true, false, false, true, false);
            TestUtils.AreEqual(a2 > b2, r2);

            float a3 = (350.0462f);
            float4x4 b3 = float4x4(222.446655f, -88.21329f, -115.269562f, 50.8884277f, -137.506012f, -50.2402649f, -207.191925f, 504.088867f, -198.288239f, 22.79071f, -135.76355f, 353.524658f, -433.1506f, 38.3050537f, 51.3412476f, -286.153442f);
            bool4x4 r3 = bool4x4(true, true, true, true, true, true, true, false, true, true, true, false, true, true, true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_less_equal_wide_wide()
        {
            float4x4 a0 = float4x4(333.0476f, 239.35083f, 26.5692139f, 41.4924927f, -162.662354f, -271.002747f, -108.986206f, 392.0816f, 314.488647f, 208.102173f, 39.9359741f, 458.7705f, -404.075f, 359.389954f, 405.929749f, -463.0184f);
            float4x4 b0 = float4x4(46.1311646f, -378.082336f, -466.7782f, -173.335022f, -482.2393f, 183.3465f, 399.076172f, -127.637085f, -118.196838f, -329.727448f, -208.817627f, 368.286865f, 68.84564f, 452.365234f, -255.050629f, 440.1126f);
            bool4x4 r0 = bool4x4(false, false, false, false, false, true, true, false, false, false, false, false, true, true, false, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            float4x4 a1 = float4x4(-459.443024f, 271.79187f, 73.09076f, 263.657959f, -355.346161f, -184.612061f, -320.97345f, 340.874939f, 226.31f, 186.879822f, -130.892334f, -315.204651f, 99.36072f, -486.007324f, -314.168152f, -67.26477f);
            float4x4 b1 = float4x4(-138.225769f, -237.159058f, 201.343079f, -403.248749f, 230.682983f, -57.3156433f, 124.1311f, 38.1745f, 209.631958f, 236.809814f, 485.7528f, 29.8652344f, 383.063965f, 469.723572f, 101.127319f, -419.6117f);
            bool4x4 r1 = bool4x4(true, false, true, false, true, true, true, false, false, true, true, true, true, true, true, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            float4x4 a2 = float4x4(492.7791f, 130.789551f, -384.7157f, 311.272217f, 130.1452f, -486.3813f, 487.794434f, 177.260315f, 239.970642f, -285.944763f, 70.06958f, 59.0049438f, -335.021118f, 175.480225f, 175.350342f, 422.919373f);
            float4x4 b2 = float4x4(-199.115326f, -482.760468f, 117.240662f, -398.854431f, 99.35089f, 321.253f, 4.08618164f, -16.2060852f, -190.784576f, -315.7022f, -187.828217f, -433.195862f, -270.073364f, 202.0268f, 305.9344f, 55.52655f);
            bool4x4 r2 = bool4x4(false, false, true, false, false, true, false, false, false, false, false, false, true, true, true, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            float4x4 a3 = float4x4(-214.052277f, -38.0947571f, 505.341553f, -89.10977f, 410.359741f, -405.3354f, 460.1341f, 54.0708f, -306.19635f, -282.24707f, -124.927948f, 22.3187256f, 253.879761f, 364.260681f, 453.760437f, -62.2048035f);
            float4x4 b3 = float4x4(-277.000366f, 390.1419f, 311.635376f, -402.9307f, 73.73425f, 281.756775f, -124.457642f, -416.725464f, 42.19873f, 388.616455f, -263.562561f, 168.6073f, 51.9854126f, 397.357666f, -402.754578f, 336.210815f);
            bool4x4 r3 = bool4x4(false, true, false, false, false, true, false, false, true, true, false, true, false, true, false, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_less_equal_wide_scalar()
        {
            float4x4 a0 = float4x4(122.817688f, -283.694275f, -288.847656f, -185.453918f, -315.2539f, 279.5738f, -317.959167f, -255.5698f, -368.803284f, -132.488861f, -207.253967f, -328.492218f, -115.355896f, -192.5214f, 454.183838f, -38.063385f);
            float b0 = (-181.943909f);
            bool4x4 r0 = bool4x4(false, true, true, true, true, false, true, true, true, false, true, true, false, true, false, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            float4x4 a1 = float4x4(509.92865f, -231.749481f, 179.05542f, -253.84079f, 228.502563f, 320.4897f, 65.78052f, 157.06311f, 126.580139f, -476.033325f, 441.4171f, -281.348267f, 145.758118f, 403.821838f, 365.085327f, -483.509583f);
            float b1 = (-410.584534f);
            bool4x4 r1 = bool4x4(false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            float4x4 a2 = float4x4(-37.3781128f, 215.754883f, 403.4709f, -101.321106f, 129.15509f, 168.198242f, 117.474426f, 60.7937622f, 49.77649f, -57.94391f, 14.2515869f, 476.8059f, 44.86029f, -419.562378f, -331.7572f, 330.148071f);
            float b2 = (-168.46701f);
            bool4x4 r2 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            float4x4 a3 = float4x4(-213.327942f, -299.579742f, -118.323f, -135.341492f, 101.553589f, -92.18396f, 157.371826f, 169.483032f, 70.1659546f, 243.607178f, -247.376282f, -486.2215f, -2.56140137f, -24.3107f, -60.339325f, -356.982635f);
            float b3 = (158.4226f);
            bool4x4 r3 = bool4x4(true, true, true, true, true, true, true, false, true, false, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_less_equal_scalar_wide()
        {
            float a0 = (-336.4657f);
            float4x4 b0 = float4x4(251.958374f, -22.8583069f, -238.905853f, 284.666626f, -358.324f, 468.530273f, -439.037231f, -197.067688f, -367.59552f, -143.895081f, -387.8427f, -88.23752f, 439.360535f, -487.9847f, -393.415863f, 399.102478f);
            bool4x4 r0 = bool4x4(true, true, true, true, false, true, false, true, false, true, false, true, true, false, false, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            float a1 = (365.36438f);
            float4x4 b1 = float4x4(-225.015259f, -305.5796f, -155.50473f, -241.3457f, -22.9373779f, -113.94046f, 421.051025f, -493.358154f, -422.88028f, 27.0828857f, -505.903076f, 470.219849f, 399.418335f, 312.550354f, -309.136749f, -317.886841f);
            bool4x4 r1 = bool4x4(false, false, false, false, false, false, true, false, false, false, false, true, true, false, false, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            float a2 = (-501.4554f);
            float4x4 b2 = float4x4(-73.50827f, 54.2999268f, -311.153778f, -112.9451f, -479.154938f, 429.135559f, 380.567444f, -274.0169f, -336.8193f, -86.04999f, -148.557709f, -324.375427f, 298.402771f, 505.1112f, -169.459564f, -57.31967f);
            bool4x4 r2 = bool4x4(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            float a3 = (0.130981445f);
            float4x4 b3 = float4x4(-40.39978f, 11.2077637f, -353.648651f, 416.88f, -237.104248f, -420.917847f, -147.956848f, 266.02478f, -447.443726f, -70.55267f, -445.134155f, -155.287567f, -255.013855f, 55.5545654f, 433.294067f, -282.350677f);
            bool4x4 r3 = bool4x4(false, true, false, true, false, false, false, true, false, false, false, false, false, true, true, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_greater_equal_wide_wide()
        {
            float4x4 a0 = float4x4(143.641235f, -251.704163f, 118.576172f, 23.871582f, 84.63403f, -145.382233f, -234.447327f, 90.46185f, 203.555847f, 370.9796f, -64.08972f, -140.503021f, -61.64731f, 463.918945f, -81.43878f, -56.36319f);
            float4x4 b0 = float4x4(-409.271027f, -84.91385f, 509.1283f, -61.13452f, 139.217224f, -30.2294312f, 210.736267f, 27.0149536f, 467.682922f, -206.05484f, 109.552368f, -413.970337f, 95.38501f, -493.097656f, 330.596924f, 106.934875f);
            bool4x4 r0 = bool4x4(true, false, false, true, false, false, false, true, false, true, false, true, false, true, false, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            float4x4 a1 = float4x4(39.7544556f, -389.112549f, 117.347229f, -460.3187f, -209.221191f, -223.7843f, -36.6575928f, 488.5995f, 437.58728f, -330.4093f, -373.0106f, -352.3084f, 243.232f, 488.733459f, -466.79068f, -491.69577f);
            float4x4 b1 = float4x4(-316.19577f, 206.490479f, 114.226807f, 54.4406128f, -242.842743f, 240.4956f, 151.109375f, 165.143127f, 92.21735f, 13.223999f, 204.379517f, -477.9111f, -349.733826f, -488.808838f, 4.96923828f, 266.0371f);
            bool4x4 r1 = bool4x4(true, false, true, false, true, false, false, true, true, false, false, true, true, true, false, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            float4x4 a2 = float4x4(-316.419617f, 442.0161f, 87.8488159f, 421.667725f, 416.001648f, -508.833618f, -178.66333f, 134.687256f, 118.785522f, -418.684937f, 149.006226f, -32.0545349f, -475.88736f, 475.258484f, 137.493286f, 9.231262f);
            float4x4 b2 = float4x4(259.682922f, -430.251556f, 395.971375f, -422.670959f, -195.461f, -333.246948f, 131.001343f, 299.243347f, -213.224213f, 338.343872f, 442.412842f, 347.374939f, -423.201447f, -44.9189453f, -483.5099f, 297.80957f);
            bool4x4 r2 = bool4x4(false, true, false, true, true, false, false, false, true, false, false, false, false, true, true, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            float4x4 a3 = float4x4(-263.146973f, 44.9152222f, 221.093262f, -434.705658f, 182.549622f, 109.222351f, 201.2132f, 212.7522f, 27.5789185f, -95.59433f, -88.3458252f, -394.969116f, -220.262543f, -466.3642f, 432.712952f, -48.1642456f);
            float4x4 b3 = float4x4(22.1785889f, 215.659546f, 406.851f, -470.384155f, -419.738342f, 334.450439f, 492.938538f, -399.769348f, -322.509857f, 258.433533f, -318.039642f, -246.832458f, -417.358826f, -0.949768066f, -45.41333f, 387.511475f);
            bool4x4 r3 = bool4x4(false, false, false, true, true, false, false, true, true, false, true, false, true, false, true, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_greater_equal_wide_scalar()
        {
            float4x4 a0 = float4x4(-355.36084f, 304.301453f, 385.12854f, -263.954834f, -435.806427f, 126.500793f, 77.0108f, -226.753937f, -212.650085f, -413.1958f, -11.076355f, -457.0079f, -123.012939f, 280.998047f, -112.265076f, 383.0702f);
            float b0 = (-139.19751f);
            bool4x4 r0 = bool4x4(false, true, true, false, false, true, true, false, false, false, true, false, true, true, true, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            float4x4 a1 = float4x4(173.831116f, -286.820068f, 404.740967f, 59.7572632f, 150.140442f, -264.706f, -13.230011f, -202.237823f, 64.6931152f, -182.857544f, -322.092163f, 454.143433f, -119.187012f, -472.931427f, 393.1292f, -335.408234f);
            float b1 = (-168.515747f);
            bool4x4 r1 = bool4x4(true, false, true, true, true, false, true, false, true, false, false, true, true, false, true, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            float4x4 a2 = float4x4(-430.910034f, -482.470825f, 261.039734f, -177.777771f, 128.379272f, 211.634644f, -125.348724f, -208.412567f, -36.8859253f, 127.953857f, 77.77246f, -298.682922f, 223.657654f, 166.668335f, -161.962158f, 429.687622f);
            float b2 = (56.3127441f);
            bool4x4 r2 = bool4x4(false, false, true, false, true, true, false, false, false, true, true, false, true, true, false, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            float4x4 a3 = float4x4(464.48175f, 163.795227f, -85.78122f, 96.8819f, 222.662048f, 57.0075073f, -113.641449f, 450.282959f, 11.5004272f, -202.641663f, -112.897034f, -168.897339f, 418.536926f, -452.264374f, 107.794434f, 390.40033f);
            float b3 = (-65.3729248f);
            bool4x4 r3 = bool4x4(true, true, false, true, true, true, false, true, true, false, false, false, true, false, true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_greater_equal_scalar_wide()
        {
            float a0 = (-246.073273f);
            float4x4 b0 = float4x4(142.15625f, -19.2986145f, -151.986877f, 330.020874f, -224.80011f, 451.5999f, -435.9818f, 405.881836f, -324.020142f, 300.8548f, -341.652924f, 349.348328f, -342.970947f, 397.824646f, 363.170837f, -141.004517f);
            bool4x4 r0 = bool4x4(false, false, false, false, false, false, true, false, true, false, true, false, true, false, false, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            float a1 = (-304.1397f);
            float4x4 b1 = float4x4(317.879517f, -371.1032f, -166.7135f, 191.643372f, -274.388062f, 33.1248169f, -54.8842163f, 442.023254f, 161.054626f, -191.782715f, 158.516846f, -506.656738f, 270.833069f, -134.918579f, -57.2349548f, -439.546265f);
            bool4x4 r1 = bool4x4(false, true, false, false, false, false, false, false, false, false, false, true, false, false, false, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            float a2 = (-101.919159f);
            float4x4 b2 = float4x4(145.802979f, -499.493225f, 447.140869f, 417.132874f, 441.340271f, -290.828918f, -332.456818f, 507.5188f, 92.5846558f, 432.372f, 445.113342f, 404.533569f, 372.266357f, 366.59375f, 485.050354f, 42.1818848f);
            bool4x4 r2 = bool4x4(false, true, false, false, false, true, true, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            float a3 = (-339.3036f);
            float4x4 b3 = float4x4(4.527954f, -98.5957f, 412.855957f, 74.28339f, -95.45566f, 459.576538f, 414.897339f, 399.99762f, 126.145264f, 131.382629f, -82.49863f, 400.538574f, -82.85321f, -76.2266541f, 227.582031f, 276.8946f);
            bool4x4 r3 = bool4x4(false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_add_wide_wide()
        {
            float4x4 a0 = float4x4(-404.27536f, -214.93515f, -164.2731f, 338.477173f, 302.848816f, -330.633f, -21.2443542f, 157.130432f, 32.4448242f, -333.966125f, -488.6353f, 484.605347f, -143.616638f, -246.090881f, -133.722687f, 280.921021f);
            float4x4 b0 = float4x4(433.900269f, 359.72052f, 420.5044f, -416.3719f, -163.213684f, -35.6521f, 260.761f, -20.1174622f, 156.770142f, 315.0406f, -110.87442f, -373.966431f, 12.482605f, 97.39429f, -149.583466f, -463.5646f);
            float4x4 r0 = float4x4(29.6249084f, 144.78537f, 256.2313f, -77.8947144f, 139.635132f, -366.2851f, 239.516632f, 137.01297f, 189.214966f, -18.9255371f, -599.509766f, 110.638916f, -131.134033f, -148.6966f, -283.306152f, -182.643585f);
            TestUtils.AreEqual(a0 + b0, r0);

            float4x4 a1 = float4x4(-197.236908f, 72.3357544f, 408.859131f, 362.2229f, -238.820435f, -305.657684f, 3.2989502f, -434.634155f, 50.4830322f, -353.551483f, 507.8617f, -19.4649048f, 461.294922f, -8.662842f, 154.595276f, 229.350769f);
            float4x4 b1 = float4x4(-332.266174f, 384.891052f, -47.640564f, 231.062012f, -383.314941f, -107.283905f, 367.018616f, 304.003784f, -509.41568f, -253.265533f, 419.9604f, 218.59906f, -352.968719f, 335.244324f, -270.917084f, -59.56772f);
            float4x4 r1 = float4x4(-529.503052f, 457.2268f, 361.218567f, 593.2849f, -622.1354f, -412.9416f, 370.317566f, -130.630371f, -458.932648f, -606.817f, 927.8221f, 199.134155f, 108.3262f, 326.581482f, -116.321808f, 169.783051f);
            TestUtils.AreEqual(a1 + b1, r1);

            float4x4 a2 = float4x4(67.8652954f, -350.4152f, -323.574768f, 83.02338f, 306.547241f, 41.8610229f, -317.216736f, 134.734619f, -64.88327f, -465.088745f, -308.031982f, -459.4263f, 199.19873f, 435.59613f, 473.022278f, -435.5333f);
            float4x4 b2 = float4x4(-379.06842f, -200.97818f, 284.239319f, -431.9146f, -53.0281372f, 406.679626f, 79.88922f, 1.36474609f, -38.094696f, -136.306976f, 22.1865845f, -105.197327f, 365.7367f, 249.827881f, -485.021423f, -479.903351f);
            float4x4 r2 = float4x4(-311.203125f, -551.3934f, -39.33545f, -348.891235f, 253.5191f, 448.540649f, -237.327515f, 136.099365f, -102.977966f, -601.395752f, -285.8454f, -564.623657f, 564.9354f, 685.424f, -11.9991455f, -915.436646f);
            TestUtils.AreEqual(a2 + b2, r2);

            float4x4 a3 = float4x4(-100.665741f, 336.85083f, 205.433777f, 115.578552f, -80.43906f, -47.8127747f, -133.9006f, 23.8157959f, 24.2966919f, -111.872406f, -317.828339f, -263.5357f, -431.64212f, 111.823059f, 360.6432f, -392.9369f);
            float4x4 b3 = float4x4(265.910034f, -129.6326f, 278.344055f, 278.2437f, -433.636871f, 48.88983f, 85.85547f, -130.5943f, 501.9724f, -319.310059f, -146.342224f, -466.32132f, 266.7821f, -177.3115f, 345.1955f, 279.568665f);
            float4x4 r3 = float4x4(165.2443f, 207.218231f, 483.777832f, 393.822266f, -514.0759f, 1.07705688f, -48.0451355f, -106.7785f, 526.2691f, -431.182465f, -464.170563f, -729.857056f, -164.860016f, -65.4884338f, 705.8387f, -113.368225f);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_add_wide_scalar()
        {
            float4x4 a0 = float4x4(-323.429443f, 324.634583f, -277.883453f, -472.86264f, -459.056519f, 144.1059f, -334.474182f, 149.114319f, -388.344f, 303.384583f, -7.709381f, -29.01889f, 45.1229858f, 101.801208f, -410.416f, 279.443237f);
            float b0 = (-311.2669f);
            float4x4 r0 = float4x4(-634.69635f, 13.3676758f, -589.1504f, -784.1295f, -770.3234f, -167.161011f, -645.7411f, -162.152588f, -699.6109f, -7.882324f, -318.9763f, -340.2858f, -266.143921f, -209.4657f, -721.682861f, -31.82367f);
            TestUtils.AreEqual(a0 + b0, r0);

            float4x4 a1 = float4x4(-191.047485f, 11.0637817f, -38.5522461f, 410.894958f, -14.2527771f, -218.204224f, -374.088928f, -344.117737f, -368.177551f, 94.00256f, 466.70813f, 141.67926f, -438.578247f, 299.5407f, -230.743561f, -393.342438f);
            float b1 = (118.387756f);
            float4x4 r1 = float4x4(-72.65973f, 129.451538f, 79.83551f, 529.2827f, 104.134979f, -99.81647f, -255.701172f, -225.72998f, -249.7898f, 212.39032f, 585.0959f, 260.067017f, -320.1905f, 417.928467f, -112.355804f, -274.954681f);
            TestUtils.AreEqual(a1 + b1, r1);

            float4x4 a2 = float4x4(-280.737122f, -471.077362f, 55.40204f, 390.843567f, 235.540955f, -261.955017f, 152.414978f, -386.3908f, -169.5328f, -135.850952f, 180.40448f, -45.86389f, 457.075562f, -428.395538f, -65.46414f, -479.952759f);
            float b2 = (307.491333f);
            float4x4 r2 = float4x4(26.7542114f, -163.586029f, 362.893372f, 698.3349f, 543.0323f, 45.5363159f, 459.9063f, -78.8994751f, 137.958527f, 171.640381f, 487.8958f, 261.627441f, 764.5669f, -120.904205f, 242.027191f, -172.461426f);
            TestUtils.AreEqual(a2 + b2, r2);

            float4x4 a3 = float4x4(351.625427f, -267.69812f, 300.59906f, -222.3244f, 214.98584f, 30.8388062f, -415.7945f, 383.255066f, 421.121033f, -461.896667f, -289.1823f, -504.564941f, -461.765747f, -508.156158f, -288.96582f, -147.676453f);
            float b3 = (291.51178f);
            float4x4 r3 = float4x4(643.1372f, 23.81366f, 592.11084f, 69.18738f, 506.49762f, 322.3506f, -124.282715f, 674.766846f, 712.6328f, -170.384888f, 2.32946777f, -213.053162f, -170.253967f, -216.644379f, 2.54595947f, 143.835327f);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_add_scalar_wide()
        {
            float a0 = (190.831238f);
            float4x4 b0 = float4x4(411.157166f, -70.76166f, -404.5351f, 238.02887f, 442.2439f, 151.431946f, -447.093872f, -299.924774f, 477.432739f, -292.327271f, 59.3156128f, -378.93335f, -228.865875f, -309.567322f, -78.70996f, -93.9873047f);
            float4x4 r0 = float4x4(601.9884f, 120.06958f, -213.703857f, 428.8601f, 633.075134f, 342.263184f, -256.262634f, -109.093536f, 668.264f, -101.496033f, 250.146851f, -188.102112f, -38.0346375f, -118.736084f, 112.121277f, 96.84393f);
            TestUtils.AreEqual(a0 + b0, r0);

            float a1 = (-173.508575f);
            float4x4 b1 = float4x4(342.767578f, -172.601349f, 76.3781738f, 502.4878f, -262.746582f, 353.173767f, 288.0697f, 433.607117f, 397.094482f, -309.569122f, 235.586182f, -383.315f, 81.2998657f, 440.019531f, -1.446228f, 277.807373f);
            float4x4 r1 = float4x4(169.259f, -346.109924f, -97.1304f, 328.979218f, -436.255157f, 179.665192f, 114.561127f, 260.098541f, 223.5859f, -483.0777f, 62.0776062f, -556.8236f, -92.20871f, 266.510956f, -174.9548f, 104.2988f);
            TestUtils.AreEqual(a1 + b1, r1);

            float a2 = (-488.5011f);
            float4x4 b2 = float4x4(268.6328f, -475.54068f, 490.330139f, -476.8236f, -203.885071f, 244.760437f, -484.204254f, -197.844f, -241.3187f, -251.078308f, -99.91083f, 443.419983f, 134.448914f, -447.6911f, -425.283142f, 49.8901978f);
            float4x4 r2 = float4x4(-219.868286f, -964.041748f, 1.82904053f, -965.3247f, -692.386169f, -243.740662f, -972.7053f, -686.3451f, -729.8198f, -739.5794f, -588.4119f, -45.0811157f, -354.0522f, -936.1922f, -913.784241f, -438.6109f);
            TestUtils.AreEqual(a2 + b2, r2);

            float a3 = (243.9668f);
            float4x4 b3 = float4x4(68.86005f, -445.4358f, 353.3672f, 200.343445f, 161.903748f, 88.0645752f, -180.604828f, 316.4217f, -466.850525f, -50.9989f, -170.680023f, -428.6098f, -115.867157f, -220.346771f, -451.2382f, -144.740723f);
            float4x4 r3 = float4x4(312.826843f, -201.469f, 597.334f, 444.310242f, 405.870544f, 332.031372f, 63.36197f, 560.3885f, -222.883728f, 192.9679f, 73.28677f, -184.643f, 128.09964f, 23.6200256f, -207.2714f, 99.2260742f);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_sub_wide_wide()
        {
            float4x4 a0 = float4x4(379.052246f, -16.164032f, 107.1604f, 30.0645752f, -428.4387f, 245.627747f, 179.604187f, 505.3778f, 317.7188f, -198.473389f, 166.69458f, -379.0271f, 332.89624f, 159.256226f, -405.395935f, -44.4034729f);
            float4x4 b0 = float4x4(236.683167f, 20.1707764f, 111.480408f, -484.67984f, -447.708679f, 18.19458f, -296.147644f, 367.636f, -267.455017f, -71.1860657f, -248.3346f, -138.191071f, -474.848175f, -275.859375f, -172.86972f, -72.15997f);
            float4x4 r0 = float4x4(142.36908f, -36.33481f, -4.32000732f, 514.7444f, 19.269989f, 227.433167f, 475.751831f, 137.741821f, 585.1738f, -127.287323f, 415.029175f, -240.836029f, 807.7444f, 435.1156f, -232.526215f, 27.7565f);
            TestUtils.AreEqual(a0 - b0, r0);

            float4x4 a1 = float4x4(-97.96677f, 427.353271f, 64.90527f, 448.51593f, 344.09552f, -299.151367f, 465.763245f, 402.467957f, -243.425079f, 333.471619f, -150.873566f, -29.31659f, 103.710266f, 199.274475f, 464.224182f, 432.716064f);
            float4x4 b1 = float4x4(-161.5686f, 498.741577f, -123.512634f, -329.4557f, -154.944733f, -481.698822f, 74.2055054f, -267.317078f, 211.440613f, 186.44928f, 471.0301f, 115.386841f, -389.972961f, 70.0085449f, -206.07605f, 256.43103f);
            float4x4 r1 = float4x4(63.6018372f, -71.3883057f, 188.417908f, 777.9716f, 499.040253f, 182.547455f, 391.557739f, 669.785034f, -454.8657f, 147.022339f, -621.9037f, -144.70343f, 493.683228f, 129.26593f, 670.300232f, 176.285034f);
            TestUtils.AreEqual(a1 - b1, r1);

            float4x4 a2 = float4x4(108.694763f, -395.838684f, -211.500916f, -209.269287f, -203.970947f, 96.7184448f, -461.183228f, -91.9543457f, -365.3161f, 479.565735f, 5.65863037f, -433.2864f, 379.748f, -116.968689f, 189.212891f, -281.679871f);
            float4x4 b2 = float4x4(-194.21228f, -170.827209f, -505.3638f, -70.7685242f, -381.0177f, -190.360718f, -409.328278f, -253.3092f, -85.4267f, -104.836548f, 281.147217f, -56.9968872f, -200.0336f, -57.1217957f, -133.492584f, 38.17151f);
            float4x4 r2 = float4x4(302.907043f, -225.011475f, 293.862885f, -138.500763f, 177.046753f, 287.079163f, -51.85495f, 161.354858f, -279.8894f, 584.4023f, -275.4886f, -376.28952f, 579.7816f, -59.8468933f, 322.705475f, -319.851379f);
            TestUtils.AreEqual(a2 - b2, r2);

            float4x4 a3 = float4x4(-75.6608f, -78.3935852f, -41.95581f, 456.183838f, -91.29013f, -121.579742f, -137.688324f, 64.57007f, 213.981384f, -76.675354f, -173.641785f, -261.2276f, -272.9259f, -38.5751953f, 123.604919f, 252.018616f);
            float4x4 b3 = float4x4(-43.5823975f, 147.975525f, 61.295166f, -250.06131f, -107.759827f, -281.8559f, -350.955872f, 1.03851318f, -59.41629f, 37.65088f, 25.5526123f, 339.547546f, 173.1582f, 500.532654f, 359.852539f, 441.521667f);
            float4x4 r3 = float4x4(-32.0784f, -226.36911f, -103.250977f, 706.2451f, 16.469696f, 160.276154f, 213.267548f, 63.5315552f, 273.397675f, -114.326233f, -199.1944f, -600.775146f, -446.0841f, -539.107849f, -236.24762f, -189.503052f);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_sub_wide_scalar()
        {
            float4x4 a0 = float4x4(102.569641f, -199.248688f, 218.154358f, 72.79639f, -139.426361f, 13.45929f, -31.2592163f, -273.2179f, -375.997253f, 484.570679f, 118.86438f, -126.182953f, -323.067322f, 128.219543f, -59.64612f, -125.91571f);
            float b0 = (-504.2776f);
            float4x4 r0 = float4x4(606.8472f, 305.0289f, 722.431946f, 577.074f, 364.851227f, 517.7369f, 473.018372f, 231.0597f, 128.280334f, 988.848267f, 623.141968f, 378.094635f, 181.210266f, 632.497131f, 444.63147f, 378.361877f);
            TestUtils.AreEqual(a0 - b0, r0);

            float4x4 a1 = float4x4(-39.709137f, 29.6282349f, 164.511963f, -245.126526f, -293.853027f, -168.449432f, -283.301147f, -492.369232f, 470.4295f, -384.2162f, 407.132629f, 312.913452f, 509.8f, 150.796814f, -329.48877f, 253.458374f);
            float b1 = (-388.437134f);
            float4x4 r1 = float4x4(348.728f, 418.065369f, 552.9491f, 143.310608f, 94.58411f, 219.9877f, 105.135986f, -103.9321f, 858.866638f, 4.22094727f, 795.569763f, 701.3506f, 898.2371f, 539.233948f, 58.9483643f, 641.8955f);
            TestUtils.AreEqual(a1 - b1, r1);

            float4x4 a2 = float4x4(310.496033f, -224.979126f, -336.760071f, 132.737488f, 332.288879f, -343.48233f, -329.0356f, 464.4472f, -451.642578f, 475.5431f, -65.27713f, -327.276184f, -322.615326f, 365.869751f, -289.1949f, 38.31122f);
            float b2 = (370.29657f);
            float4x4 r2 = float4x4(-59.8005371f, -595.2757f, -707.056641f, -237.559082f, -38.00769f, -713.778931f, -699.332153f, 94.1506348f, -821.939148f, 105.246521f, -435.5737f, -697.572754f, -692.911865f, -4.426819f, -659.491455f, -331.985352f);
            TestUtils.AreEqual(a2 - b2, r2);

            float4x4 a3 = float4x4(-500.130066f, -440.6181f, -339.167267f, -164.3038f, 301.575439f, 481.200745f, -10.5444641f, 53.16559f, -97.8558655f, -114.324493f, 73.6081543f, -74.13135f, -373.797241f, -178.226135f, -63.64688f, 132.3587f);
            float b3 = (-330.072754f);
            float4x4 r3 = float4x4(-170.057312f, -110.545349f, -9.094513f, 165.768951f, 631.6482f, 811.2735f, 319.5283f, 383.238342f, 232.216888f, 215.74826f, 403.6809f, 255.9414f, -43.7244873f, 151.846619f, 266.425873f, 462.431458f);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_sub_scalar_wide()
        {
            float a0 = (385.512268f);
            float4x4 b0 = float4x4(78.82605f, -43.92514f, -401.835358f, -336.146667f, 25.8710938f, 188.92981f, 132.735535f, -391.6434f, -131.123383f, 43.8323364f, -278.0896f, -440.455048f, -375.452454f, 190.743652f, 364.129639f, 349.778564f);
            float4x4 r0 = float4x4(306.686218f, 429.4374f, 787.347656f, 721.658936f, 359.641174f, 196.582458f, 252.776733f, 777.15564f, 516.6356f, 341.679932f, 663.601868f, 825.9673f, 760.9647f, 194.768616f, 21.38263f, 35.7337036f);
            TestUtils.AreEqual(a0 - b0, r0);

            float a1 = (492.411f);
            float4x4 b1 = float4x4(122.080627f, -191.474121f, 114.199036f, 79.3216553f, 105.470459f, -447.612244f, -490.964935f, 245.041565f, 256.2849f, -149.756348f, -447.192841f, -468.422f, -312.239227f, 481.437073f, -27.6018677f, 63.1561279f);
            float4x4 r1 = float4x4(370.330383f, 683.885132f, 378.211975f, 413.089355f, 386.940552f, 940.023254f, 983.376f, 247.369446f, 236.1261f, 642.167358f, 939.6039f, 960.833f, 804.650269f, 10.973938f, 520.0129f, 429.254883f);
            TestUtils.AreEqual(a1 - b1, r1);

            float a2 = (-451.783752f);
            float4x4 b2 = float4x4(364.788269f, -400.735321f, 125.037537f, -221.621948f, 252.242188f, 100.1181f, -229.246552f, -27.64032f, 454.539917f, 0.9707031f, -34.3462219f, -144.898071f, 462.202271f, 29.3624878f, -179.430939f, -443.148956f);
            float4x4 r2 = float4x4(-816.572f, -51.04843f, -576.8213f, -230.1618f, -704.02594f, -551.901855f, -222.5372f, -424.143433f, -906.323669f, -452.754456f, -417.437531f, -306.885681f, -913.986f, -481.14624f, -272.3528f, -8.634796f);
            TestUtils.AreEqual(a2 - b2, r2);

            float a3 = (-175.3952f);
            float4x4 b3 = float4x4(88.03955f, 485.364f, -109.425415f, -205.809387f, 485.3556f, -108.3129f, -422.870422f, -69.18826f, 281.586243f, -173.313873f, 67.9284058f, -435.221375f, -330.884155f, 74.3952f, 261.512268f, 8.388855f);
            float4x4 r3 = float4x4(-263.434753f, -660.7592f, -65.96979f, 30.4141846f, -660.7508f, -67.0823059f, 247.47522f, -106.20694f, -456.981445f, -2.08132935f, -243.323608f, 259.826172f, 155.488953f, -249.7904f, -436.907471f, -183.784058f);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_mul_wide_wide()
        {
            float4x4 a0 = float4x4(48.7297974f, 263.5946f, -378.487183f, 494.618347f, -185.095612f, 423.893433f, 19.8618164f, -439.218475f, 200.14624f, -178.356964f, -285.078064f, 56.74951f, 42.60443f, 472.961182f, -264.8566f, -278.0382f);
            float4x4 b0 = float4x4(351.026917f, 422.9179f, -490.6174f, 81.40454f, -357.226563f, 378.994568f, 318.321167f, 208.17157f, 345.885681f, -149.02887f, 293.0559f, 423.94812f, 53.42926f, -257.1869f, 87.37598f, 84.21008f);
            float4x4 r0 = float4x4(17105.47f, 111478.875f, 185692.391f, 40264.18f, 66121.07f, 160653.313f, 6322.43652f, -91432.8f, 69227.72f, 26580.3359f, -83543.81f, 24058.85f, 2276.32324f, -121639.414f, -23142.1035f, -23413.6211f);
            TestUtils.AreEqual(a0 * b0, r0);

            float4x4 a1 = float4x4(88.71771f, 171.394775f, 366.3731f, -253.821564f, -217.548523f, 431.067322f, -159.4126f, -162.980865f, -190.602509f, 300.649963f, -264.473053f, -260.2057f, -217.722626f, -131.686554f, -451.578583f, -165.738892f);
            float4x4 b1 = float4x4(-59.68576f, -144.9017f, 436.8335f, -444.172668f, 292.1997f, -29.1942139f, 80.04816f, 396.248f, -81.42062f, 423.228516f, -331.0962f, 267.6739f, 351.646423f, 80.08356f, 239.805237f, 239.528442f);
            float4x4 r1 = float4x4(-5295.184f, -24835.3945f, 160044.047f, 112740.6f, -63567.6133f, -12584.6719f, -12760.6846f, -64580.84f, 15518.9756f, 127243.641f, 87566.02f, -69650.2656f, -76561.38f, -10545.9277f, -108290.906f, -39699.18f);
            TestUtils.AreEqual(a1 * b1, r1);

            float4x4 a2 = float4x4(432.811646f, -221.723145f, -365.0736f, 353.7984f, 87.7072754f, -443.480347f, 373.9886f, 71.36072f, -295.5899f, 445.415649f, 298.726f, -163.316864f, -311.480072f, -439.179077f, 56.52002f, -504.5941f);
            float4x4 b2 = float4x4(-172.316681f, -432.452454f, 217.683228f, 275.312744f, -246.184265f, -65.27777f, -426.056274f, 474.556335f, -435.2868f, 328.564026f, -189.2667f, -92.1861f, 415.7209f, -497.273315f, 178.094849f, 54.64624f);
            float4x4 r2 = float4x4(-74580.6641f, 95884.72f, -79470.4f, 97405.21f, -21592.15f, 28949.4082f, -159340.188f, 33864.68f, 128666.383f, 146347.563f, -56538.8828f, 15055.5439f, -129488.773f, 218392.031f, 10065.9248f, -27574.17f);
            TestUtils.AreEqual(a2 * b2, r2);

            float4x4 a3 = float4x4(-54.06143f, 49.99414f, -210.228729f, 249.3216f, 76.7809448f, -176.47879f, -399.615845f, 405.685242f, -231.714264f, -136.326538f, 306.3896f, 452.802429f, 503.000183f, 391.027649f, 144.8623f, -293.207275f);
            float4x4 b3 = float4x4(-320.461121f, -499.095917f, -242.528412f, 103.714294f, -486.6628f, 493.711243f, 317.072083f, -303.666351f, -94.24286f, 495.708252f, 17.6970825f, 110.078369f, 382.462952f, -268.7945f, 339.071716f, 421.612427f);
            float4x4 r3 = float4x4(17324.5879f, -24951.8711f, 50986.44f, 25858.2129f, -37366.43f, -87129.56f, -126707.031f, -123192.961f, 21837.4141f, -67578.19f, 5422.20166f, 49843.7539f, 192378.938f, -105106.078f, 49118.71f, -123619.828f);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_mul_wide_scalar()
        {
            float4x4 a0 = float4x4(-387.480865f, -48.62552f, -100.415588f, -161.453522f, -428.578979f, -198.319f, 413.477356f, -216.104736f, -65.20349f, 18.9765015f, 89.78735f, -356.197571f, 13.6069336f, 394.3037f, -428.809479f, -362.6972f);
            float b0 = (367.408752f);
            float4x4 r0 = float4x4(-142363.859f, -17865.4414f, -36893.5664f, -59319.4375f, -157463.672f, -72864.13f, 151915.2f, -79398.77f, -23956.334f, 6972.133f, 32988.66f, -130870.1f, 4999.30664f, 144870.641f, -157548.359f, -133258.125f);
            TestUtils.AreEqual(a0 * b0, r0);

            float4x4 a1 = float4x4(92.84253f, -456.005219f, 283.081482f, -209.552551f, -398.407166f, -8.434082f, 176.073975f, -365.27417f, 236.014709f, 423.7818f, 485.64624f, -52.75711f, -217.148438f, 268.026855f, -362.128937f, -404.337952f);
            float b1 = (344.986023f);
            float4x4 r1 = float4x4(32029.375f, -157315.422f, 97659.16f, -72292.7f, -137444.9f, -2909.64038f, 60743.06f, -126014.484f, 81421.77f, 146198.8f, 167541.172f, -18200.4648f, -74913.18f, 92465.5156f, -124929.422f, -139490.938f);
            TestUtils.AreEqual(a1 * b1, r1);

            float4x4 a2 = float4x4(-211.233734f, 96.29022f, 338.633362f, 437.533264f, -282.0213f, -290.4144f, 440.138184f, 489.330444f, -184.513489f, 203.295349f, 311.9261f, -178.088043f, 343.528076f, -212.521362f, -61.2655945f, -78.9118652f);
            float b2 = (-70.45105f);
            float4x4 r2 = float4x4(14881.6387f, -6783.747f, -23857.0762f, -30824.6777f, 19868.6973f, 20460f, -31008.1973f, -34473.8438f, 12999.1689f, -14322.3711f, -21975.52f, 12546.4893f, -24201.9141f, 14972.3535f, 4316.22559f, 5559.424f);
            TestUtils.AreEqual(a2 * b2, r2);

            float4x4 a3 = float4x4(17.4915771f, -328.8244f, 414.583374f, 334.071716f, 253.815918f, 471.808533f, 235.510437f, -308.179321f, -152.593658f, -110.1008f, 439.831116f, 348.6524f, -360.055054f, 262.949646f, -60.08371f, -463.859619f);
            float b3 = (155.284241f);
            float4x4 r3 = float4x4(2716.16626f, -51061.2461f, 64378.2656f, 51876.0742f, 39413.6133f, 73264.43f, 36571.06f, -47855.39f, -23695.39f, -17096.92f, 68298.84f, 54140.2227f, -55910.875f, 40831.9375f, -9330.054f, -72030.0859f);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_mul_scalar_wide()
        {
            float a0 = (468.915955f);
            float4x4 b0 = float4x4(123.866638f, 490.9615f, -247.1626f, -176.9495f, 382.263855f, -398.549469f, 120.569336f, -263.275879f, 74.37671f, -309.856f, 404.927979f, -105.62616f, 243.92627f, -291.964081f, -92.4649353f, -144.353f);
            float4x4 r0 = float4x4(58083.043f, 230219.672f, -115898.484f, -82974.44f, 179249.625f, -186886.2f, 56536.8867f, -123454.258f, 34876.4258f, -145296.422f, 189877.188f, -49529.793f, 114380.922f, -136906.609f, -43358.2852f, -67689.42f);
            TestUtils.AreEqual(a0 * b0, r0);

            float a1 = (-7.56222534f);
            float4x4 b1 = float4x4(-257.847656f, -215.880646f, -480.0216f, -91.38034f, -9.730133f, 47.95282f, 6.174988f, 201.409363f, 502.8886f, 504.705566f, 286.208618f, -265.3672f, -24.2191772f, 107.506653f, 133.728577f, 410.170044f);
            float4x4 r1 = float4x4(1949.9021f, 1632.53809f, 3630.03149f, 691.038757f, 73.58146f, -362.630035f, -46.6966476f, -1523.103f, -3802.957f, -3816.69727f, -2164.374f, 2006.76648f, 183.150879f, -812.989563f, -1011.28564f, -3101.79834f);
            TestUtils.AreEqual(a1 * b1, r1);

            float a2 = (-365.492767f);
            float4x4 b2 = float4x4(-147.518616f, 34.2779541f, -75.76126f, -127.265808f, 452.852539f, -420.228241f, -276.3678f, -106.62793f, -258.060059f, -243.5987f, -179.388092f, -468.960266f, 126.897705f, -297.456177f, -323.623169f, -202.767853f);
            float4x4 r2 = float4x4(53916.99f, -12528.3447f, 27690.1934f, 46514.73f, -165514.328f, 153590.375f, 101010.43f, 38971.74f, 94319.0859f, 89033.56f, 65565.05f, 171401.578f, -46380.1953f, 108718.078f, 118281.93f, 74110.19f);
            TestUtils.AreEqual(a2 * b2, r2);

            float a3 = (45.3328247f);
            float4x4 b3 = float4x4(-153.666046f, 286.483154f, -363.8152f, 48.2963257f, -378.403259f, -68.99133f, 258.6624f, 133.641113f, 391.3753f, -391.255f, 346.360718f, -509.9087f, -413.4041f, 94.63739f, -240.800568f, -3.796173f);
            float4x4 r3 = float4x4(-6966.11572f, 12987.0908f, -16492.77f, 2189.409f, -17154.0879f, -3127.572f, 11725.8975f, 6058.329f, 17742.1484f, -17736.6953f, 15701.51f, -23115.6016f, -18740.7754f, 4290.18f, -10916.17f, -172.091248f);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_div_wide_wide()
        {
            float4x4 a0 = float4x4(6.82073975f, -338.630859f, 497.60437f, -491.269928f, 173.454712f, -441.556519f, 321.0169f, -41.60199f, -40.212616f, -169.795868f, -179.339935f, -433.401184f, -425.297119f, 335.54364f, 455.9829f, -438.431244f);
            float4x4 b0 = float4x4(-352.736023f, 302.209717f, -489.095154f, -380.8916f, 289.646484f, -216.575256f, -289.151f, 198.978516f, -292.720581f, 9.058472f, -29.8904419f, 257.638977f, -340.1684f, 33.71222f, 281.611023f, -384.688171f);
            float4x4 r0 = float4x4(-0.0193366688f, -1.12051606f, -1.01739788f, 1.28978932f, 0.5988497f, 2.03881335f, -1.110205f, -0.20907779f, 0.137375429f, -18.7444286f, 5.999909f, -1.68220353f, 1.25025463f, 9.953176f, 1.61919415f, 1.13970554f);
            TestUtils.AreEqual(a0 / b0, r0);

            float4x4 a1 = float4x4(-475.071625f, 398.719849f, 372.927673f, 31.9406128f, 472.518372f, -31.91278f, 381.816772f, 72.1203f, 214.974182f, 423.207275f, 165.060364f, -62.5003357f, -431.334839f, 215.506836f, -312.638855f, -324.874481f);
            float4x4 b1 = float4x4(457.441284f, 228.607361f, -300.276f, -168.690582f, -59.6442871f, 320.390625f, 0.8565674f, -483.937256f, 62.5262451f, -224.534058f, -414.907623f, -475.288849f, -84.26984f, 325.772766f, -12.9821472f, 403.8437f);
            float4x4 r1 = float4x4(-1.0385412f, 1.74412513f, -1.24194968f, -0.189344376f, -7.92227364f, -0.09960585f, 445.752167f, -0.149028212f, 3.43814325f, -1.8848244f, -0.397824377f, 0.1314997f, 5.11849642f, 0.661525f, 24.0822144f, -0.804456f);
            TestUtils.AreEqual(a1 / b1, r1);

            float4x4 a2 = float4x4(216.077759f, -253.5036f, -175.87088f, 338.050781f, 187.3388f, 48.5401f, -509.977661f, 387.8222f, 99.7113f, 330.738037f, 370.4037f, -37.7485352f, 7.94158936f, 147.9422f, -3.78286743f, -368.051758f);
            float4x4 b2 = float4x4(455.131653f, 375.575623f, 241.790649f, -251.936615f, 510.8947f, 392.304382f, -241.79184f, 85.84631f, 307.4809f, -118.543335f, 298.102844f, 451.836f, 362.008728f, -54.80246f, 218.167847f, -26.4995117f);
            float4x4 r2 = float4x4(0.4747588f, -0.674973547f, -0.7273684f, -1.34180892f, 0.3666877f, 0.123730712f, 2.10916f, 4.517634f, 0.324284554f, -2.790018f, 1.24253654f, -0.08354477f, 0.021937564f, -2.699554f, -0.0173392519f, 13.8890018f);
            TestUtils.AreEqual(a2 / b2, r2);

            float4x4 a3 = float4x4(-246.7698f, -407.687073f, -257.639832f, 203.9336f, 236.4754f, 100.1272f, 48.5523071f, -477.311218f, 39.90802f, -285.938477f, 168.279846f, -478.56f, -19.119812f, -144.365936f, -418.151581f, 263.846252f);
            float4x4 b3 = float4x4(76.24353f, 438.685181f, 208.544678f, 485.1836f, 163.143921f, 166.165649f, 57.1953125f, 322.457031f, -382.339447f, -108.119751f, 305.668823f, 429.9749f, -193.3396f, -25.8795776f, -119.146729f, 481.170959f);
            float4x4 r3 = float4x4(-3.2366f, -0.9293386f, -1.235418f, 0.420322537f, 1.44948947f, 0.6025746f, 0.848886132f, -1.480232f, -0.104378507f, 2.64464617f, 0.550529957f, -1.11299515f, 0.0988923758f, 5.578373f, 3.50955153f, 0.548342f);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_div_wide_scalar()
        {
            float4x4 a0 = float4x4(-179.145264f, 46.96112f, 127.572754f, 391.679626f, 461.327637f, 150.55542f, 18.4229126f, 169.158569f, 37.5003052f, 121.809082f, -22.5421448f, 398.16748f, -331.000366f, -498.451965f, 502.30603f, -329.666962f);
            float b0 = (-93.36542f);
            float4x4 r0 = float4x4(1.918754f, -0.502981961f, -1.36638129f, -4.195125f, -4.94109774f, -1.61253941f, -0.197320521f, -1.81179047f, -0.4016509f, -1.30464888f, 0.241439983f, -4.264614f, 3.5452137f, 5.33872175f, -5.380001f, 3.53093219f);
            TestUtils.AreEqual(a0 / b0, r0);

            float4x4 a1 = float4x4(-191.8522f, -369.294861f, -414.91745f, 94.42157f, -20.6722717f, 102.390625f, -167.4013f, -121.169037f, -99.98184f, 392.385437f, 352.320923f, -5.702301f, -319.4804f, -370.4504f, -323.005249f, 217.078308f);
            float b1 = (-35.94284f);
            float4x4 r1 = float4x4(5.33770275f, 10.2745037f, 11.5438137f, -2.62699246f, 0.575143f, -2.8487072f, 4.657431f, 3.371159f, 2.78169012f, -10.9169292f, -9.802256f, 0.158649147f, 8.888569f, 10.306654f, 8.986637f, -6.039542f);
            TestUtils.AreEqual(a1 / b1, r1);

            float4x4 a2 = float4x4(436.197083f, 441.9048f, -196.723663f, 486.582031f, 152.848267f, 412.772461f, -165.36908f, 152.405212f, -508.723724f, -323.6767f, 236.727356f, 202.579529f, 339.5708f, -456.229828f, -390.6125f, -480.111145f);
            float b2 = (165.354614f);
            float4x4 r2 = float4x4(2.63794923f, 2.67246723f, -1.18970776f, 2.94265771f, 0.9243665f, 2.49628639f, -1.0000875f, 0.921687067f, -3.076562f, -1.95747f, 1.43163443f, 1.22512174f, 2.05359125f, -2.75909948f, -2.36227155f, -2.9035244f);
            TestUtils.AreEqual(a2 / b2, r2);

            float4x4 a3 = float4x4(219.479126f, 457.550171f, 497.128418f, 238.433167f, 439.306824f, 456.5705f, -217.02594f, 0.8486328f, 49.30945f, 270.169983f, 178.10199f, -337.1391f, -155.019257f, -19.74054f, -211.5369f, -330.9108f);
            float b3 = (19.5891724f);
            float4x4 r3 = float4x4(11.2041044f, 23.3573f, 25.3777142f, 12.1716814f, 22.4260025f, 23.30729f, -11.0788727f, 0.0433215238f, 2.51717877f, 13.7918015f, 9.091859f, -17.2104816f, -7.91351748f, -1.007727f, -10.7986641f, -16.8925362f);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_div_scalar_wide()
        {
            float a0 = (451.844666f);
            float4x4 b0 = float4x4(-95.0651855f, 207.048767f, 502.384033f, 62.0412f, -110.84549f, -332.612732f, 224.279358f, -492.734528f, 435.0329f, 503.8188f, 291.349426f, 88.02417f, 328.702759f, 50.01013f, -509.816162f, 158.94751f);
            float4x4 r0 = float4x4(-4.75299835f, 2.18231034f, 0.899400949f, 7.28297758f, -4.076347f, -1.3584708f, 2.014651f, -0.9170144f, 1.03864479f, 0.8968397f, 1.55086851f, 5.13318872f, 1.37463f, 9.035063f, -0.8862894f, 2.84272885f);
            TestUtils.AreEqual(a0 / b0, r0);

            float a1 = (68.4343262f);
            float4x4 b1 = float4x4(-237.568573f, 32.9957275f, 169.610413f, -389.980072f, -383.048676f, 42.4129028f, 3.11767578f, -432.5184f, 253.8139f, -448.56073f, 303.820679f, 385.4851f, -168.352173f, -29.5488586f, -52.12848f, 325.4944f);
            float4x4 r1 = float4x4(-0.288061351f, 2.074036f, 0.403479517f, -0.1754816f, -0.178657f, 1.61352611f, 21.95043f, -0.158222929f, 0.269624025f, -0.152564242f, 0.225245789f, 0.177527815f, -0.406495064f, -2.31597185f, -1.31280112f, 0.210247338f);
            TestUtils.AreEqual(a1 / b1, r1);

            float a2 = (181.440369f);
            float4x4 b2 = float4x4(-214.250153f, -496.525543f, -270.410767f, 480.0288f, 459.5122f, 68.31439f, -396.944275f, -417.722046f, 318.85907f, 343.116882f, -459.427368f, -414.6583f, 286.604126f, 429.914124f, 46.71936f, 379.613953f);
            float4x4 r2 = float4x4(-0.846862257f, -0.36542f, -0.6709806f, 0.3779781f, 0.3948543f, 2.655961f, -0.4570928f, -0.4343567f, 0.56903f, 0.5288005f, -0.3949272f, -0.437565982f, 0.633069634f, 0.422038645f, 3.88362265f, 0.477960229f);
            TestUtils.AreEqual(a2 / b2, r2);

            float a3 = (66.88623f);
            float4x4 b3 = float4x4(-347.095551f, 255.564209f, -472.5758f, 329.824768f, -224.01651f, -347.364136f, -12.7336731f, -17.4403687f, 147.340576f, -396.052f, 432.458679f, -366.2196f, 91.38507f, 21.3676758f, -168.522125f, 274.529846f);
            float4x4 r3 = float4x4(-0.192702651f, 0.261719853f, -0.141535446f, 0.202793226f, -0.298577249f, -0.192553639f, -5.252705f, -3.83513856f, 0.453956634f, -0.168882445f, 0.154665023f, -0.182639673f, 0.731916368f, 3.130253f, -0.3968988f, 0.2436392f);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_mod_wide_wide()
        {
            float4x4 a0 = float4x4(157.5586f, 504.938f, 73.00708f, -387.6087f, 278.5445f, 282.228149f, 57.0862427f, -63.974762f, -345.268982f, -380.7162f, 470.2804f, -480.307465f, 65.2514648f, 503.1162f, 387.605835f, -281.181274f);
            float4x4 b0 = float4x4(180.250183f, -41.4798279f, -308.673157f, -326.860046f, 411.588257f, 429.410583f, 471.1482f, 226.144348f, 423.907471f, -300.951752f, 67.24133f, -488.690979f, -440.438141f, 508.5224f, -108.2384f, 93.46802f);
            float4x4 r0 = float4x4(157.5586f, 7.18005371f, 73.00708f, -60.7486572f, 278.5445f, 282.228149f, 57.0862427f, -63.974762f, -345.268982f, -79.7644348f, 66.8324f, -480.307465f, 65.2514648f, 503.1162f, 62.890625f, -0.7772217f);
            TestUtils.AreEqual(a0 % b0, r0);

            float4x4 a1 = float4x4(89.57654f, -216.285217f, 95.61566f, 327.346619f, -362.112946f, 124.853882f, 461.3974f, 352.7256f, -454.7909f, -366.852783f, -175.171173f, 504.993347f, 148.557617f, 405.268738f, -299.789368f, -202.465912f);
            float4x4 b1 = float4x4(-20.98877f, 301.875427f, 142.5885f, 439.710449f, 61.1275635f, -37.5414734f, -345.72113f, -253.643555f, -271.911163f, -2.026184f, 320.0362f, -421.68277f, 481.628967f, 1.44519043f, -384.131134f, -125.2171f);
            float4x4 r1 = float4x4(5.62146f, -216.285217f, 95.61566f, 327.346619f, -56.47513f, 12.2294617f, 115.67627f, 99.08203f, -182.87973f, -0.113464355f, -175.171173f, 83.31058f, 148.557617f, 0.6154175f, -299.789368f, -77.24881f);
            TestUtils.AreEqual(a1 % b1, r1);

            float4x4 a2 = float4x4(180.769531f, -172.165924f, 175.433411f, -381.471283f, -415.4391f, -450.8388f, 454.387451f, -438.088379f, -281.1637f, 451.3133f, -253.38562f, -243.360809f, -13.9821472f, -358.68222f, 249.319763f, 227.499817f);
            float4x4 b2 = float4x4(-323.2398f, -433.925018f, 146.149841f, 24.1425171f, -308.426636f, -102.847168f, 69.23401f, -101.027405f, 244.759766f, 147.517029f, 232.84491f, 281.540344f, -306.602448f, 125.986694f, -186.0986f, -489.9818f);
            float4x4 r2 = float4x4(180.769531f, -172.165924f, 29.28357f, -19.3335266f, -107.012451f, -39.4501343f, 38.9834f, -33.97876f, -36.40393f, 8.762207f, -20.54071f, -243.360809f, -13.9821472f, -106.708832f, 63.22116f, 227.499817f);
            TestUtils.AreEqual(a2 % b2, r2);

            float4x4 a3 = float4x4(-248.406525f, 293.689026f, 338.444824f, 82.9230347f, -402.43988f, -98.5871f, 258.875f, -364.070251f, 407.717346f, -229.391113f, -323.444458f, -383.831482f, 432.120972f, 92.05713f, -7.16796875f, 286.822754f);
            float4x4 b3 = float4x4(-261.929016f, 272.6372f, 274.650574f, -88.9407043f, 121.0047f, -378.744568f, 95.8405151f, -432.6764f, -5.70385742f, -32.5491638f, 162.01709f, 459.924622f, 58.2937622f, -29.9641418f, 4.542053f, 282.6595f);
            float4x4 r3 = float4x4(-248.406525f, 21.0518188f, 63.79425f, 82.9230347f, -39.42578f, -98.5871f, 67.19397f, -364.070251f, 2.74346924f, -1.54696655f, -161.427368f, -383.831482f, 24.0646362f, 2.16470337f, -2.62591553f, 4.163269f);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_mod_wide_scalar()
        {
            float4x4 a0 = float4x4(42.07245f, 313.0503f, 111.52063f, 131.212036f, -460.440857f, -436.485046f, -221.73172f, -316.3909f, 24.1831055f, -238.9426f, 335.600952f, -240.832489f, -12.3947144f, -152.489655f, -387.4286f, -240.0715f);
            float b0 = (260.272583f);
            float4x4 r0 = float4x4(42.07245f, 52.77771f, 111.52063f, 131.212036f, -200.168274f, -176.212463f, -221.73172f, -56.1183167f, 24.1831055f, -238.9426f, 75.32837f, -240.832489f, -12.3947144f, -152.489655f, -127.156006f, -240.0715f);
            TestUtils.AreEqual(a0 % b0, r0);

            float4x4 a1 = float4x4(-51.5551453f, 15.7027588f, 179.9151f, 453.635f, -76.82529f, 213.75293f, 143.580566f, 490.95636f, 426.8548f, -495.03064f, -452.600067f, -235.307281f, -457.423737f, 320.532471f, 46.65277f, 268.335815f);
            float b1 = (179.872742f);
            float4x4 r1 = float4x4(-51.5551453f, 15.7027588f, 0.0423584f, 93.88953f, -76.82529f, 33.880188f, 143.580566f, 131.210876f, 67.109314f, -135.285156f, -92.85458f, -55.43454f, -97.67825f, 140.659729f, 46.65277f, 88.46307f);
            TestUtils.AreEqual(a1 % b1, r1);

            float4x4 a2 = float4x4(463.731384f, -293.5371f, -227.900635f, 349.627441f, 342.578735f, 285.631653f, -46.4919434f, 327.946045f, 358.8695f, 454.485046f, 131.267639f, 319.250549f, 506.849731f, -300.762451f, -373.89267f, -427.0885f);
            float b2 = (90.74432f);
            float4x4 r2 = float4x4(10.0097656f, -21.3041382f, -46.4119873f, 77.39447f, 70.3457642f, 13.3986816f, -46.4919434f, 55.7130737f, 86.6365356f, 0.763427734f, 40.5233154f, 47.01758f, 53.1281128f, -28.52948f, -10.9153748f, -64.1112061f);
            TestUtils.AreEqual(a2 % b2, r2);

            float4x4 a3 = float4x4(345.4536f, 393.026123f, 287.155579f, 100.437439f, -174.902161f, -412.702667f, 479.940063f, 152.255676f, -375.295654f, -453.4544f, -281.131653f, 430.916382f, -30.393158f, -47.4750671f, -223.051819f, 2.831726f);
            float b3 = (-1.83511353f);
            float4x4 r3 = float4x4(0.4522705f, 0.3118286f, 0.877868652f, 1.34130859f, -0.566375732f, -1.63723755f, 0.97543335f, 1.77636719f, -0.9324951f, -0.181365967f, -0.359283447f, 1.49981689f, -1.03134155f, -1.597229f, -1.00308228f, 0.996612549f);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_mod_scalar_wide()
        {
            float a0 = (-162.9458f);
            float4x4 b0 = float4x4(171.125732f, 159.207947f, 491.348083f, -136.5397f, 84.48755f, 414.3911f, -85.03061f, 161.989563f, -7.60800171f, -85.22388f, 160.841248f, -234.483124f, 114.877625f, -40.5487061f, -85.7437439f, -235.708923f);
            float4x4 r0 = float4x4(-162.9458f, -3.737854f, -162.9458f, -26.4060974f, -78.45825f, -162.9458f, -77.91519f, -0.9562378f, -3.177765f, -77.7219238f, -2.10455322f, -162.9458f, -48.0681763f, -0.750976563f, -77.20206f, -162.9458f);
            TestUtils.AreEqual(a0 % b0, r0);

            float a1 = (-135.851166f);
            float4x4 b1 = float4x4(391.487f, 240.695984f, -81.43179f, -398.1865f, -209.346069f, -431.59314f, 411.7469f, -119.326263f, -296.96582f, -319.028f, 194.759827f, -189.406708f, -292.210022f, -228.648621f, 306.944519f, 313.818237f);
            float4x4 r1 = float4x4(-135.851166f, -135.851166f, -54.4193726f, -135.851166f, -135.851166f, -135.851166f, -135.851166f, -16.5249023f, -135.851166f, -135.851166f, -135.851166f, -135.851166f, -135.851166f, -135.851166f, -135.851166f, -135.851166f);
            TestUtils.AreEqual(a1 % b1, r1);

            float a2 = (224.436829f);
            float4x4 b2 = float4x4(426.099548f, -14.8559875f, -477.121582f, 248.822388f, -186.535858f, -374.613647f, -202.297546f, -447.239716f, -356.850159f, -398.0221f, 105.208435f, 122.377991f, -249.76767f, 331.081238f, 136.209656f, -475.207855f);
            float4x4 r2 = float4x4(224.436829f, 1.59701538f, 224.436829f, 224.436829f, 37.90097f, 224.436829f, 22.1392822f, 224.436829f, 224.436829f, 224.436829f, 14.0199585f, 102.058838f, 224.436829f, 224.436829f, 88.22717f, 224.436829f);
            TestUtils.AreEqual(a2 % b2, r2);

            float a3 = (-392.589325f);
            float4x4 b3 = float4x4(312.964172f, -150.763733f, -126.438995f, -276.759338f, -131.528168f, 78.80109f, -432.3988f, 494.78656f, -130.546661f, 221.419128f, 232.209534f, -160.6037f, -227.39801f, -368.575256f, 365.896729f, -36.30136f);
            float4x4 r3 = float4x4(-79.62515f, -91.06186f, -13.2723389f, -115.829987f, -129.53299f, -77.38498f, -392.589325f, -392.589325f, -0.9493408f, -171.1702f, -160.379791f, -71.38193f, -165.191315f, -24.0140686f, -26.6925964f, -29.5757141f);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_plus()
        {
            float4x4 a0 = float4x4(150.599854f, -137.8551f, 439.0912f, 401.849243f, 401.823547f, -299.614624f, -364.624817f, 444.5669f, -135.177917f, 188.590271f, -458.637817f, -176.78833f, 67.19397f, -202.573944f, -83.5177f, 466.917053f);
            float4x4 r0 = float4x4(150.599854f, -137.8551f, 439.0912f, 401.849243f, 401.823547f, -299.614624f, -364.624817f, 444.5669f, -135.177917f, 188.590271f, -458.637817f, -176.78833f, 67.19397f, -202.573944f, -83.5177f, 466.917053f);
            TestUtils.AreEqual(+a0, r0);

            float4x4 a1 = float4x4(369.197021f, 288.732178f, 27.9801025f, -277.2133f, -419.9559f, -418.334534f, -85.52872f, 184.964111f, -113.681641f, -496.363739f, 473.138367f, -214.060791f, -316.094727f, -287.7664f, -259.0204f, 504.885f);
            float4x4 r1 = float4x4(369.197021f, 288.732178f, 27.9801025f, -277.2133f, -419.9559f, -418.334534f, -85.52872f, 184.964111f, -113.681641f, -496.363739f, 473.138367f, -214.060791f, -316.094727f, -287.7664f, -259.0204f, 504.885f);
            TestUtils.AreEqual(+a1, r1);

            float4x4 a2 = float4x4(195.073181f, 368.666138f, 88.02533f, -123.764893f, 378.997f, -224.181122f, -217.134491f, 204.336731f, 2.32061768f, 435.4549f, -137.489288f, 349.320679f, -488.533234f, 11.072937f, 111.8009f, 175.555786f);
            float4x4 r2 = float4x4(195.073181f, 368.666138f, 88.02533f, -123.764893f, 378.997f, -224.181122f, -217.134491f, 204.336731f, 2.32061768f, 435.4549f, -137.489288f, 349.320679f, -488.533234f, 11.072937f, 111.8009f, 175.555786f);
            TestUtils.AreEqual(+a2, r2);

            float4x4 a3 = float4x4(182.642517f, -320.562439f, -346.2193f, -84.18686f, -198.0087f, -231.520569f, 12.619873f, -295.114868f, 3.505188f, -315.2509f, -325.763245f, 146.627686f, -331.0832f, -35.64331f, 312.382568f, -169.67334f);
            float4x4 r3 = float4x4(182.642517f, -320.562439f, -346.2193f, -84.18686f, -198.0087f, -231.520569f, 12.619873f, -295.114868f, 3.505188f, -315.2509f, -325.763245f, 146.627686f, -331.0832f, -35.64331f, 312.382568f, -169.67334f);
            TestUtils.AreEqual(+a3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_neg()
        {
            float4x4 a0 = float4x4(-169.281158f, -377.0252f, 36.6141357f, -258.382446f, 469.914551f, 388.945984f, 350.969238f, 176.102539f, 494.421631f, 201.18689f, -60.8139343f, 313.8802f, 381.035767f, 327.1795f, 292.367554f, 462.13623f);
            float4x4 r0 = float4x4(169.281158f, 377.0252f, -36.6141357f, 258.382446f, -469.914551f, -388.945984f, -350.969238f, -176.102539f, -494.421631f, -201.18689f, 60.8139343f, -313.8802f, -381.035767f, -327.1795f, -292.367554f, -462.13623f);
            TestUtils.AreEqual(-a0, r0);

            float4x4 a1 = float4x4(448.669861f, 93.50537f, 385.7409f, -37.0343628f, -298.235046f, -14.9801636f, -116.370148f, 258.546448f, 369.4939f, 292.990967f, -349.357544f, 160.560852f, -429.3812f, 282.849731f, -12.6661682f, -273.521271f);
            float4x4 r1 = float4x4(-448.669861f, -93.50537f, -385.7409f, 37.0343628f, 298.235046f, 14.9801636f, 116.370148f, -258.546448f, -369.4939f, -292.990967f, 349.357544f, -160.560852f, 429.3812f, -282.849731f, 12.6661682f, 273.521271f);
            TestUtils.AreEqual(-a1, r1);

            float4x4 a2 = float4x4(-138.772888f, 94.23346f, 184.8446f, -136.302673f, 31.7103882f, -134.855469f, 404.9942f, -127.453461f, 164.948914f, 154.396973f, 24.71045f, -406.521851f, 164.153259f, -364.896118f, -7.724945f, 29.5784912f);
            float4x4 r2 = float4x4(138.772888f, -94.23346f, -184.8446f, 136.302673f, -31.7103882f, 134.855469f, -404.9942f, 127.453461f, -164.948914f, -154.396973f, -24.71045f, 406.521851f, -164.153259f, 364.896118f, 7.724945f, -29.5784912f);
            TestUtils.AreEqual(-a2, r2);

            float4x4 a3 = float4x4(13.9100342f, 296.8617f, 504.4043f, 379.753174f, 480.2602f, 149.954956f, -359.015747f, -4.92892456f, -411.579285f, -416.044983f, 188.326782f, -496.4583f, 411.8028f, 430.337158f, 463.852234f, 75.40149f);
            float4x4 r3 = float4x4(-13.9100342f, -296.8617f, -504.4043f, -379.753174f, -480.2602f, -149.954956f, 359.015747f, 4.92892456f, 411.579285f, 416.044983f, -188.326782f, 496.4583f, -411.8028f, -430.337158f, -463.852234f, -75.40149f);
            TestUtils.AreEqual(-a3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_prefix_inc()
        {
            float4x4 a0 = float4x4(86.58539f, 161.589783f, 443.929626f, -338.268433f, -34.5586548f, -368.567474f, 359.1416f, 145.026123f, 157.233154f, 25.3619385f, -484.200439f, 346.040466f, 381.775635f, 244.663025f, 49.9732056f, -105.417908f);
            float4x4 r0 = float4x4(87.58539f, 162.589783f, 444.929626f, -337.268433f, -33.5586548f, -367.567474f, 360.1416f, 146.026123f, 158.233154f, 26.3619385f, -483.200439f, 347.040466f, 382.775635f, 245.663025f, 50.9732056f, -104.417908f);
            TestUtils.AreEqual(++a0, r0);

            float4x4 a1 = float4x4(218.376526f, -153.756561f, 352.001953f, 75.30719f, -18.34317f, -484.351f, 49.86487f, -269.916f, -205.470337f, 375.4276f, -157.748962f, -218.1582f, -343.9989f, 506.713318f, 312.928345f, -29.0180664f);
            float4x4 r1 = float4x4(219.376526f, -152.756561f, 353.001953f, 76.30719f, -17.34317f, -483.351f, 50.86487f, -268.916f, -204.470337f, 376.4276f, -156.748962f, -217.1582f, -342.9989f, 507.713318f, 313.928345f, -28.0180664f);
            TestUtils.AreEqual(++a1, r1);

            float4x4 a2 = float4x4(-309.897827f, 73.2099f, -186.3169f, -126.7576f, 176.922119f, 418.15155f, -202.122131f, 227.427673f, 19.9057f, -282.922546f, 416.024841f, 220.69f, 178.45929f, 205.361755f, -300.572327f, 339.708679f);
            float4x4 r2 = float4x4(-308.897827f, 74.2099f, -185.3169f, -125.7576f, 177.922119f, 419.15155f, -201.122131f, 228.427673f, 20.9057f, -281.922546f, 417.024841f, 221.69f, 179.45929f, 206.361755f, -299.572327f, 340.708679f);
            TestUtils.AreEqual(++a2, r2);

            float4x4 a3 = float4x4(-395.627228f, -343.244843f, -478.004f, -500.721863f, 110.396545f, 133.940857f, -117.935211f, 443.647522f, -341.0883f, -231.995056f, 4.890564f, -148.8157f, -10.7679749f, 30.64862f, -285.128784f, -136.941437f);
            float4x4 r3 = float4x4(-394.627228f, -342.244843f, -477.004f, -499.721863f, 111.396545f, 134.940857f, -116.935211f, 444.647522f, -340.0883f, -230.995056f, 5.890564f, -147.8157f, -9.767975f, 31.64862f, -284.128784f, -135.941437f);
            TestUtils.AreEqual(++a3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_postfix_inc()
        {
            float4x4 a0 = float4x4(-281.7821f, 215.342224f, 120.820862f, -325.353668f, -179.722931f, 44.56366f, -375.17334f, 193.365723f, 329.5243f, -341.1537f, -130.474335f, 277.307373f, -15.2096863f, -362.9092f, 480.75708f, 20.4838257f);
            float4x4 r0 = float4x4(-281.7821f, 215.342224f, 120.820862f, -325.353668f, -179.722931f, 44.56366f, -375.17334f, 193.365723f, 329.5243f, -341.1537f, -130.474335f, 277.307373f, -15.2096863f, -362.9092f, 480.75708f, 20.4838257f);
            TestUtils.AreEqual(a0++, r0);

            float4x4 a1 = float4x4(-132.573273f, 63.9730225f, 423.3778f, 413.74353f, -39.5121155f, 121.25531f, -293.2835f, -121.773895f, 337.215637f, 64.4483643f, -319.071655f, 342.496338f, 357.928772f, 394.4254f, 71.8752441f, 176.151672f);
            float4x4 r1 = float4x4(-132.573273f, 63.9730225f, 423.3778f, 413.74353f, -39.5121155f, 121.25531f, -293.2835f, -121.773895f, 337.215637f, 64.4483643f, -319.071655f, 342.496338f, 357.928772f, 394.4254f, 71.8752441f, 176.151672f);
            TestUtils.AreEqual(a1++, r1);

            float4x4 a2 = float4x4(-239.430359f, 427.487f, 348.652466f, 285.957275f, -299.5846f, -279.679f, -158.7518f, 401.164368f, 457.9082f, 195.599243f, -95.2428f, 432.1338f, -217.213257f, -62.00345f, -194.959869f, 258.2185f);
            float4x4 r2 = float4x4(-239.430359f, 427.487f, 348.652466f, 285.957275f, -299.5846f, -279.679f, -158.7518f, 401.164368f, 457.9082f, 195.599243f, -95.2428f, 432.1338f, -217.213257f, -62.00345f, -194.959869f, 258.2185f);
            TestUtils.AreEqual(a2++, r2);

            float4x4 a3 = float4x4(334.05658f, 102.513855f, -158.257355f, -183.525635f, -245.100616f, -417.9131f, -97.89563f, 308.420227f, -4.938568f, 492.1153f, 455.898315f, 362.8694f, 483.595459f, -223.579071f, 309.6504f, -410.8443f);
            float4x4 r3 = float4x4(334.05658f, 102.513855f, -158.257355f, -183.525635f, -245.100616f, -417.9131f, -97.89563f, 308.420227f, -4.938568f, 492.1153f, 455.898315f, 362.8694f, 483.595459f, -223.579071f, 309.6504f, -410.8443f);
            TestUtils.AreEqual(a3++, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_prefix_dec()
        {
            float4x4 a0 = float4x4(340.001831f, 496.070862f, 288.384216f, 183.694641f, -353.6148f, 398.281921f, -240.591583f, 15.32019f, 276.588684f, 311.914368f, -305.8037f, -268.388153f, 349.170227f, 468.03656f, -93.05707f, 429.558044f);
            float4x4 r0 = float4x4(339.001831f, 495.070862f, 287.384216f, 182.694641f, -354.6148f, 397.281921f, -241.591583f, 14.32019f, 275.588684f, 310.914368f, -306.8037f, -269.388153f, 348.170227f, 467.03656f, -94.05707f, 428.558044f);
            TestUtils.AreEqual(--a0, r0);

            float4x4 a1 = float4x4(-164.938538f, -142.655212f, 96.54895f, -142.570221f, -2.399109f, 225.875671f, -388.630585f, -455.2949f, -248.5845f, 384.1317f, 80.48389f, 240.107849f, -385.305054f, 73.84015f, -497.545959f, -71.49823f);
            float4x4 r1 = float4x4(-165.938538f, -143.655212f, 95.54895f, -143.570221f, -3.399109f, 224.875671f, -389.630585f, -456.2949f, -249.5845f, 383.1317f, 79.48389f, 239.107849f, -386.305054f, 72.84015f, -498.545959f, -72.49823f);
            TestUtils.AreEqual(--a1, r1);

            float4x4 a2 = float4x4(-383.514832f, 270.4037f, -287.671753f, -447.269775f, -168.875916f, 42.3015137f, 279.244629f, -6.788391f, -61.1860352f, -68.86096f, 244.576233f, -118.339966f, -360.305359f, -241.1615f, 492.7033f, 176.498779f);
            float4x4 r2 = float4x4(-384.514832f, 269.4037f, -288.671753f, -448.269775f, -169.875916f, 41.3015137f, 278.244629f, -7.788391f, -62.1860352f, -69.86096f, 243.576233f, -119.339966f, -361.305359f, -242.1615f, 491.7033f, 175.498779f);
            TestUtils.AreEqual(--a2, r2);

            float4x4 a3 = float4x4(200.867f, -178.579773f, -291.259827f, -29.4279175f, -283.521179f, -241.80484f, 165.014771f, 126.9895f, 406.969666f, -497.849762f, 190.9245f, 287.212341f, 149.893738f, -273.9258f, -320.257751f, 315.1101f);
            float4x4 r3 = float4x4(199.867f, -179.579773f, -292.259827f, -30.4279175f, -284.521179f, -242.80484f, 164.014771f, 125.9895f, 405.969666f, -498.849762f, 189.9245f, 286.212341f, 148.893738f, -274.9258f, -321.257751f, 314.1101f);
            TestUtils.AreEqual(--a3, r3);
        }

        [TestCompiler]
        public static void float4x4_operator_postfix_dec()
        {
            float4x4 a0 = float4x4(-148.111755f, 252.8498f, -106.1579f, 132.648621f, -370.723755f, 343.311157f, -321.157837f, 450.6018f, 330.9572f, 425.6258f, 269.754517f, -164.309845f, 234.149658f, -320.725952f, -337.031372f, -310.267639f);
            float4x4 r0 = float4x4(-148.111755f, 252.8498f, -106.1579f, 132.648621f, -370.723755f, 343.311157f, -321.157837f, 450.6018f, 330.9572f, 425.6258f, 269.754517f, -164.309845f, 234.149658f, -320.725952f, -337.031372f, -310.267639f);
            TestUtils.AreEqual(a0--, r0);

            float4x4 a1 = float4x4(-298.127167f, -453.877f, -134.770233f, 416.1966f, 511.618652f, -239.314911f, -492.061157f, 475.658264f, 56.15918f, 24.9328f, -92.12152f, 247.940613f, -467.1975f, -173.623566f, 294.711548f, 47.24408f);
            float4x4 r1 = float4x4(-298.127167f, -453.877f, -134.770233f, 416.1966f, 511.618652f, -239.314911f, -492.061157f, 475.658264f, 56.15918f, 24.9328f, -92.12152f, 247.940613f, -467.1975f, -173.623566f, 294.711548f, 47.24408f);
            TestUtils.AreEqual(a1--, r1);

            float4x4 a2 = float4x4(-130.603f, 63.55182f, 41.2713623f, 228.408875f, 427.093628f, -13.930481f, 248.1687f, -184.782654f, -483.95575f, -260.6369f, 429.128052f, 132.314026f, -351.987427f, -4.266083f, 273.66217f, 156.307312f);
            float4x4 r2 = float4x4(-130.603f, 63.55182f, 41.2713623f, 228.408875f, 427.093628f, -13.930481f, 248.1687f, -184.782654f, -483.95575f, -260.6369f, 429.128052f, 132.314026f, -351.987427f, -4.266083f, 273.66217f, 156.307312f);
            TestUtils.AreEqual(a2--, r2);

            float4x4 a3 = float4x4(-112.744019f, 426.2166f, 25.0543213f, -52.30835f, -276.1173f, -19.8352966f, -126.096771f, 168.9903f, 85.1170654f, -193.621613f, 282.963745f, -309.3388f, 286.154724f, 87.24939f, 487.042969f, 300.446045f);
            float4x4 r3 = float4x4(-112.744019f, 426.2166f, 25.0543213f, -52.30835f, -276.1173f, -19.8352966f, -126.096771f, 168.9903f, 85.1170654f, -193.621613f, 282.963745f, -309.3388f, 286.154724f, 87.24939f, 487.042969f, 300.446045f);
            TestUtils.AreEqual(a3--, r3);
        }


    }
}
