//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using static Unity.Mathematics.math;
using Burst.Compiler.IL.Tests;

namespace Unity.Mathematics.Tests
{
    [TestFixture]
    public class TestBool3
    {
        [TestCompiler]
        public static void bool3_constructor()
        {
            bool3 a = new bool3(false, true, false);
            TestUtils.AreEqual(false, a.x);
            TestUtils.AreEqual(true, a.y);
            TestUtils.AreEqual(false, a.z);
        }

        [TestCompiler]
        public static void bool3_scalar_constructor()
        {
            bool3 a = new bool3(true);
            TestUtils.AreEqual(true, a.x);
            TestUtils.AreEqual(true, a.y);
            TestUtils.AreEqual(true, a.z);
        }

        [TestCompiler]
        public static void bool3_static_constructor()
        {
            bool3 a = bool3(false, true, false);
            TestUtils.AreEqual(false, a.x);
            TestUtils.AreEqual(true, a.y);
            TestUtils.AreEqual(false, a.z);
        }

        [TestCompiler]
        public static void bool3_static_scalar_constructor()
        {
            bool3 a = bool3(true);
            TestUtils.AreEqual(true, a.x);
            TestUtils.AreEqual(true, a.y);
            TestUtils.AreEqual(true, a.z);
        }

        [TestCompiler]
        public static void bool3_operator_equal_wide_wide()
        {
            bool3 a0 = bool3(true, false, true);
            bool3 b0 = bool3(true, false, false);
            bool3 r0 = bool3(true, true, false);
            TestUtils.AreEqual(r0, a0 == b0);

            bool3 a1 = bool3(false, false, true);
            bool3 b1 = bool3(false, true, false);
            bool3 r1 = bool3(true, false, false);
            TestUtils.AreEqual(r1, a1 == b1);

            bool3 a2 = bool3(false, false, true);
            bool3 b2 = bool3(false, true, false);
            bool3 r2 = bool3(true, false, false);
            TestUtils.AreEqual(r2, a2 == b2);

            bool3 a3 = bool3(false, true, false);
            bool3 b3 = bool3(false, false, false);
            bool3 r3 = bool3(true, false, true);
            TestUtils.AreEqual(r3, a3 == b3);
        }

        [TestCompiler]
        public static void bool3_operator_equal_wide_scalar()
        {
            bool3 a0 = bool3(false, true, false);
            bool b0 = (true);
            bool3 r0 = bool3(false, true, false);
            TestUtils.AreEqual(r0, a0 == b0);

            bool3 a1 = bool3(false, false, true);
            bool b1 = (false);
            bool3 r1 = bool3(true, true, false);
            TestUtils.AreEqual(r1, a1 == b1);

            bool3 a2 = bool3(false, false, true);
            bool b2 = (false);
            bool3 r2 = bool3(true, true, false);
            TestUtils.AreEqual(r2, a2 == b2);

            bool3 a3 = bool3(true, true, false);
            bool b3 = (false);
            bool3 r3 = bool3(false, false, true);
            TestUtils.AreEqual(r3, a3 == b3);
        }

        [TestCompiler]
        public static void bool3_operator_equal_scalar_wide()
        {
            bool a0 = (false);
            bool3 b0 = bool3(true, false, true);
            bool3 r0 = bool3(false, true, false);
            TestUtils.AreEqual(r0, a0 == b0);

            bool a1 = (false);
            bool3 b1 = bool3(false, true, false);
            bool3 r1 = bool3(true, false, true);
            TestUtils.AreEqual(r1, a1 == b1);

            bool a2 = (false);
            bool3 b2 = bool3(true, false, true);
            bool3 r2 = bool3(false, true, false);
            TestUtils.AreEqual(r2, a2 == b2);

            bool a3 = (true);
            bool3 b3 = bool3(false, true, false);
            bool3 r3 = bool3(false, true, false);
            TestUtils.AreEqual(r3, a3 == b3);
        }

        [TestCompiler]
        public static void bool3_operator_not_equal_wide_wide()
        {
            bool3 a0 = bool3(true, true, true);
            bool3 b0 = bool3(true, false, false);
            bool3 r0 = bool3(false, true, true);
            TestUtils.AreEqual(r0, a0 != b0);

            bool3 a1 = bool3(false, false, true);
            bool3 b1 = bool3(false, true, false);
            bool3 r1 = bool3(false, true, true);
            TestUtils.AreEqual(r1, a1 != b1);

            bool3 a2 = bool3(false, false, false);
            bool3 b2 = bool3(false, false, false);
            bool3 r2 = bool3(false, false, false);
            TestUtils.AreEqual(r2, a2 != b2);

            bool3 a3 = bool3(false, true, true);
            bool3 b3 = bool3(true, true, true);
            bool3 r3 = bool3(true, false, false);
            TestUtils.AreEqual(r3, a3 != b3);
        }

        [TestCompiler]
        public static void bool3_operator_not_equal_wide_scalar()
        {
            bool3 a0 = bool3(false, true, false);
            bool b0 = (false);
            bool3 r0 = bool3(false, true, false);
            TestUtils.AreEqual(r0, a0 != b0);

            bool3 a1 = bool3(true, false, false);
            bool b1 = (true);
            bool3 r1 = bool3(false, true, true);
            TestUtils.AreEqual(r1, a1 != b1);

            bool3 a2 = bool3(false, false, false);
            bool b2 = (false);
            bool3 r2 = bool3(false, false, false);
            TestUtils.AreEqual(r2, a2 != b2);

            bool3 a3 = bool3(false, true, false);
            bool b3 = (false);
            bool3 r3 = bool3(false, true, false);
            TestUtils.AreEqual(r3, a3 != b3);
        }

        [TestCompiler]
        public static void bool3_operator_not_equal_scalar_wide()
        {
            bool a0 = (true);
            bool3 b0 = bool3(false, false, true);
            bool3 r0 = bool3(true, true, false);
            TestUtils.AreEqual(r0, a0 != b0);

            bool a1 = (false);
            bool3 b1 = bool3(false, false, true);
            bool3 r1 = bool3(false, false, true);
            TestUtils.AreEqual(r1, a1 != b1);

            bool a2 = (true);
            bool3 b2 = bool3(true, false, false);
            bool3 r2 = bool3(false, true, true);
            TestUtils.AreEqual(r2, a2 != b2);

            bool a3 = (false);
            bool3 b3 = bool3(false, false, true);
            bool3 r3 = bool3(false, false, true);
            TestUtils.AreEqual(r3, a3 != b3);
        }

        [TestCompiler]
        public static void bool3_operator_bitwise_and_wide_wide()
        {
            bool3 a0 = bool3(false, false, true);
            bool3 b0 = bool3(false, false, true);
            bool3 r0 = bool3(false, false, true);
            TestUtils.AreEqual(r0, a0 & b0);

            bool3 a1 = bool3(true, false, false);
            bool3 b1 = bool3(false, true, true);
            bool3 r1 = bool3(false, false, false);
            TestUtils.AreEqual(r1, a1 & b1);

            bool3 a2 = bool3(true, true, true);
            bool3 b2 = bool3(false, false, true);
            bool3 r2 = bool3(false, false, true);
            TestUtils.AreEqual(r2, a2 & b2);

            bool3 a3 = bool3(false, true, true);
            bool3 b3 = bool3(true, false, false);
            bool3 r3 = bool3(false, false, false);
            TestUtils.AreEqual(r3, a3 & b3);
        }

        [TestCompiler]
        public static void bool3_operator_bitwise_and_wide_scalar()
        {
            bool3 a0 = bool3(true, false, false);
            bool b0 = (true);
            bool3 r0 = bool3(true, false, false);
            TestUtils.AreEqual(r0, a0 & b0);

            bool3 a1 = bool3(true, false, false);
            bool b1 = (true);
            bool3 r1 = bool3(true, false, false);
            TestUtils.AreEqual(r1, a1 & b1);

            bool3 a2 = bool3(false, false, true);
            bool b2 = (false);
            bool3 r2 = bool3(false, false, false);
            TestUtils.AreEqual(r2, a2 & b2);

            bool3 a3 = bool3(true, false, false);
            bool b3 = (true);
            bool3 r3 = bool3(true, false, false);
            TestUtils.AreEqual(r3, a3 & b3);
        }

        [TestCompiler]
        public static void bool3_operator_bitwise_and_scalar_wide()
        {
            bool a0 = (false);
            bool3 b0 = bool3(false, false, true);
            bool3 r0 = bool3(false, false, false);
            TestUtils.AreEqual(r0, a0 & b0);

            bool a1 = (true);
            bool3 b1 = bool3(true, false, true);
            bool3 r1 = bool3(true, false, true);
            TestUtils.AreEqual(r1, a1 & b1);

            bool a2 = (false);
            bool3 b2 = bool3(false, false, true);
            bool3 r2 = bool3(false, false, false);
            TestUtils.AreEqual(r2, a2 & b2);

            bool a3 = (false);
            bool3 b3 = bool3(false, false, true);
            bool3 r3 = bool3(false, false, false);
            TestUtils.AreEqual(r3, a3 & b3);
        }

        [TestCompiler]
        public static void bool3_operator_bitwise_or_wide_wide()
        {
            bool3 a0 = bool3(true, true, true);
            bool3 b0 = bool3(false, false, false);
            bool3 r0 = bool3(true, true, true);
            TestUtils.AreEqual(r0, a0 | b0);

            bool3 a1 = bool3(false, true, false);
            bool3 b1 = bool3(false, true, true);
            bool3 r1 = bool3(false, true, true);
            TestUtils.AreEqual(r1, a1 | b1);

            bool3 a2 = bool3(true, true, false);
            bool3 b2 = bool3(true, false, false);
            bool3 r2 = bool3(true, true, false);
            TestUtils.AreEqual(r2, a2 | b2);

            bool3 a3 = bool3(true, true, true);
            bool3 b3 = bool3(true, false, false);
            bool3 r3 = bool3(true, true, true);
            TestUtils.AreEqual(r3, a3 | b3);
        }

        [TestCompiler]
        public static void bool3_operator_bitwise_or_wide_scalar()
        {
            bool3 a0 = bool3(true, true, false);
            bool b0 = (true);
            bool3 r0 = bool3(true, true, true);
            TestUtils.AreEqual(r0, a0 | b0);

            bool3 a1 = bool3(true, true, true);
            bool b1 = (true);
            bool3 r1 = bool3(true, true, true);
            TestUtils.AreEqual(r1, a1 | b1);

            bool3 a2 = bool3(false, false, false);
            bool b2 = (true);
            bool3 r2 = bool3(true, true, true);
            TestUtils.AreEqual(r2, a2 | b2);

            bool3 a3 = bool3(true, false, true);
            bool b3 = (false);
            bool3 r3 = bool3(true, false, true);
            TestUtils.AreEqual(r3, a3 | b3);
        }

        [TestCompiler]
        public static void bool3_operator_bitwise_or_scalar_wide()
        {
            bool a0 = (true);
            bool3 b0 = bool3(true, true, false);
            bool3 r0 = bool3(true, true, true);
            TestUtils.AreEqual(r0, a0 | b0);

            bool a1 = (false);
            bool3 b1 = bool3(true, true, true);
            bool3 r1 = bool3(true, true, true);
            TestUtils.AreEqual(r1, a1 | b1);

            bool a2 = (false);
            bool3 b2 = bool3(false, true, true);
            bool3 r2 = bool3(false, true, true);
            TestUtils.AreEqual(r2, a2 | b2);

            bool a3 = (false);
            bool3 b3 = bool3(true, true, false);
            bool3 r3 = bool3(true, true, false);
            TestUtils.AreEqual(r3, a3 | b3);
        }

        [TestCompiler]
        public static void bool3_operator_bitwise_xor_wide_wide()
        {
            bool3 a0 = bool3(true, false, false);
            bool3 b0 = bool3(true, true, false);
            bool3 r0 = bool3(false, true, false);
            TestUtils.AreEqual(r0, a0 ^ b0);

            bool3 a1 = bool3(true, false, false);
            bool3 b1 = bool3(true, false, true);
            bool3 r1 = bool3(false, false, true);
            TestUtils.AreEqual(r1, a1 ^ b1);

            bool3 a2 = bool3(false, true, false);
            bool3 b2 = bool3(false, true, false);
            bool3 r2 = bool3(false, false, false);
            TestUtils.AreEqual(r2, a2 ^ b2);

            bool3 a3 = bool3(false, true, true);
            bool3 b3 = bool3(false, false, true);
            bool3 r3 = bool3(false, true, false);
            TestUtils.AreEqual(r3, a3 ^ b3);
        }

        [TestCompiler]
        public static void bool3_operator_bitwise_xor_wide_scalar()
        {
            bool3 a0 = bool3(false, false, true);
            bool b0 = (false);
            bool3 r0 = bool3(false, false, true);
            TestUtils.AreEqual(r0, a0 ^ b0);

            bool3 a1 = bool3(true, false, false);
            bool b1 = (false);
            bool3 r1 = bool3(true, false, false);
            TestUtils.AreEqual(r1, a1 ^ b1);

            bool3 a2 = bool3(false, false, false);
            bool b2 = (false);
            bool3 r2 = bool3(false, false, false);
            TestUtils.AreEqual(r2, a2 ^ b2);

            bool3 a3 = bool3(true, true, true);
            bool b3 = (false);
            bool3 r3 = bool3(true, true, true);
            TestUtils.AreEqual(r3, a3 ^ b3);
        }

        [TestCompiler]
        public static void bool3_operator_bitwise_xor_scalar_wide()
        {
            bool a0 = (true);
            bool3 b0 = bool3(true, false, true);
            bool3 r0 = bool3(false, true, false);
            TestUtils.AreEqual(r0, a0 ^ b0);

            bool a1 = (true);
            bool3 b1 = bool3(false, true, true);
            bool3 r1 = bool3(true, false, false);
            TestUtils.AreEqual(r1, a1 ^ b1);

            bool a2 = (false);
            bool3 b2 = bool3(false, true, true);
            bool3 r2 = bool3(false, true, true);
            TestUtils.AreEqual(r2, a2 ^ b2);

            bool a3 = (false);
            bool3 b3 = bool3(false, true, false);
            bool3 r3 = bool3(false, true, false);
            TestUtils.AreEqual(r3, a3 ^ b3);
        }

        [TestCompiler]
        public static void bool3_operator_logical_not()
        {
            bool3 a0 = bool3(true, true, false);
            bool3 r0 = bool3(false, false, true);
            TestUtils.AreEqual(r0, !a0);

            bool3 a1 = bool3(false, false, true);
            bool3 r1 = bool3(true, true, false);
            TestUtils.AreEqual(r1, !a1);

            bool3 a2 = bool3(false, false, false);
            bool3 r2 = bool3(true, true, true);
            TestUtils.AreEqual(r2, !a2);

            bool3 a3 = bool3(false, true, true);
            bool3 r3 = bool3(true, false, false);
            TestUtils.AreEqual(r3, !a3);
        }

        [TestCompiler]
        public static void bool3_swizzle_getters()
        {
            var v1 = new bool3(false, true, false);
            var v2 = new bool3(true, false, true);

            TestUtils.AreEqual(bool4(false, false, false, false), v1.xxxx);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.xxxx);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.xxxy);
            TestUtils.AreEqual(bool4(true, true, true, false), v2.xxxy);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.xxxz);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.xxxz);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.xxyx);
            TestUtils.AreEqual(bool4(true, true, false, true), v2.xxyx);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.xxyy);
            TestUtils.AreEqual(bool4(true, true, false, false), v2.xxyy);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.xxyz);
            TestUtils.AreEqual(bool4(true, true, false, true), v2.xxyz);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.xxzx);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.xxzx);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.xxzy);
            TestUtils.AreEqual(bool4(true, true, true, false), v2.xxzy);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.xxzz);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.xxzz);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.xyxx);
            TestUtils.AreEqual(bool4(true, false, true, true), v2.xyxx);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.xyxy);
            TestUtils.AreEqual(bool4(true, false, true, false), v2.xyxy);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.xyxz);
            TestUtils.AreEqual(bool4(true, false, true, true), v2.xyxz);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.xyyx);
            TestUtils.AreEqual(bool4(true, false, false, true), v2.xyyx);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.xyyy);
            TestUtils.AreEqual(bool4(true, false, false, false), v2.xyyy);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.xyyz);
            TestUtils.AreEqual(bool4(true, false, false, true), v2.xyyz);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.xyzx);
            TestUtils.AreEqual(bool4(true, false, true, true), v2.xyzx);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.xyzy);
            TestUtils.AreEqual(bool4(true, false, true, false), v2.xyzy);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.xyzz);
            TestUtils.AreEqual(bool4(true, false, true, true), v2.xyzz);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.xzxx);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.xzxx);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.xzxy);
            TestUtils.AreEqual(bool4(true, true, true, false), v2.xzxy);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.xzxz);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.xzxz);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.xzyx);
            TestUtils.AreEqual(bool4(true, true, false, true), v2.xzyx);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.xzyy);
            TestUtils.AreEqual(bool4(true, true, false, false), v2.xzyy);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.xzyz);
            TestUtils.AreEqual(bool4(true, true, false, true), v2.xzyz);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.xzzx);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.xzzx);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.xzzy);
            TestUtils.AreEqual(bool4(true, true, true, false), v2.xzzy);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.xzzz);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.xzzz);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.yxxx);
            TestUtils.AreEqual(bool4(false, true, true, true), v2.yxxx);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.yxxy);
            TestUtils.AreEqual(bool4(false, true, true, false), v2.yxxy);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.yxxz);
            TestUtils.AreEqual(bool4(false, true, true, true), v2.yxxz);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.yxyx);
            TestUtils.AreEqual(bool4(false, true, false, true), v2.yxyx);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.yxyy);
            TestUtils.AreEqual(bool4(false, true, false, false), v2.yxyy);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.yxyz);
            TestUtils.AreEqual(bool4(false, true, false, true), v2.yxyz);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.yxzx);
            TestUtils.AreEqual(bool4(false, true, true, true), v2.yxzx);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.yxzy);
            TestUtils.AreEqual(bool4(false, true, true, false), v2.yxzy);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.yxzz);
            TestUtils.AreEqual(bool4(false, true, true, true), v2.yxzz);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.yyxx);
            TestUtils.AreEqual(bool4(false, false, true, true), v2.yyxx);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.yyxy);
            TestUtils.AreEqual(bool4(false, false, true, false), v2.yyxy);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.yyxz);
            TestUtils.AreEqual(bool4(false, false, true, true), v2.yyxz);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.yyyx);
            TestUtils.AreEqual(bool4(false, false, false, true), v2.yyyx);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.yyyy);
            TestUtils.AreEqual(bool4(false, false, false, false), v2.yyyy);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.yyyz);
            TestUtils.AreEqual(bool4(false, false, false, true), v2.yyyz);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.yyzx);
            TestUtils.AreEqual(bool4(false, false, true, true), v2.yyzx);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.yyzy);
            TestUtils.AreEqual(bool4(false, false, true, false), v2.yyzy);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.yyzz);
            TestUtils.AreEqual(bool4(false, false, true, true), v2.yyzz);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.yzxx);
            TestUtils.AreEqual(bool4(false, true, true, true), v2.yzxx);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.yzxy);
            TestUtils.AreEqual(bool4(false, true, true, false), v2.yzxy);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.yzxz);
            TestUtils.AreEqual(bool4(false, true, true, true), v2.yzxz);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.yzyx);
            TestUtils.AreEqual(bool4(false, true, false, true), v2.yzyx);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.yzyy);
            TestUtils.AreEqual(bool4(false, true, false, false), v2.yzyy);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.yzyz);
            TestUtils.AreEqual(bool4(false, true, false, true), v2.yzyz);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.yzzx);
            TestUtils.AreEqual(bool4(false, true, true, true), v2.yzzx);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.yzzy);
            TestUtils.AreEqual(bool4(false, true, true, false), v2.yzzy);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.yzzz);
            TestUtils.AreEqual(bool4(false, true, true, true), v2.yzzz);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.zxxx);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.zxxx);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.zxxy);
            TestUtils.AreEqual(bool4(true, true, true, false), v2.zxxy);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.zxxz);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.zxxz);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.zxyx);
            TestUtils.AreEqual(bool4(true, true, false, true), v2.zxyx);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.zxyy);
            TestUtils.AreEqual(bool4(true, true, false, false), v2.zxyy);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.zxyz);
            TestUtils.AreEqual(bool4(true, true, false, true), v2.zxyz);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.zxzx);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.zxzx);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.zxzy);
            TestUtils.AreEqual(bool4(true, true, true, false), v2.zxzy);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.zxzz);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.zxzz);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.zyxx);
            TestUtils.AreEqual(bool4(true, false, true, true), v2.zyxx);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.zyxy);
            TestUtils.AreEqual(bool4(true, false, true, false), v2.zyxy);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.zyxz);
            TestUtils.AreEqual(bool4(true, false, true, true), v2.zyxz);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.zyyx);
            TestUtils.AreEqual(bool4(true, false, false, true), v2.zyyx);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.zyyy);
            TestUtils.AreEqual(bool4(true, false, false, false), v2.zyyy);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.zyyz);
            TestUtils.AreEqual(bool4(true, false, false, true), v2.zyyz);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.zyzx);
            TestUtils.AreEqual(bool4(true, false, true, true), v2.zyzx);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.zyzy);
            TestUtils.AreEqual(bool4(true, false, true, false), v2.zyzy);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.zyzz);
            TestUtils.AreEqual(bool4(true, false, true, true), v2.zyzz);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.zzxx);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.zzxx);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.zzxy);
            TestUtils.AreEqual(bool4(true, true, true, false), v2.zzxy);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.zzxz);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.zzxz);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.zzyx);
            TestUtils.AreEqual(bool4(true, true, false, true), v2.zzyx);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.zzyy);
            TestUtils.AreEqual(bool4(true, true, false, false), v2.zzyy);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.zzyz);
            TestUtils.AreEqual(bool4(true, true, false, true), v2.zzyz);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.zzzx);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.zzzx);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.zzzy);
            TestUtils.AreEqual(bool4(true, true, true, false), v2.zzzy);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.zzzz);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.zzzz);
            TestUtils.AreEqual(bool3(false, false, false), v1.xxx);
            TestUtils.AreEqual(bool3(true, true, true), v2.xxx);
            TestUtils.AreEqual(bool3(false, false, true), v1.xxy);
            TestUtils.AreEqual(bool3(true, true, false), v2.xxy);
            TestUtils.AreEqual(bool3(false, false, false), v1.xxz);
            TestUtils.AreEqual(bool3(true, true, true), v2.xxz);
            TestUtils.AreEqual(bool3(false, true, false), v1.xyx);
            TestUtils.AreEqual(bool3(true, false, true), v2.xyx);
            TestUtils.AreEqual(bool3(false, true, true), v1.xyy);
            TestUtils.AreEqual(bool3(true, false, false), v2.xyy);
            TestUtils.AreEqual(bool3(false, true, false), v1.xyz);
            TestUtils.AreEqual(bool3(true, false, true), v2.xyz);
            TestUtils.AreEqual(bool3(false, false, false), v1.xzx);
            TestUtils.AreEqual(bool3(true, true, true), v2.xzx);
            TestUtils.AreEqual(bool3(false, false, true), v1.xzy);
            TestUtils.AreEqual(bool3(true, true, false), v2.xzy);
            TestUtils.AreEqual(bool3(false, false, false), v1.xzz);
            TestUtils.AreEqual(bool3(true, true, true), v2.xzz);
            TestUtils.AreEqual(bool3(true, false, false), v1.yxx);
            TestUtils.AreEqual(bool3(false, true, true), v2.yxx);
            TestUtils.AreEqual(bool3(true, false, true), v1.yxy);
            TestUtils.AreEqual(bool3(false, true, false), v2.yxy);
            TestUtils.AreEqual(bool3(true, false, false), v1.yxz);
            TestUtils.AreEqual(bool3(false, true, true), v2.yxz);
            TestUtils.AreEqual(bool3(true, true, false), v1.yyx);
            TestUtils.AreEqual(bool3(false, false, true), v2.yyx);
            TestUtils.AreEqual(bool3(true, true, true), v1.yyy);
            TestUtils.AreEqual(bool3(false, false, false), v2.yyy);
            TestUtils.AreEqual(bool3(true, true, false), v1.yyz);
            TestUtils.AreEqual(bool3(false, false, true), v2.yyz);
            TestUtils.AreEqual(bool3(true, false, false), v1.yzx);
            TestUtils.AreEqual(bool3(false, true, true), v2.yzx);
            TestUtils.AreEqual(bool3(true, false, true), v1.yzy);
            TestUtils.AreEqual(bool3(false, true, false), v2.yzy);
            TestUtils.AreEqual(bool3(true, false, false), v1.yzz);
            TestUtils.AreEqual(bool3(false, true, true), v2.yzz);
            TestUtils.AreEqual(bool3(false, false, false), v1.zxx);
            TestUtils.AreEqual(bool3(true, true, true), v2.zxx);
            TestUtils.AreEqual(bool3(false, false, true), v1.zxy);
            TestUtils.AreEqual(bool3(true, true, false), v2.zxy);
            TestUtils.AreEqual(bool3(false, false, false), v1.zxz);
            TestUtils.AreEqual(bool3(true, true, true), v2.zxz);
            TestUtils.AreEqual(bool3(false, true, false), v1.zyx);
            TestUtils.AreEqual(bool3(true, false, true), v2.zyx);
            TestUtils.AreEqual(bool3(false, true, true), v1.zyy);
            TestUtils.AreEqual(bool3(true, false, false), v2.zyy);
            TestUtils.AreEqual(bool3(false, true, false), v1.zyz);
            TestUtils.AreEqual(bool3(true, false, true), v2.zyz);
            TestUtils.AreEqual(bool3(false, false, false), v1.zzx);
            TestUtils.AreEqual(bool3(true, true, true), v2.zzx);
            TestUtils.AreEqual(bool3(false, false, true), v1.zzy);
            TestUtils.AreEqual(bool3(true, true, false), v2.zzy);
            TestUtils.AreEqual(bool3(false, false, false), v1.zzz);
            TestUtils.AreEqual(bool3(true, true, true), v2.zzz);
            TestUtils.AreEqual(bool2(false, false), v1.xx);
            TestUtils.AreEqual(bool2(true, true), v2.xx);
            TestUtils.AreEqual(bool2(false, true), v1.xy);
            TestUtils.AreEqual(bool2(true, false), v2.xy);
            TestUtils.AreEqual(bool2(false, false), v1.xz);
            TestUtils.AreEqual(bool2(true, true), v2.xz);
            TestUtils.AreEqual(bool2(true, false), v1.yx);
            TestUtils.AreEqual(bool2(false, true), v2.yx);
            TestUtils.AreEqual(bool2(true, true), v1.yy);
            TestUtils.AreEqual(bool2(false, false), v2.yy);
            TestUtils.AreEqual(bool2(true, false), v1.yz);
            TestUtils.AreEqual(bool2(false, true), v2.yz);
            TestUtils.AreEqual(bool2(false, false), v1.zx);
            TestUtils.AreEqual(bool2(true, true), v2.zx);
            TestUtils.AreEqual(bool2(false, true), v1.zy);
            TestUtils.AreEqual(bool2(true, false), v2.zy);
            TestUtils.AreEqual(bool2(false, false), v1.zz);
            TestUtils.AreEqual(bool2(true, true), v2.zz);
        }

        [TestCompiler]
        public static void bool3_swizzle_setters()
        {
            var v1 = new bool3(false, true, false);
            var v2 = new bool3(true, false, true);

            var set = new bool3();

            set = v1;
            set.xyz = v1.xyz;
            TestUtils.AreEqual(bool3(false, true, false), set);
            set = v2;
            set.xyz = v2.xyz;
            TestUtils.AreEqual(bool3(true, false, true), set);
            set = v1;
            set.xzy = v1.xyz;
            TestUtils.AreEqual(bool3(false, false, true), set);
            set = v2;
            set.xzy = v2.xyz;
            TestUtils.AreEqual(bool3(true, true, false), set);
            set = v1;
            set.yxz = v1.xyz;
            TestUtils.AreEqual(bool3(true, false, false), set);
            set = v2;
            set.yxz = v2.xyz;
            TestUtils.AreEqual(bool3(false, true, true), set);
            set = v1;
            set.yzx = v1.xyz;
            TestUtils.AreEqual(bool3(false, false, true), set);
            set = v2;
            set.yzx = v2.xyz;
            TestUtils.AreEqual(bool3(true, true, false), set);
            set = v1;
            set.zxy = v1.xyz;
            TestUtils.AreEqual(bool3(true, false, false), set);
            set = v2;
            set.zxy = v2.xyz;
            TestUtils.AreEqual(bool3(false, true, true), set);
            set = v1;
            set.zyx = v1.xyz;
            TestUtils.AreEqual(bool3(false, true, false), set);
            set = v2;
            set.zyx = v2.xyz;
            TestUtils.AreEqual(bool3(true, false, true), set);
            set = v1;
            set.xy = v1.xy;
            TestUtils.AreEqual(bool3(false, true, false), set);
            set = v2;
            set.xy = v2.xy;
            TestUtils.AreEqual(bool3(true, false, true), set);
            set = v1;
            set.xz = v1.xy;
            TestUtils.AreEqual(bool3(false, true, true), set);
            set = v2;
            set.xz = v2.xy;
            TestUtils.AreEqual(bool3(true, false, false), set);
            set = v1;
            set.yx = v1.xy;
            TestUtils.AreEqual(bool3(true, false, false), set);
            set = v2;
            set.yx = v2.xy;
            TestUtils.AreEqual(bool3(false, true, true), set);
            set = v1;
            set.yz = v1.xy;
            TestUtils.AreEqual(bool3(false, false, true), set);
            set = v2;
            set.yz = v2.xy;
            TestUtils.AreEqual(bool3(true, true, false), set);
            set = v1;
            set.zx = v1.xy;
            TestUtils.AreEqual(bool3(true, true, false), set);
            set = v2;
            set.zx = v2.xy;
            TestUtils.AreEqual(bool3(false, false, true), set);
            set = v1;
            set.zy = v1.xy;
            TestUtils.AreEqual(bool3(false, true, false), set);
            set = v2;
            set.zy = v2.xy;
            TestUtils.AreEqual(bool3(true, false, true), set);
        }

        [TestCompiler]
        public static void bool3_colorswizzle_getters()
        {
            var v1 = new bool3(false, true, false);
            var v2 = new bool3(true, false, true);

            TestUtils.AreEqual(bool4(false, false, false, false), v1.rrrr);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.rrrr);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.rrrg);
            TestUtils.AreEqual(bool4(true, true, true, false), v2.rrrg);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.rrrb);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.rrrb);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.rrgr);
            TestUtils.AreEqual(bool4(true, true, false, true), v2.rrgr);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.rrgg);
            TestUtils.AreEqual(bool4(true, true, false, false), v2.rrgg);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.rrgb);
            TestUtils.AreEqual(bool4(true, true, false, true), v2.rrgb);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.rrbr);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.rrbr);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.rrbg);
            TestUtils.AreEqual(bool4(true, true, true, false), v2.rrbg);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.rrbb);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.rrbb);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.rgrr);
            TestUtils.AreEqual(bool4(true, false, true, true), v2.rgrr);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.rgrg);
            TestUtils.AreEqual(bool4(true, false, true, false), v2.rgrg);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.rgrb);
            TestUtils.AreEqual(bool4(true, false, true, true), v2.rgrb);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.rggr);
            TestUtils.AreEqual(bool4(true, false, false, true), v2.rggr);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.rggg);
            TestUtils.AreEqual(bool4(true, false, false, false), v2.rggg);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.rggb);
            TestUtils.AreEqual(bool4(true, false, false, true), v2.rggb);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.rgbr);
            TestUtils.AreEqual(bool4(true, false, true, true), v2.rgbr);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.rgbg);
            TestUtils.AreEqual(bool4(true, false, true, false), v2.rgbg);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.rgbb);
            TestUtils.AreEqual(bool4(true, false, true, true), v2.rgbb);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.rbrr);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.rbrr);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.rbrg);
            TestUtils.AreEqual(bool4(true, true, true, false), v2.rbrg);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.rbrb);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.rbrb);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.rbgr);
            TestUtils.AreEqual(bool4(true, true, false, true), v2.rbgr);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.rbgg);
            TestUtils.AreEqual(bool4(true, true, false, false), v2.rbgg);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.rbgb);
            TestUtils.AreEqual(bool4(true, true, false, true), v2.rbgb);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.rbbr);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.rbbr);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.rbbg);
            TestUtils.AreEqual(bool4(true, true, true, false), v2.rbbg);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.rbbb);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.rbbb);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.grrr);
            TestUtils.AreEqual(bool4(false, true, true, true), v2.grrr);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.grrg);
            TestUtils.AreEqual(bool4(false, true, true, false), v2.grrg);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.grrb);
            TestUtils.AreEqual(bool4(false, true, true, true), v2.grrb);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.grgr);
            TestUtils.AreEqual(bool4(false, true, false, true), v2.grgr);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.grgg);
            TestUtils.AreEqual(bool4(false, true, false, false), v2.grgg);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.grgb);
            TestUtils.AreEqual(bool4(false, true, false, true), v2.grgb);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.grbr);
            TestUtils.AreEqual(bool4(false, true, true, true), v2.grbr);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.grbg);
            TestUtils.AreEqual(bool4(false, true, true, false), v2.grbg);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.grbb);
            TestUtils.AreEqual(bool4(false, true, true, true), v2.grbb);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.ggrr);
            TestUtils.AreEqual(bool4(false, false, true, true), v2.ggrr);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.ggrg);
            TestUtils.AreEqual(bool4(false, false, true, false), v2.ggrg);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.ggrb);
            TestUtils.AreEqual(bool4(false, false, true, true), v2.ggrb);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.gggr);
            TestUtils.AreEqual(bool4(false, false, false, true), v2.gggr);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.gggg);
            TestUtils.AreEqual(bool4(false, false, false, false), v2.gggg);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.gggb);
            TestUtils.AreEqual(bool4(false, false, false, true), v2.gggb);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.ggbr);
            TestUtils.AreEqual(bool4(false, false, true, true), v2.ggbr);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.ggbg);
            TestUtils.AreEqual(bool4(false, false, true, false), v2.ggbg);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.ggbb);
            TestUtils.AreEqual(bool4(false, false, true, true), v2.ggbb);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.gbrr);
            TestUtils.AreEqual(bool4(false, true, true, true), v2.gbrr);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.gbrg);
            TestUtils.AreEqual(bool4(false, true, true, false), v2.gbrg);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.gbrb);
            TestUtils.AreEqual(bool4(false, true, true, true), v2.gbrb);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.gbgr);
            TestUtils.AreEqual(bool4(false, true, false, true), v2.gbgr);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.gbgg);
            TestUtils.AreEqual(bool4(false, true, false, false), v2.gbgg);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.gbgb);
            TestUtils.AreEqual(bool4(false, true, false, true), v2.gbgb);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.gbbr);
            TestUtils.AreEqual(bool4(false, true, true, true), v2.gbbr);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.gbbg);
            TestUtils.AreEqual(bool4(false, true, true, false), v2.gbbg);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.gbbb);
            TestUtils.AreEqual(bool4(false, true, true, true), v2.gbbb);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.brrr);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.brrr);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.brrg);
            TestUtils.AreEqual(bool4(true, true, true, false), v2.brrg);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.brrb);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.brrb);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.brgr);
            TestUtils.AreEqual(bool4(true, true, false, true), v2.brgr);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.brgg);
            TestUtils.AreEqual(bool4(true, true, false, false), v2.brgg);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.brgb);
            TestUtils.AreEqual(bool4(true, true, false, true), v2.brgb);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.brbr);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.brbr);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.brbg);
            TestUtils.AreEqual(bool4(true, true, true, false), v2.brbg);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.brbb);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.brbb);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.bgrr);
            TestUtils.AreEqual(bool4(true, false, true, true), v2.bgrr);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.bgrg);
            TestUtils.AreEqual(bool4(true, false, true, false), v2.bgrg);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.bgrb);
            TestUtils.AreEqual(bool4(true, false, true, true), v2.bgrb);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.bggr);
            TestUtils.AreEqual(bool4(true, false, false, true), v2.bggr);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.bggg);
            TestUtils.AreEqual(bool4(true, false, false, false), v2.bggg);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.bggb);
            TestUtils.AreEqual(bool4(true, false, false, true), v2.bggb);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.bgbr);
            TestUtils.AreEqual(bool4(true, false, true, true), v2.bgbr);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.bgbg);
            TestUtils.AreEqual(bool4(true, false, true, false), v2.bgbg);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.bgbb);
            TestUtils.AreEqual(bool4(true, false, true, true), v2.bgbb);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.bbrr);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.bbrr);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.bbrg);
            TestUtils.AreEqual(bool4(true, true, true, false), v2.bbrg);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.bbrb);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.bbrb);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.bbgr);
            TestUtils.AreEqual(bool4(true, true, false, true), v2.bbgr);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.bbgg);
            TestUtils.AreEqual(bool4(true, true, false, false), v2.bbgg);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.bbgb);
            TestUtils.AreEqual(bool4(true, true, false, true), v2.bbgb);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.bbbr);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.bbbr);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.bbbg);
            TestUtils.AreEqual(bool4(true, true, true, false), v2.bbbg);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.bbbb);
            TestUtils.AreEqual(bool4(true, true, true, true), v2.bbbb);
            TestUtils.AreEqual(bool3(false, false, false), v1.rrr);
            TestUtils.AreEqual(bool3(true, true, true), v2.rrr);
            TestUtils.AreEqual(bool3(false, false, true), v1.rrg);
            TestUtils.AreEqual(bool3(true, true, false), v2.rrg);
            TestUtils.AreEqual(bool3(false, false, false), v1.rrb);
            TestUtils.AreEqual(bool3(true, true, true), v2.rrb);
            TestUtils.AreEqual(bool3(false, true, false), v1.rgr);
            TestUtils.AreEqual(bool3(true, false, true), v2.rgr);
            TestUtils.AreEqual(bool3(false, true, true), v1.rgg);
            TestUtils.AreEqual(bool3(true, false, false), v2.rgg);
            TestUtils.AreEqual(bool3(false, true, false), v1.rgb);
            TestUtils.AreEqual(bool3(true, false, true), v2.rgb);
            TestUtils.AreEqual(bool3(false, false, false), v1.rbr);
            TestUtils.AreEqual(bool3(true, true, true), v2.rbr);
            TestUtils.AreEqual(bool3(false, false, true), v1.rbg);
            TestUtils.AreEqual(bool3(true, true, false), v2.rbg);
            TestUtils.AreEqual(bool3(false, false, false), v1.rbb);
            TestUtils.AreEqual(bool3(true, true, true), v2.rbb);
            TestUtils.AreEqual(bool3(true, false, false), v1.grr);
            TestUtils.AreEqual(bool3(false, true, true), v2.grr);
            TestUtils.AreEqual(bool3(true, false, true), v1.grg);
            TestUtils.AreEqual(bool3(false, true, false), v2.grg);
            TestUtils.AreEqual(bool3(true, false, false), v1.grb);
            TestUtils.AreEqual(bool3(false, true, true), v2.grb);
            TestUtils.AreEqual(bool3(true, true, false), v1.ggr);
            TestUtils.AreEqual(bool3(false, false, true), v2.ggr);
            TestUtils.AreEqual(bool3(true, true, true), v1.ggg);
            TestUtils.AreEqual(bool3(false, false, false), v2.ggg);
            TestUtils.AreEqual(bool3(true, true, false), v1.ggb);
            TestUtils.AreEqual(bool3(false, false, true), v2.ggb);
            TestUtils.AreEqual(bool3(true, false, false), v1.gbr);
            TestUtils.AreEqual(bool3(false, true, true), v2.gbr);
            TestUtils.AreEqual(bool3(true, false, true), v1.gbg);
            TestUtils.AreEqual(bool3(false, true, false), v2.gbg);
            TestUtils.AreEqual(bool3(true, false, false), v1.gbb);
            TestUtils.AreEqual(bool3(false, true, true), v2.gbb);
            TestUtils.AreEqual(bool3(false, false, false), v1.brr);
            TestUtils.AreEqual(bool3(true, true, true), v2.brr);
            TestUtils.AreEqual(bool3(false, false, true), v1.brg);
            TestUtils.AreEqual(bool3(true, true, false), v2.brg);
            TestUtils.AreEqual(bool3(false, false, false), v1.brb);
            TestUtils.AreEqual(bool3(true, true, true), v2.brb);
            TestUtils.AreEqual(bool3(false, true, false), v1.bgr);
            TestUtils.AreEqual(bool3(true, false, true), v2.bgr);
            TestUtils.AreEqual(bool3(false, true, true), v1.bgg);
            TestUtils.AreEqual(bool3(true, false, false), v2.bgg);
            TestUtils.AreEqual(bool3(false, true, false), v1.bgb);
            TestUtils.AreEqual(bool3(true, false, true), v2.bgb);
            TestUtils.AreEqual(bool3(false, false, false), v1.bbr);
            TestUtils.AreEqual(bool3(true, true, true), v2.bbr);
            TestUtils.AreEqual(bool3(false, false, true), v1.bbg);
            TestUtils.AreEqual(bool3(true, true, false), v2.bbg);
            TestUtils.AreEqual(bool3(false, false, false), v1.bbb);
            TestUtils.AreEqual(bool3(true, true, true), v2.bbb);
            TestUtils.AreEqual(bool2(false, false), v1.rr);
            TestUtils.AreEqual(bool2(true, true), v2.rr);
            TestUtils.AreEqual(bool2(false, true), v1.rg);
            TestUtils.AreEqual(bool2(true, false), v2.rg);
            TestUtils.AreEqual(bool2(false, false), v1.rb);
            TestUtils.AreEqual(bool2(true, true), v2.rb);
            TestUtils.AreEqual(bool2(true, false), v1.gr);
            TestUtils.AreEqual(bool2(false, true), v2.gr);
            TestUtils.AreEqual(bool2(true, true), v1.gg);
            TestUtils.AreEqual(bool2(false, false), v2.gg);
            TestUtils.AreEqual(bool2(true, false), v1.gb);
            TestUtils.AreEqual(bool2(false, true), v2.gb);
            TestUtils.AreEqual(bool2(false, false), v1.br);
            TestUtils.AreEqual(bool2(true, true), v2.br);
            TestUtils.AreEqual(bool2(false, true), v1.bg);
            TestUtils.AreEqual(bool2(true, false), v2.bg);
            TestUtils.AreEqual(bool2(false, false), v1.bb);
            TestUtils.AreEqual(bool2(true, true), v2.bb);
        }

        [TestCompiler]
        public static void bool3_colorswizzle_setters()
        {
            var v1 = new bool3(false, true, false);
            var v2 = new bool3(true, false, true);

            var set = new bool3();

            set = v1;
            set.rgb = v1.rgb;
            TestUtils.AreEqual(bool3(false, true, false), set);
            set = v2;
            set.rgb = v2.rgb;
            TestUtils.AreEqual(bool3(true, false, true), set);
            set = v1;
            set.rbg = v1.rgb;
            TestUtils.AreEqual(bool3(false, false, true), set);
            set = v2;
            set.rbg = v2.rgb;
            TestUtils.AreEqual(bool3(true, true, false), set);
            set = v1;
            set.grb = v1.rgb;
            TestUtils.AreEqual(bool3(true, false, false), set);
            set = v2;
            set.grb = v2.rgb;
            TestUtils.AreEqual(bool3(false, true, true), set);
            set = v1;
            set.gbr = v1.rgb;
            TestUtils.AreEqual(bool3(false, false, true), set);
            set = v2;
            set.gbr = v2.rgb;
            TestUtils.AreEqual(bool3(true, true, false), set);
            set = v1;
            set.brg = v1.rgb;
            TestUtils.AreEqual(bool3(true, false, false), set);
            set = v2;
            set.brg = v2.rgb;
            TestUtils.AreEqual(bool3(false, true, true), set);
            set = v1;
            set.bgr = v1.rgb;
            TestUtils.AreEqual(bool3(false, true, false), set);
            set = v2;
            set.bgr = v2.rgb;
            TestUtils.AreEqual(bool3(true, false, true), set);
            set = v1;
            set.rg = v1.rg;
            TestUtils.AreEqual(bool3(false, true, false), set);
            set = v2;
            set.rg = v2.rg;
            TestUtils.AreEqual(bool3(true, false, true), set);
            set = v1;
            set.rb = v1.rg;
            TestUtils.AreEqual(bool3(false, true, true), set);
            set = v2;
            set.rb = v2.rg;
            TestUtils.AreEqual(bool3(true, false, false), set);
            set = v1;
            set.gr = v1.rg;
            TestUtils.AreEqual(bool3(true, false, false), set);
            set = v2;
            set.gr = v2.rg;
            TestUtils.AreEqual(bool3(false, true, true), set);
            set = v1;
            set.gb = v1.rg;
            TestUtils.AreEqual(bool3(false, false, true), set);
            set = v2;
            set.gb = v2.rg;
            TestUtils.AreEqual(bool3(true, true, false), set);
            set = v1;
            set.br = v1.rg;
            TestUtils.AreEqual(bool3(true, true, false), set);
            set = v2;
            set.br = v2.rg;
            TestUtils.AreEqual(bool3(false, false, true), set);
            set = v1;
            set.bg = v1.rg;
            TestUtils.AreEqual(bool3(false, true, false), set);
            set = v2;
            set.bg = v2.rg;
            TestUtils.AreEqual(bool3(true, false, true), set);
        }


    }
}
