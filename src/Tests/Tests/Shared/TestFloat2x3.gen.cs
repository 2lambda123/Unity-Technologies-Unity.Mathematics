//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using static Unity.Mathematics.math;
using Burst.Compiler.IL.Tests;

namespace Unity.Mathematics.Tests
{
    [TestFixture]
    public class TestFloat2x3
    {
        [TestCompiler]
        public static void float2x3_zero()
        {
            TestUtils.AreEqual(float2x3.zero.c0.x, 0.0f);
            TestUtils.AreEqual(float2x3.zero.c0.y, 0.0f);
            TestUtils.AreEqual(float2x3.zero.c1.x, 0.0f);
            TestUtils.AreEqual(float2x3.zero.c1.y, 0.0f);
            TestUtils.AreEqual(float2x3.zero.c2.x, 0.0f);
            TestUtils.AreEqual(float2x3.zero.c2.y, 0.0f);
        }

        [TestCompiler]
        public static void float2x3_operator_equal_wide_wide()
        {
            float2x3 a0 = float2x3(331.744141f, -417.6833f, -438.450867f, -57.99066f, -183.1134f, 72.3228149f);
            float2x3 b0 = float2x3(-426.582825f, 431.344543f, 263.339172f, -309.3919f, 391.1996f, -468.237274f);
            bool2x3 r0 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            float2x3 a1 = float2x3(-292.706116f, -181.376923f, 43.84778f, 481.287354f, 258.4253f, 352.580444f);
            float2x3 b1 = float2x3(-389.9116f, -192.672028f, -8.950195f, -339.086975f, 104.677917f, -443.5048f);
            bool2x3 r1 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            float2x3 a2 = float2x3(70.85327f, -41.08313f, -501.143951f, 469.417725f, 379.497925f, -174.4578f);
            float2x3 b2 = float2x3(358.640137f, -415.7492f, -141.969635f, 379.130066f, 56.10376f, 132.809509f);
            bool2x3 r2 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            float2x3 a3 = float2x3(-456.507446f, 172.215576f, 258.43927f, 509.8202f, -199.17569f, 194.292358f);
            float2x3 b3 = float2x3(-233.776184f, -159.645721f, 369.805054f, 41.04828f, 316.684326f, -258.031738f);
            bool2x3 r3 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_equal_wide_scalar()
        {
            float2x3 a0 = float2x3(327.101929f, 440.467224f, -443.745178f, 325.546265f, 435.371765f, 58.38208f);
            float b0 = (342.440552f);
            bool2x3 r0 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            float2x3 a1 = float2x3(-398.435f, 445.502136f, -17.7927246f, -92.37259f, -350.2315f, 450.236755f);
            float b1 = (377.0666f);
            bool2x3 r1 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            float2x3 a2 = float2x3(14.9833374f, 412.488525f, 454.7033f, 289.2917f, 356.93158f, 413.762878f);
            float b2 = (-504.426971f);
            bool2x3 r2 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            float2x3 a3 = float2x3(233.3728f, 355.5678f, -235.840881f, 322.297729f, 114.381042f, 352.201782f);
            float b3 = (-481.17157f);
            bool2x3 r3 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_equal_scalar_wide()
        {
            float a0 = (430.781128f);
            float2x3 b0 = float2x3(-434.727478f, 103.730347f, -263.03656f, -224.560181f, 204.110779f, 196.568237f);
            bool2x3 r0 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            float a1 = (-424.756561f);
            float2x3 b1 = float2x3(467.4505f, -45.4336243f, 138.191589f, 181.061951f, -449.2158f, -335.154449f);
            bool2x3 r1 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            float a2 = (-77.46622f);
            float2x3 b2 = float2x3(107.902405f, -330.9517f, -115.29895f, 244.522888f, -481.4762f, 134.603821f);
            bool2x3 r2 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            float a3 = (-208.271637f);
            float2x3 b3 = float2x3(420.9162f, -464.2389f, 64.91498f, 62.8317261f, -429.80426f, -5.533844f);
            bool2x3 r3 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_not_equal_wide_wide()
        {
            float2x3 a0 = float2x3(19.2539673f, 121.335449f, 468.3097f, -212.365448f, -410.633484f, 507.534241f);
            float2x3 b0 = float2x3(-249.066345f, -19.0466f, 323.622559f, 294.941956f, -492.460968f, -166.483276f);
            bool2x3 r0 = bool2x3(true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            float2x3 a1 = float2x3(52.20117f, -319.6424f, -448.9063f, 255.3703f, -70.46268f, -18.9137878f);
            float2x3 b1 = float2x3(421.1953f, 87.6629f, 193.875122f, -279.289825f, 158.513611f, 426.635132f);
            bool2x3 r1 = bool2x3(true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            float2x3 a2 = float2x3(-131.624084f, 288.074951f, 290.717957f, 191.2832f, -220.54245f, 404.7948f);
            float2x3 b2 = float2x3(-404.547821f, 480.740479f, -184.480316f, 355.445068f, 414.6756f, -134.759186f);
            bool2x3 r2 = bool2x3(true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            float2x3 a3 = float2x3(-266.012451f, 258.967346f, -375.447144f, 124.137634f, -395.242065f, 154.09259f);
            float2x3 b3 = float2x3(-458.719055f, -43.3425f, -446.3987f, -50.54947f, -142.774689f, -462.0124f);
            bool2x3 r3 = bool2x3(true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_not_equal_wide_scalar()
        {
            float2x3 a0 = float2x3(-418.022278f, 231.448242f, -469.478516f, -94.97409f, -376.084381f, -428.119019f);
            float b0 = (-206.336578f);
            bool2x3 r0 = bool2x3(true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            float2x3 a1 = float2x3(492.9278f, 80.41858f, -124.39093f, -409.290527f, 353.96106f, 170.989319f);
            float b1 = (-91.33383f);
            bool2x3 r1 = bool2x3(true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            float2x3 a2 = float2x3(-494.895752f, -180.176971f, 324.904724f, 365.89978f, 86.04675f, 75.14545f);
            float b2 = (181.015137f);
            bool2x3 r2 = bool2x3(true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            float2x3 a3 = float2x3(-505.780518f, 385.4771f, -221.906036f, 237.351563f, 401.893555f, -418.3873f);
            float b3 = (504.517944f);
            bool2x3 r3 = bool2x3(true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_not_equal_scalar_wide()
        {
            float a0 = (357.343384f);
            float2x3 b0 = float2x3(192.976379f, -323.1933f, -25.1252441f, -270.503082f, -454.426819f, -458.8189f);
            bool2x3 r0 = bool2x3(true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            float a1 = (-274.5384f);
            float2x3 b1 = float2x3(127.642212f, -43.8877258f, -179.47229f, 498.287659f, -333.8144f, -169.487946f);
            bool2x3 r1 = bool2x3(true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            float a2 = (-146.258789f);
            float2x3 b2 = float2x3(-33.028656f, 156.743591f, -285.206543f, -10.882843f, 259.283447f, -469.940765f);
            bool2x3 r2 = bool2x3(true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            float a3 = (46.4143066f);
            float2x3 b3 = float2x3(-415.384338f, 311.547668f, 244.515991f, 110.527771f, -290.509644f, -53.821167f);
            bool2x3 r3 = bool2x3(true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_less_wide_wide()
        {
            float2x3 a0 = float2x3(487.8249f, -508.921722f, 53.8760376f, 443.786926f, -81.07861f, 103.165527f);
            float2x3 b0 = float2x3(453.097351f, -123.830566f, 492.750122f, 434.46344f, -402.464783f, -480.752319f);
            bool2x3 r0 = bool2x3(false, true, true, false, false, false);
            TestUtils.AreEqual(a0 < b0, r0);

            float2x3 a1 = float2x3(-496.199768f, 30.0013428f, 490.884521f, 485.697083f, -360.631073f, -442.654358f);
            float2x3 b1 = float2x3(317.300659f, 175.821045f, 301.866333f, 77.77667f, -188.57605f, 479.3379f);
            bool2x3 r1 = bool2x3(true, true, false, false, true, true);
            TestUtils.AreEqual(a1 < b1, r1);

            float2x3 a2 = float2x3(-310.858032f, -142.116028f, -131.921722f, -279.917725f, -335.161621f, 207.237366f);
            float2x3 b2 = float2x3(-393.342255f, 21.69635f, 151.5708f, -115.47818f, -417.1082f, -272.838745f);
            bool2x3 r2 = bool2x3(false, true, true, true, false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            float2x3 a3 = float2x3(267.394043f, 259.686523f, 197.362366f, 378.0946f, -358.618958f, -187.3323f);
            float2x3 b3 = float2x3(210.978516f, -355.154755f, 183.079834f, -260.3083f, 312.9527f, 383.91626f);
            bool2x3 r3 = bool2x3(false, false, false, false, true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_less_wide_scalar()
        {
            float2x3 a0 = float2x3(18.1535645f, -409.346466f, 180.7865f, -185.154968f, 228.264709f, 124.125732f);
            float b0 = (152.320862f);
            bool2x3 r0 = bool2x3(true, true, false, true, false, true);
            TestUtils.AreEqual(a0 < b0, r0);

            float2x3 a1 = float2x3(265.743835f, 493.123169f, 36.3736572f, 131.67981f, 85.93457f, -89.3711853f);
            float b1 = (-307.545563f);
            bool2x3 r1 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a1 < b1, r1);

            float2x3 a2 = float2x3(-36.8948059f, -193.741882f, -320.661f, 424.3283f, -392.517334f, 435.076416f);
            float b2 = (-491.257172f);
            bool2x3 r2 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            float2x3 a3 = float2x3(181.86554f, -108.90918f, -9.381622f, 109.856995f, -377.404f, -91.78177f);
            float b3 = (350.0327f);
            bool2x3 r3 = bool2x3(true, true, true, true, true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_less_scalar_wide()
        {
            float a0 = (416.681274f);
            float2x3 b0 = float2x3(-105.389069f, -389.2496f, 408.846863f, -87.03952f, 268.691345f, -470.20163f);
            bool2x3 r0 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a0 < b0, r0);

            float a1 = (271.315674f);
            float2x3 b1 = float2x3(-170.322723f, -156.598419f, -0.2886963f, 72.09082f, -54.4299927f, 191.603271f);
            bool2x3 r1 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a1 < b1, r1);

            float a2 = (370.544f);
            float2x3 b2 = float2x3(283.232422f, -362.762024f, -145.500977f, 315.129883f, 340.8296f, -60.229248f);
            bool2x3 r2 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            float a3 = (-194.843689f);
            float2x3 b3 = float2x3(-261.056763f, -246.825867f, 91.5376f, -233.5228f, 16.3255615f, -44.0384827f);
            bool2x3 r3 = bool2x3(false, false, true, false, true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_greater_wide_wide()
        {
            float2x3 a0 = float2x3(-188.03302f, 234.300232f, -56.30594f, 240.958374f, 501.4876f, -303.425f);
            float2x3 b0 = float2x3(-17.4008179f, -59.53961f, -24.2853088f, 222.387512f, -207.170441f, 365.5465f);
            bool2x3 r0 = bool2x3(false, true, false, true, true, false);
            TestUtils.AreEqual(a0 > b0, r0);

            float2x3 a1 = float2x3(-305.5091f, -470.742554f, -305.090759f, 26.0454712f, 169.997375f, -498.388031f);
            float2x3 b1 = float2x3(183.5733f, -23.080719f, 337.163818f, 175.811768f, -8.514038f, -125.865387f);
            bool2x3 r1 = bool2x3(false, false, false, false, true, false);
            TestUtils.AreEqual(a1 > b1, r1);

            float2x3 a2 = float2x3(270.142944f, 69.6588745f, -163.975159f, 273.174133f, 193.8711f, -157.939331f);
            float2x3 b2 = float2x3(-212.857056f, 12.6571045f, 134.17511f, -101.511993f, -505.14505f, -150.596619f);
            bool2x3 r2 = bool2x3(true, true, false, true, true, false);
            TestUtils.AreEqual(a2 > b2, r2);

            float2x3 a3 = float2x3(439.0537f, 414.232666f, -246.558075f, 326.2243f, -457.296661f, -338.94574f);
            float2x3 b3 = float2x3(286.160583f, 358.075439f, 105.754028f, 61.5240479f, 144.405334f, -298.4254f);
            bool2x3 r3 = bool2x3(true, true, false, true, false, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_greater_wide_scalar()
        {
            float2x3 a0 = float2x3(468.8808f, -355.421021f, -45.708252f, 407.176575f, 348.72522f, 418.545349f);
            float b0 = (201.802734f);
            bool2x3 r0 = bool2x3(true, false, false, true, true, true);
            TestUtils.AreEqual(a0 > b0, r0);

            float2x3 a1 = float2x3(-422.750183f, 434.163635f, -255.049072f, 178.8064f, 379.823364f, -346.942383f);
            float b1 = (-364.2755f);
            bool2x3 r1 = bool2x3(false, true, true, true, true, true);
            TestUtils.AreEqual(a1 > b1, r1);

            float2x3 a2 = float2x3(-121.102142f, -282.735718f, 437.083984f, 15.6209717f, 208.428467f, -509.6458f);
            float b2 = (164.48761f);
            bool2x3 r2 = bool2x3(false, false, true, false, true, false);
            TestUtils.AreEqual(a2 > b2, r2);

            float2x3 a3 = float2x3(-293.801758f, 488.46167f, -162.216888f, 301.607727f, -345.053375f, -76.30057f);
            float b3 = (127.584412f);
            bool2x3 r3 = bool2x3(false, true, false, true, false, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_greater_scalar_wide()
        {
            float a0 = (137.504211f);
            float2x3 b0 = float2x3(-443.866821f, 279.852783f, -462.4043f, -280.713776f, 120.712769f, -31.6700134f);
            bool2x3 r0 = bool2x3(true, false, true, true, true, true);
            TestUtils.AreEqual(a0 > b0, r0);

            float a1 = (363.428345f);
            float2x3 b1 = float2x3(263.125427f, -156.36087f, 66.3540039f, -303.1296f, 419.3374f, -392.721069f);
            bool2x3 r1 = bool2x3(true, true, true, true, false, true);
            TestUtils.AreEqual(a1 > b1, r1);

            float a2 = (-378.762939f);
            float2x3 b2 = float2x3(-398.361145f, -314.282471f, 89.5307f, 408.407166f, 303.3543f, 16.916748f);
            bool2x3 r2 = bool2x3(true, false, false, false, false, false);
            TestUtils.AreEqual(a2 > b2, r2);

            float a3 = (-425.384216f);
            float2x3 b3 = float2x3(205.63916f, -181.906982f, 256.7876f, -272.8026f, -192.998962f, 457.5393f);
            bool2x3 r3 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_less_equal_wide_wide()
        {
            float2x3 a0 = float2x3(333.0476f, 239.35083f, 26.5692139f, 41.4924927f, -162.662354f, -271.002747f);
            float2x3 b0 = float2x3(46.1311646f, -378.082336f, -466.7782f, -173.335022f, -482.2393f, 183.3465f);
            bool2x3 r0 = bool2x3(false, false, false, false, false, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            float2x3 a1 = float2x3(-108.986206f, 392.0816f, 314.488647f, 208.102173f, 39.9359741f, 458.7705f);
            float2x3 b1 = float2x3(399.076172f, -127.637085f, -118.196838f, -329.727448f, -208.817627f, 368.286865f);
            bool2x3 r1 = bool2x3(true, false, false, false, false, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            float2x3 a2 = float2x3(-404.075f, 359.389954f, 405.929749f, -463.0184f, -459.443024f, 271.79187f);
            float2x3 b2 = float2x3(68.84564f, 452.365234f, -255.050629f, 440.1126f, -138.225769f, -237.159058f);
            bool2x3 r2 = bool2x3(true, true, false, true, true, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            float2x3 a3 = float2x3(73.09076f, 263.657959f, -355.346161f, -184.612061f, -320.97345f, 340.874939f);
            float2x3 b3 = float2x3(201.343079f, -403.248749f, 230.682983f, -57.3156433f, 124.1311f, 38.1745f);
            bool2x3 r3 = bool2x3(true, false, true, true, true, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_less_equal_wide_scalar()
        {
            float2x3 a0 = float2x3(122.817688f, -283.694275f, -288.847656f, -185.453918f, -315.2539f, 279.5738f);
            float b0 = (-181.943909f);
            bool2x3 r0 = bool2x3(false, true, true, true, true, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            float2x3 a1 = float2x3(-317.959167f, -368.803284f, -132.488861f, -207.253967f, -328.492218f, -115.355896f);
            float b1 = (-255.5698f);
            bool2x3 r1 = bool2x3(true, true, false, false, true, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            float2x3 a2 = float2x3(-192.5214f, -38.063385f, 509.92865f, -410.584534f, -231.749481f, 179.05542f);
            float b2 = (454.183838f);
            bool2x3 r2 = bool2x3(true, true, false, true, true, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            float2x3 a3 = float2x3(-253.84079f, 320.4897f, 65.78052f, 157.06311f, 126.580139f, -476.033325f);
            float b3 = (228.502563f);
            bool2x3 r3 = bool2x3(true, false, true, true, true, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_less_equal_scalar_wide()
        {
            float a0 = (-336.4657f);
            float2x3 b0 = float2x3(251.958374f, -22.8583069f, -238.905853f, 284.666626f, -358.324f, 468.530273f);
            bool2x3 r0 = bool2x3(true, true, true, true, false, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            float a1 = (-439.037231f);
            float2x3 b1 = float2x3(-197.067688f, -367.59552f, -143.895081f, -387.8427f, -88.23752f, 439.360535f);
            bool2x3 r1 = bool2x3(true, true, true, true, true, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            float a2 = (-487.9847f);
            float2x3 b2 = float2x3(-393.415863f, 399.102478f, 365.36438f, -225.015259f, -305.5796f, -155.50473f);
            bool2x3 r2 = bool2x3(true, true, true, true, true, true);
            TestUtils.AreEqual(a2 <= b2, r2);

            float a3 = (-241.3457f);
            float2x3 b3 = float2x3(-22.9373779f, -113.94046f, 421.051025f, -493.358154f, -422.88028f, 27.0828857f);
            bool2x3 r3 = bool2x3(true, true, true, false, false, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_greater_equal_wide_wide()
        {
            float2x3 a0 = float2x3(143.641235f, -251.704163f, 118.576172f, 23.871582f, 84.63403f, -145.382233f);
            float2x3 b0 = float2x3(-409.271027f, -84.91385f, 509.1283f, -61.13452f, 139.217224f, -30.2294312f);
            bool2x3 r0 = bool2x3(true, false, false, true, false, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            float2x3 a1 = float2x3(-234.447327f, 90.46185f, 203.555847f, 370.9796f, -64.08972f, -140.503021f);
            float2x3 b1 = float2x3(210.736267f, 27.0149536f, 467.682922f, -206.05484f, 109.552368f, -413.970337f);
            bool2x3 r1 = bool2x3(false, true, false, true, false, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            float2x3 a2 = float2x3(-61.64731f, 463.918945f, -81.43878f, -56.36319f, 39.7544556f, -389.112549f);
            float2x3 b2 = float2x3(95.38501f, -493.097656f, 330.596924f, 106.934875f, -316.19577f, 206.490479f);
            bool2x3 r2 = bool2x3(false, true, false, false, true, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            float2x3 a3 = float2x3(117.347229f, -460.3187f, -209.221191f, -223.7843f, -36.6575928f, 488.5995f);
            float2x3 b3 = float2x3(114.226807f, 54.4406128f, -242.842743f, 240.4956f, 151.109375f, 165.143127f);
            bool2x3 r3 = bool2x3(true, false, true, false, false, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_greater_equal_wide_scalar()
        {
            float2x3 a0 = float2x3(-355.36084f, 304.301453f, 385.12854f, -263.954834f, -435.806427f, 126.500793f);
            float b0 = (-139.19751f);
            bool2x3 r0 = bool2x3(false, true, true, false, false, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            float2x3 a1 = float2x3(77.0108f, -212.650085f, -413.1958f, -11.076355f, -457.0079f, -123.012939f);
            float b1 = (-226.753937f);
            bool2x3 r1 = bool2x3(true, true, false, true, false, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            float2x3 a2 = float2x3(280.998047f, 383.0702f, 173.831116f, -168.515747f, -286.820068f, 404.740967f);
            float b2 = (-112.265076f);
            bool2x3 r2 = bool2x3(true, true, true, false, false, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            float2x3 a3 = float2x3(59.7572632f, -264.706f, -13.230011f, -202.237823f, 64.6931152f, -182.857544f);
            float b3 = (150.140442f);
            bool2x3 r3 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_greater_equal_scalar_wide()
        {
            float a0 = (-246.073273f);
            float2x3 b0 = float2x3(142.15625f, -19.2986145f, -151.986877f, 330.020874f, -224.80011f, 451.5999f);
            bool2x3 r0 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            float a1 = (-435.9818f);
            float2x3 b1 = float2x3(405.881836f, -324.020142f, 300.8548f, -341.652924f, 349.348328f, -342.970947f);
            bool2x3 r1 = bool2x3(false, false, false, false, false, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            float a2 = (397.824646f);
            float2x3 b2 = float2x3(363.170837f, -141.004517f, -304.1397f, 317.879517f, -371.1032f, -166.7135f);
            bool2x3 r2 = bool2x3(true, true, true, true, true, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            float a3 = (191.643372f);
            float2x3 b3 = float2x3(-274.388062f, 33.1248169f, -54.8842163f, 442.023254f, 161.054626f, -191.782715f);
            bool2x3 r3 = bool2x3(true, true, true, false, true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_add_wide_wide()
        {
            float2x3 a0 = float2x3(-404.27536f, -214.93515f, -164.2731f, 338.477173f, 302.848816f, -330.633f);
            float2x3 b0 = float2x3(433.900269f, 359.72052f, 420.5044f, -416.3719f, -163.213684f, -35.6521f);
            float2x3 r0 = float2x3(29.6249084f, 144.78537f, 256.2313f, -77.8947144f, 139.635132f, -366.2851f);
            TestUtils.AreEqual(a0 + b0, r0);

            float2x3 a1 = float2x3(-21.2443542f, 157.130432f, 32.4448242f, -333.966125f, -488.6353f, 484.605347f);
            float2x3 b1 = float2x3(260.761f, -20.1174622f, 156.770142f, 315.0406f, -110.87442f, -373.966431f);
            float2x3 r1 = float2x3(239.516632f, 137.01297f, 189.214966f, -18.9255371f, -599.509766f, 110.638916f);
            TestUtils.AreEqual(a1 + b1, r1);

            float2x3 a2 = float2x3(-143.616638f, -246.090881f, -133.722687f, 280.921021f, -197.236908f, 72.3357544f);
            float2x3 b2 = float2x3(12.482605f, 97.39429f, -149.583466f, -463.5646f, -332.266174f, 384.891052f);
            float2x3 r2 = float2x3(-131.134033f, -148.6966f, -283.306152f, -182.643585f, -529.503052f, 457.2268f);
            TestUtils.AreEqual(a2 + b2, r2);

            float2x3 a3 = float2x3(408.859131f, 362.2229f, -238.820435f, -305.657684f, 3.2989502f, -434.634155f);
            float2x3 b3 = float2x3(-47.640564f, 231.062012f, -383.314941f, -107.283905f, 367.018616f, 304.003784f);
            float2x3 r3 = float2x3(361.218567f, 593.2849f, -622.1354f, -412.9416f, 370.317566f, -130.630371f);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_add_wide_scalar()
        {
            float2x3 a0 = float2x3(-323.429443f, 324.634583f, -277.883453f, -472.86264f, -459.056519f, 144.1059f);
            float b0 = (-311.2669f);
            float2x3 r0 = float2x3(-634.69635f, 13.3676758f, -589.1504f, -784.1295f, -770.3234f, -167.161011f);
            TestUtils.AreEqual(a0 + b0, r0);

            float2x3 a1 = float2x3(-334.474182f, -388.344f, 303.384583f, -7.709381f, -29.01889f, 45.1229858f);
            float b1 = (149.114319f);
            float2x3 r1 = float2x3(-185.359863f, -239.229675f, 452.4989f, 141.404938f, 120.095428f, 194.2373f);
            TestUtils.AreEqual(a1 + b1, r1);

            float2x3 a2 = float2x3(101.801208f, 279.443237f, -191.047485f, 118.387756f, 11.0637817f, -38.5522461f);
            float b2 = (-410.416f);
            float2x3 r2 = float2x3(-308.614777f, -130.972748f, -601.4635f, -292.028229f, -399.3522f, -448.968231f);
            TestUtils.AreEqual(a2 + b2, r2);

            float2x3 a3 = float2x3(410.894958f, -218.204224f, -374.088928f, -344.117737f, -368.177551f, 94.00256f);
            float b3 = (-14.2527771f);
            float2x3 r3 = float2x3(396.642181f, -232.457f, -388.3417f, -358.3705f, -382.430328f, 79.74979f);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_add_scalar_wide()
        {
            float a0 = (190.831238f);
            float2x3 b0 = float2x3(411.157166f, -70.76166f, -404.5351f, 238.02887f, 442.2439f, 151.431946f);
            float2x3 r0 = float2x3(601.9884f, 120.06958f, -213.703857f, 428.8601f, 633.075134f, 342.263184f);
            TestUtils.AreEqual(a0 + b0, r0);

            float a1 = (-447.093872f);
            float2x3 b1 = float2x3(-299.924774f, 477.432739f, -292.327271f, 59.3156128f, -378.93335f, -228.865875f);
            float2x3 r1 = float2x3(-747.0187f, 30.3388672f, -739.421143f, -387.778259f, -826.0272f, -675.9597f);
            TestUtils.AreEqual(a1 + b1, r1);

            float a2 = (-309.567322f);
            float2x3 b2 = float2x3(-78.70996f, -93.9873047f, -173.508575f, 342.767578f, -172.601349f, 76.3781738f);
            float2x3 r2 = float2x3(-388.277283f, -403.554626f, -483.0759f, 33.2002563f, -482.168671f, -233.189148f);
            TestUtils.AreEqual(a2 + b2, r2);

            float a3 = (502.4878f);
            float2x3 b3 = float2x3(-262.746582f, 353.173767f, 288.0697f, 433.607117f, 397.094482f, -309.569122f);
            float2x3 r3 = float2x3(239.741211f, 855.66156f, 790.5575f, 936.0949f, 899.5823f, 192.918671f);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_sub_wide_wide()
        {
            float2x3 a0 = float2x3(379.052246f, -16.164032f, 107.1604f, 30.0645752f, -428.4387f, 245.627747f);
            float2x3 b0 = float2x3(236.683167f, 20.1707764f, 111.480408f, -484.67984f, -447.708679f, 18.19458f);
            float2x3 r0 = float2x3(142.36908f, -36.33481f, -4.32000732f, 514.7444f, 19.269989f, 227.433167f);
            TestUtils.AreEqual(a0 - b0, r0);

            float2x3 a1 = float2x3(179.604187f, 505.3778f, 317.7188f, -198.473389f, 166.69458f, -379.0271f);
            float2x3 b1 = float2x3(-296.147644f, 367.636f, -267.455017f, -71.1860657f, -248.3346f, -138.191071f);
            float2x3 r1 = float2x3(475.751831f, 137.741821f, 585.1738f, -127.287323f, 415.029175f, -240.836029f);
            TestUtils.AreEqual(a1 - b1, r1);

            float2x3 a2 = float2x3(332.89624f, 159.256226f, -405.395935f, -44.4034729f, -97.96677f, 427.353271f);
            float2x3 b2 = float2x3(-474.848175f, -275.859375f, -172.86972f, -72.15997f, -161.5686f, 498.741577f);
            float2x3 r2 = float2x3(807.7444f, 435.1156f, -232.526215f, 27.7565f, 63.6018372f, -71.3883057f);
            TestUtils.AreEqual(a2 - b2, r2);

            float2x3 a3 = float2x3(64.90527f, 448.51593f, 344.09552f, -299.151367f, 465.763245f, 402.467957f);
            float2x3 b3 = float2x3(-123.512634f, -329.4557f, -154.944733f, -481.698822f, 74.2055054f, -267.317078f);
            float2x3 r3 = float2x3(188.417908f, 777.9716f, 499.040253f, 182.547455f, 391.557739f, 669.785034f);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_sub_wide_scalar()
        {
            float2x3 a0 = float2x3(102.569641f, -199.248688f, 218.154358f, 72.79639f, -139.426361f, 13.45929f);
            float b0 = (-504.2776f);
            float2x3 r0 = float2x3(606.8472f, 305.0289f, 722.431946f, 577.074f, 364.851227f, 517.7369f);
            TestUtils.AreEqual(a0 - b0, r0);

            float2x3 a1 = float2x3(-31.2592163f, -375.997253f, 484.570679f, 118.86438f, -126.182953f, -323.067322f);
            float b1 = (-273.2179f);
            float2x3 r1 = float2x3(241.958679f, -102.779358f, 757.7886f, 392.082275f, 147.034943f, -49.8494263f);
            TestUtils.AreEqual(a1 - b1, r1);

            float2x3 a2 = float2x3(128.219543f, -125.91571f, -39.709137f, -388.437134f, 29.6282349f, 164.511963f);
            float b2 = (-59.64612f);
            float2x3 r2 = float2x3(187.865662f, -66.26959f, 19.9369812f, -328.791016f, 89.27435f, 224.158081f);
            TestUtils.AreEqual(a2 - b2, r2);

            float2x3 a3 = float2x3(-245.126526f, -168.449432f, -283.301147f, -492.369232f, 470.4295f, -384.2162f);
            float b3 = (-293.853027f);
            float2x3 r3 = float2x3(48.7265f, 125.403595f, 10.55188f, -198.5162f, 764.282532f, -90.36316f);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_sub_scalar_wide()
        {
            float a0 = (385.512268f);
            float2x3 b0 = float2x3(78.82605f, -43.92514f, -401.835358f, -336.146667f, 25.8710938f, 188.92981f);
            float2x3 r0 = float2x3(306.686218f, 429.4374f, 787.347656f, 721.658936f, 359.641174f, 196.582458f);
            TestUtils.AreEqual(a0 - b0, r0);

            float a1 = (132.735535f);
            float2x3 b1 = float2x3(-391.6434f, -131.123383f, 43.8323364f, -278.0896f, -440.455048f, -375.452454f);
            float2x3 r1 = float2x3(524.3789f, 263.858917f, 88.9032f, 410.825134f, 573.190552f, 508.188f);
            TestUtils.AreEqual(a1 - b1, r1);

            float a2 = (190.743652f);
            float2x3 b2 = float2x3(364.129639f, 349.778564f, 492.411f, 122.080627f, -191.474121f, 114.199036f);
            float2x3 r2 = float2x3(-173.385986f, -159.034912f, -301.667358f, 68.6630249f, 382.217773f, 76.54462f);
            TestUtils.AreEqual(a2 - b2, r2);

            float a3 = (79.3216553f);
            float2x3 b3 = float2x3(105.470459f, -447.612244f, -490.964935f, 245.041565f, 256.2849f, -149.756348f);
            float2x3 r3 = float2x3(-26.1488037f, 526.9339f, 570.2866f, -165.71991f, -176.963257f, 229.078f);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_mul_wide_wide()
        {
            float2x3 a0 = float2x3(48.7297974f, 263.5946f, -378.487183f, 494.618347f, -185.095612f, 423.893433f);
            float2x3 b0 = float2x3(351.026917f, 422.9179f, -490.6174f, 81.40454f, -357.226563f, 378.994568f);
            float2x3 r0 = float2x3(17105.47f, 111478.875f, 185692.391f, 40264.18f, 66121.07f, 160653.313f);
            TestUtils.AreEqual(a0 * b0, r0);

            float2x3 a1 = float2x3(19.8618164f, -439.218475f, 200.14624f, -178.356964f, -285.078064f, 56.74951f);
            float2x3 b1 = float2x3(318.321167f, 208.17157f, 345.885681f, -149.02887f, 293.0559f, 423.94812f);
            float2x3 r1 = float2x3(6322.43652f, -91432.8f, 69227.72f, 26580.3359f, -83543.81f, 24058.85f);
            TestUtils.AreEqual(a1 * b1, r1);

            float2x3 a2 = float2x3(42.60443f, 472.961182f, -264.8566f, -278.0382f, 88.71771f, 171.394775f);
            float2x3 b2 = float2x3(53.42926f, -257.1869f, 87.37598f, 84.21008f, -59.68576f, -144.9017f);
            float2x3 r2 = float2x3(2276.32324f, -121639.414f, -23142.1035f, -23413.6211f, -5295.184f, -24835.3945f);
            TestUtils.AreEqual(a2 * b2, r2);

            float2x3 a3 = float2x3(366.3731f, -253.821564f, -217.548523f, 431.067322f, -159.4126f, -162.980865f);
            float2x3 b3 = float2x3(436.8335f, -444.172668f, 292.1997f, -29.1942139f, 80.04816f, 396.248f);
            float2x3 r3 = float2x3(160044.047f, 112740.6f, -63567.6133f, -12584.6719f, -12760.6846f, -64580.84f);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_mul_wide_scalar()
        {
            float2x3 a0 = float2x3(-387.480865f, -48.62552f, -100.415588f, -161.453522f, -428.578979f, -198.319f);
            float b0 = (367.408752f);
            float2x3 r0 = float2x3(-142363.859f, -17865.4414f, -36893.5664f, -59319.4375f, -157463.672f, -72864.13f);
            TestUtils.AreEqual(a0 * b0, r0);

            float2x3 a1 = float2x3(413.477356f, -65.20349f, 18.9765015f, 89.78735f, -356.197571f, 13.6069336f);
            float b1 = (-216.104736f);
            float2x3 r1 = float2x3(-89354.4141f, 14090.7832f, -4100.91162f, -19403.4727f, 76975.9844f, -2940.52271f);
            TestUtils.AreEqual(a1 * b1, r1);

            float2x3 a2 = float2x3(394.3037f, -362.6972f, 92.84253f, 344.986023f, -456.005219f, 283.081482f);
            float b2 = (-428.809479f);
            float2x3 r2 = float2x3(-169081.172f, 155528f, -39811.7578f, -147933.281f, 195539.359f, -121388.023f);
            TestUtils.AreEqual(a2 * b2, r2);

            float2x3 a3 = float2x3(-209.552551f, -8.434082f, 176.073975f, -365.27417f, 236.014709f, 423.7818f);
            float b3 = (-398.407166f);
            float2x3 r3 = float2x3(83487.2344f, 3360.19873f, -70149.13f, 145527.844f, -94029.95f, -168837.7f);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_mul_scalar_wide()
        {
            float a0 = (468.915955f);
            float2x3 b0 = float2x3(123.866638f, 490.9615f, -247.1626f, -176.9495f, 382.263855f, -398.549469f);
            float2x3 r0 = float2x3(58083.043f, 230219.672f, -115898.484f, -82974.44f, 179249.625f, -186886.2f);
            TestUtils.AreEqual(a0 * b0, r0);

            float a1 = (120.569336f);
            float2x3 b1 = float2x3(-263.275879f, 74.37671f, -309.856f, 404.927979f, -105.62616f, 243.92627f);
            float2x3 r1 = float2x3(-31742.998f, 8967.551f, -37359.13f, 48821.9f, -12735.2764f, 29410.03f);
            TestUtils.AreEqual(a1 * b1, r1);

            float a2 = (-291.964081f);
            float2x3 b2 = float2x3(-92.4649353f, -144.353f, -7.56222534f, -257.847656f, -215.880646f, -480.0216f);
            float2x3 r2 = float2x3(26996.44f, 42145.89f, 2207.89819f, 75282.26f, 63029.3945f, 140149.063f);
            TestUtils.AreEqual(a2 * b2, r2);

            float a3 = (-91.38034f);
            float2x3 b3 = float2x3(-9.730133f, 47.95282f, 6.174988f, 201.409363f, 502.8886f, 504.705566f);
            float2x3 r3 = float2x3(889.1429f, -4381.945f, -564.272461f, -18404.8555f, -45954.1328f, -46120.168f);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_div_wide_wide()
        {
            float2x3 a0 = float2x3(6.82073975f, -338.630859f, 497.60437f, -491.269928f, 173.454712f, -441.556519f);
            float2x3 b0 = float2x3(-352.736023f, 302.209717f, -489.095154f, -380.8916f, 289.646484f, -216.575256f);
            float2x3 r0 = float2x3(-0.0193366688f, -1.12051606f, -1.01739788f, 1.28978932f, 0.5988497f, 2.03881335f);
            TestUtils.AreEqual(a0 / b0, r0);

            float2x3 a1 = float2x3(321.0169f, -41.60199f, -40.212616f, -169.795868f, -179.339935f, -433.401184f);
            float2x3 b1 = float2x3(-289.151f, 198.978516f, -292.720581f, 9.058472f, -29.8904419f, 257.638977f);
            float2x3 r1 = float2x3(-1.110205f, -0.20907779f, 0.137375429f, -18.7444286f, 5.999909f, -1.68220353f);
            TestUtils.AreEqual(a1 / b1, r1);

            float2x3 a2 = float2x3(-425.297119f, 335.54364f, 455.9829f, -438.431244f, -475.071625f, 398.719849f);
            float2x3 b2 = float2x3(-340.1684f, 33.71222f, 281.611023f, -384.688171f, 457.441284f, 228.607361f);
            float2x3 r2 = float2x3(1.25025463f, 9.953176f, 1.61919415f, 1.13970554f, -1.0385412f, 1.74412513f);
            TestUtils.AreEqual(a2 / b2, r2);

            float2x3 a3 = float2x3(372.927673f, 31.9406128f, 472.518372f, -31.91278f, 381.816772f, 72.1203f);
            float2x3 b3 = float2x3(-300.276f, -168.690582f, -59.6442871f, 320.390625f, 0.8565674f, -483.937256f);
            float2x3 r3 = float2x3(-1.24194968f, -0.189344376f, -7.92227364f, -0.09960585f, 445.752167f, -0.149028212f);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_div_wide_scalar()
        {
            float2x3 a0 = float2x3(-179.145264f, 46.96112f, 127.572754f, 391.679626f, 461.327637f, 150.55542f);
            float b0 = (-93.36542f);
            float2x3 r0 = float2x3(1.918754f, -0.502981961f, -1.36638129f, -4.195125f, -4.94109774f, -1.61253941f);
            TestUtils.AreEqual(a0 / b0, r0);

            float2x3 a1 = float2x3(18.4229126f, 37.5003052f, 121.809082f, -22.5421448f, 398.16748f, -331.000366f);
            float b1 = (169.158569f);
            float2x3 r1 = float2x3(0.10890913f, 0.221687287f, 0.7200882f, -0.133260444f, 2.353812f, -1.9567461f);
            TestUtils.AreEqual(a1 / b1, r1);

            float2x3 a2 = float2x3(-498.451965f, -329.666962f, -191.8522f, -35.94284f, -369.294861f, -414.91745f);
            float b2 = (502.30603f);
            float2x3 r2 = float2x3(-0.9923273f, -0.656307f, -0.381942868f, -0.07155566f, -0.7351989f, -0.826025248f);
            TestUtils.AreEqual(a2 / b2, r2);

            float2x3 a3 = float2x3(94.42157f, 102.390625f, -167.4013f, -121.169037f, -99.98184f, 392.385437f);
            float b3 = (-20.6722717f);
            float2x3 r3 = float2x3(-4.567547f, -4.95304155f, 8.097867f, 5.86142826f, 4.83651924f, -18.981245f);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_div_scalar_wide()
        {
            float a0 = (451.844666f);
            float2x3 b0 = float2x3(-95.0651855f, 207.048767f, 502.384033f, 62.0412f, -110.84549f, -332.612732f);
            float2x3 r0 = float2x3(-4.75299835f, 2.18231034f, 0.899400949f, 7.28297758f, -4.076347f, -1.3584708f);
            TestUtils.AreEqual(a0 / b0, r0);

            float a1 = (224.279358f);
            float2x3 b1 = float2x3(-492.734528f, 435.0329f, 503.8188f, 291.349426f, 88.02417f, 328.702759f);
            float2x3 r1 = float2x3(-0.4551728f, 0.5155457f, 0.44515878f, 0.7697951f, 2.54792929f, 0.6823166f);
            TestUtils.AreEqual(a1 / b1, r1);

            float a2 = (50.01013f);
            float2x3 b2 = float2x3(-509.816162f, 158.94751f, 68.4343262f, -237.568573f, 32.9957275f, 169.610413f);
            float2x3 r2 = float2x3(-0.09809444f, 0.314633f, 0.730775535f, -0.2105082f, 1.5156548f, 0.294852972f);
            TestUtils.AreEqual(a2 / b2, r2);

            float a3 = (-389.980072f);
            float2x3 b3 = float2x3(-383.048676f, 42.4129028f, 3.11767578f, -432.5184f, 253.8139f, -448.56073f);
            float2x3 r3 = float2x3(1.01809537f, -9.194845f, -125.086792f, 0.901649654f, -1.53648031f, 0.869403064f);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_mod_wide_wide()
        {
            float2x3 a0 = float2x3(157.5586f, 504.938f, 73.00708f, -387.6087f, 278.5445f, 282.228149f);
            float2x3 b0 = float2x3(180.250183f, -41.4798279f, -308.673157f, -326.860046f, 411.588257f, 429.410583f);
            float2x3 r0 = float2x3(157.5586f, 7.18005371f, 73.00708f, -60.7486572f, 278.5445f, 282.228149f);
            TestUtils.AreEqual(a0 % b0, r0);

            float2x3 a1 = float2x3(57.0862427f, -63.974762f, -345.268982f, -380.7162f, 470.2804f, -480.307465f);
            float2x3 b1 = float2x3(471.1482f, 226.144348f, 423.907471f, -300.951752f, 67.24133f, -488.690979f);
            float2x3 r1 = float2x3(57.0862427f, -63.974762f, -345.268982f, -79.7644348f, 66.8324f, -480.307465f);
            TestUtils.AreEqual(a1 % b1, r1);

            float2x3 a2 = float2x3(65.2514648f, 503.1162f, 387.605835f, -281.181274f, 89.57654f, -216.285217f);
            float2x3 b2 = float2x3(-440.438141f, 508.5224f, -108.2384f, 93.46802f, -20.98877f, 301.875427f);
            float2x3 r2 = float2x3(65.2514648f, 503.1162f, 62.890625f, -0.7772217f, 5.62146f, -216.285217f);
            TestUtils.AreEqual(a2 % b2, r2);

            float2x3 a3 = float2x3(95.61566f, 327.346619f, -362.112946f, 124.853882f, 461.3974f, 352.7256f);
            float2x3 b3 = float2x3(142.5885f, 439.710449f, 61.1275635f, -37.5414734f, -345.72113f, -253.643555f);
            float2x3 r3 = float2x3(95.61566f, 327.346619f, -56.47513f, 12.2294617f, 115.67627f, 99.08203f);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_mod_wide_scalar()
        {
            float2x3 a0 = float2x3(42.07245f, 313.0503f, 111.52063f, 131.212036f, -460.440857f, -436.485046f);
            float b0 = (260.272583f);
            float2x3 r0 = float2x3(42.07245f, 52.77771f, 111.52063f, 131.212036f, -200.168274f, -176.212463f);
            TestUtils.AreEqual(a0 % b0, r0);

            float2x3 a1 = float2x3(-221.73172f, 24.1831055f, -238.9426f, 335.600952f, -240.832489f, -12.3947144f);
            float b1 = (-316.3909f);
            float2x3 r1 = float2x3(-221.73172f, 24.1831055f, -238.9426f, 19.2100525f, -240.832489f, -12.3947144f);
            TestUtils.AreEqual(a1 % b1, r1);

            float2x3 a2 = float2x3(-152.489655f, -240.0715f, -51.5551453f, 179.872742f, 15.7027588f, 179.9151f);
            float b2 = (-387.4286f);
            float2x3 r2 = float2x3(-152.489655f, -240.0715f, -51.5551453f, 179.872742f, 15.7027588f, 179.9151f);
            TestUtils.AreEqual(a2 % b2, r2);

            float2x3 a3 = float2x3(453.635f, 213.75293f, 143.580566f, 490.95636f, 426.8548f, -495.03064f);
            float b3 = (-76.82529f);
            float2x3 r3 = float2x3(69.5085754f, 60.102356f, 66.75528f, 30.0046387f, 42.728363f, -34.07892f);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_mod_scalar_wide()
        {
            float a0 = (-162.9458f);
            float2x3 b0 = float2x3(171.125732f, 159.207947f, 491.348083f, -136.5397f, 84.48755f, 414.3911f);
            float2x3 r0 = float2x3(-162.9458f, -3.737854f, -162.9458f, -26.4060974f, -78.45825f, -162.9458f);
            TestUtils.AreEqual(a0 % b0, r0);

            float a1 = (-85.03061f);
            float2x3 b1 = float2x3(161.989563f, -7.60800171f, -85.22388f, 160.841248f, -234.483124f, 114.877625f);
            float2x3 r1 = float2x3(-85.03061f, -1.34259033f, -85.03061f, -85.03061f, -85.03061f, -85.03061f);
            TestUtils.AreEqual(a1 % b1, r1);

            float a2 = (-40.5487061f);
            float2x3 b2 = float2x3(-85.7437439f, -235.708923f, -135.851166f, 391.487f, 240.695984f, -81.43179f);
            float2x3 r2 = float2x3(-40.5487061f, -40.5487061f, -40.5487061f, -40.5487061f, -40.5487061f, -40.5487061f);
            TestUtils.AreEqual(a2 % b2, r2);

            float a3 = (-398.1865f);
            float2x3 b3 = float2x3(-209.346069f, -431.59314f, 411.7469f, -119.326263f, -296.96582f, -319.028f);
            float2x3 r3 = float2x3(-188.840424f, -398.1865f, -398.1865f, -40.2077026f, -101.220673f, -79.15848f);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_plus()
        {
            float2x3 a0 = float2x3(150.599854f, -137.8551f, 439.0912f, 401.849243f, 401.823547f, -299.614624f);
            float2x3 r0 = float2x3(150.599854f, -137.8551f, 439.0912f, 401.849243f, 401.823547f, -299.614624f);
            TestUtils.AreEqual(+a0, r0);

            float2x3 a1 = float2x3(-364.624817f, -135.177917f, 188.590271f, -458.637817f, -176.78833f, 67.19397f);
            float2x3 r1 = float2x3(-364.624817f, -135.177917f, 188.590271f, -458.637817f, -176.78833f, 67.19397f);
            TestUtils.AreEqual(+a1, r1);

            float2x3 a2 = float2x3(-202.573944f, 466.917053f, 369.197021f, 453.9458f, 288.732178f, 27.9801025f);
            float2x3 r2 = float2x3(-202.573944f, 466.917053f, 369.197021f, 453.9458f, 288.732178f, 27.9801025f);
            TestUtils.AreEqual(+a2, r2);

            float2x3 a3 = float2x3(-277.2133f, -418.334534f, -85.52872f, 184.964111f, -113.681641f, -496.363739f);
            float2x3 r3 = float2x3(-277.2133f, -418.334534f, -85.52872f, 184.964111f, -113.681641f, -496.363739f);
            TestUtils.AreEqual(+a3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_neg()
        {
            float2x3 a0 = float2x3(-169.281158f, -377.0252f, 36.6141357f, -258.382446f, 469.914551f, 388.945984f);
            float2x3 r0 = float2x3(169.281158f, 377.0252f, -36.6141357f, 258.382446f, -469.914551f, -388.945984f);
            TestUtils.AreEqual(-a0, r0);

            float2x3 a1 = float2x3(350.969238f, 494.421631f, 201.18689f, -60.8139343f, 313.8802f, 381.035767f);
            float2x3 r1 = float2x3(-350.969238f, -494.421631f, -201.18689f, 60.8139343f, -313.8802f, -381.035767f);
            TestUtils.AreEqual(-a1, r1);

            float2x3 a2 = float2x3(327.1795f, 462.13623f, 448.669861f, 339.456848f, 93.50537f, 385.7409f);
            float2x3 r2 = float2x3(-327.1795f, -462.13623f, -448.669861f, -339.456848f, -93.50537f, -385.7409f);
            TestUtils.AreEqual(-a2, r2);

            float2x3 a3 = float2x3(-37.0343628f, -14.9801636f, -116.370148f, 258.546448f, 369.4939f, 292.990967f);
            float2x3 r3 = float2x3(37.0343628f, 14.9801636f, 116.370148f, -258.546448f, -369.4939f, -292.990967f);
            TestUtils.AreEqual(-a3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_prefix_inc()
        {
            float2x3 a0 = float2x3(86.58539f, 161.589783f, 443.929626f, -338.268433f, -34.5586548f, -368.567474f);
            float2x3 r0 = float2x3(87.58539f, 162.589783f, 444.929626f, -337.268433f, -33.5586548f, -367.567474f);
            TestUtils.AreEqual(++a0, r0);

            float2x3 a1 = float2x3(359.1416f, 157.233154f, 25.3619385f, -484.200439f, 346.040466f, 381.775635f);
            float2x3 r1 = float2x3(360.1416f, 158.233154f, 26.3619385f, -483.200439f, 347.040466f, 382.775635f);
            TestUtils.AreEqual(++a1, r1);

            float2x3 a2 = float2x3(244.663025f, -105.417908f, 218.376526f, 166.647827f, -153.756561f, 352.001953f);
            float2x3 r2 = float2x3(245.663025f, -104.417908f, 219.376526f, 167.647827f, -152.756561f, 353.001953f);
            TestUtils.AreEqual(++a2, r2);

            float2x3 a3 = float2x3(75.30719f, -484.351f, 49.86487f, -269.916f, -205.470337f, 375.4276f);
            float2x3 r3 = float2x3(76.30719f, -483.351f, 50.86487f, -268.916f, -204.470337f, 376.4276f);
            TestUtils.AreEqual(++a3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_postfix_inc()
        {
            float2x3 a0 = float2x3(-281.7821f, 215.342224f, 120.820862f, -325.353668f, -179.722931f, 44.56366f);
            float2x3 r0 = float2x3(-281.7821f, 215.342224f, 120.820862f, -325.353668f, -179.722931f, 44.56366f);
            TestUtils.AreEqual(a0++, r0);

            float2x3 a1 = float2x3(-375.17334f, 329.5243f, -341.1537f, -130.474335f, 277.307373f, -15.2096863f);
            float2x3 r1 = float2x3(-375.17334f, 329.5243f, -341.1537f, -130.474335f, 277.307373f, -15.2096863f);
            TestUtils.AreEqual(a1++, r1);

            float2x3 a2 = float2x3(-362.9092f, 20.4838257f, -132.573273f, -43.3430176f, 63.9730225f, 423.3778f);
            float2x3 r2 = float2x3(-362.9092f, 20.4838257f, -132.573273f, -43.3430176f, 63.9730225f, 423.3778f);
            TestUtils.AreEqual(a2++, r2);

            float2x3 a3 = float2x3(413.74353f, 121.25531f, -293.2835f, -121.773895f, 337.215637f, 64.4483643f);
            float2x3 r3 = float2x3(413.74353f, 121.25531f, -293.2835f, -121.773895f, 337.215637f, 64.4483643f);
            TestUtils.AreEqual(a3++, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_prefix_dec()
        {
            float2x3 a0 = float2x3(340.001831f, 496.070862f, 288.384216f, 183.694641f, -353.6148f, 398.281921f);
            float2x3 r0 = float2x3(339.001831f, 495.070862f, 287.384216f, 182.694641f, -354.6148f, 397.281921f);
            TestUtils.AreEqual(--a0, r0);

            float2x3 a1 = float2x3(-240.591583f, 276.588684f, 311.914368f, -305.8037f, -268.388153f, 349.170227f);
            float2x3 r1 = float2x3(-241.591583f, 275.588684f, 310.914368f, -306.8037f, -269.388153f, 348.170227f);
            TestUtils.AreEqual(--a1, r1);

            float2x3 a2 = float2x3(468.03656f, 429.558044f, -164.938538f, 278.540283f, -142.655212f, 96.54895f);
            float2x3 r2 = float2x3(467.03656f, 428.558044f, -165.938538f, 277.540283f, -143.655212f, 95.54895f);
            TestUtils.AreEqual(--a2, r2);

            float2x3 a3 = float2x3(-142.570221f, 225.875671f, -388.630585f, -455.2949f, -248.5845f, 384.1317f);
            float2x3 r3 = float2x3(-143.570221f, 224.875671f, -389.630585f, -456.2949f, -249.5845f, 383.1317f);
            TestUtils.AreEqual(--a3, r3);
        }

        [TestCompiler]
        public static void float2x3_operator_postfix_dec()
        {
            float2x3 a0 = float2x3(-148.111755f, 252.8498f, -106.1579f, 132.648621f, -370.723755f, 343.311157f);
            float2x3 r0 = float2x3(-148.111755f, 252.8498f, -106.1579f, 132.648621f, -370.723755f, 343.311157f);
            TestUtils.AreEqual(a0--, r0);

            float2x3 a1 = float2x3(-321.157837f, 330.9572f, 425.6258f, 269.754517f, -164.309845f, 234.149658f);
            float2x3 r1 = float2x3(-321.157837f, 330.9572f, 425.6258f, 269.754517f, -164.309845f, 234.149658f);
            TestUtils.AreEqual(a1--, r1);

            float2x3 a2 = float2x3(-320.725952f, -310.267639f, -298.127167f, 453.00238f, -453.877f, -134.770233f);
            float2x3 r2 = float2x3(-320.725952f, -310.267639f, -298.127167f, 453.00238f, -453.877f, -134.770233f);
            TestUtils.AreEqual(a2--, r2);

            float2x3 a3 = float2x3(416.1966f, -239.314911f, -492.061157f, 475.658264f, 56.15918f, 24.9328f);
            float2x3 r3 = float2x3(416.1966f, -239.314911f, -492.061157f, 475.658264f, 56.15918f, 24.9328f);
            TestUtils.AreEqual(a3--, r3);
        }


    }
}
