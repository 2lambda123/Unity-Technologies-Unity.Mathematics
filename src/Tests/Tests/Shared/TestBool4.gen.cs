//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using static Unity.Mathematics.math;
using Burst.Compiler.IL.Tests;

namespace Unity.Mathematics.Tests
{
    [TestFixture]
    public class TestBool4
    {
        [TestCompiler]
        public static void bool4_constructor()
        {
            bool4 a = new bool4(false, true, false, true);
            TestUtils.AreEqual(false, a.x);
            TestUtils.AreEqual(true, a.y);
            TestUtils.AreEqual(false, a.z);
            TestUtils.AreEqual(true, a.w);
        }

        [TestCompiler]
        public static void bool4_scalar_constructor()
        {
            bool4 a = new bool4(true);
            TestUtils.AreEqual(true, a.x);
            TestUtils.AreEqual(true, a.y);
            TestUtils.AreEqual(true, a.z);
            TestUtils.AreEqual(true, a.w);
        }

        [TestCompiler]
        public static void bool4_static_constructor()
        {
            bool4 a = bool4(false, true, false, true);
            TestUtils.AreEqual(false, a.x);
            TestUtils.AreEqual(true, a.y);
            TestUtils.AreEqual(false, a.z);
            TestUtils.AreEqual(true, a.w);
        }

        [TestCompiler]
        public static void bool4_static_scalar_constructor()
        {
            bool4 a = bool4(true);
            TestUtils.AreEqual(true, a.x);
            TestUtils.AreEqual(true, a.y);
            TestUtils.AreEqual(true, a.z);
            TestUtils.AreEqual(true, a.w);
        }

        [TestCompiler]
        public static void bool4_operator_equal_wide_wide()
        {
            bool4 a0 = bool4(true, false, true, false);
            bool4 b0 = bool4(true, false, false, false);
            bool4 r0 = bool4(true, true, false, true);
            TestUtils.AreEqual(r0, a0 == b0);

            bool4 a1 = bool4(false, true, false, false);
            bool4 b1 = bool4(true, false, false, true);
            bool4 r1 = bool4(false, false, true, false);
            TestUtils.AreEqual(r1, a1 == b1);

            bool4 a2 = bool4(true, false, true, false);
            bool4 b2 = bool4(false, false, false, false);
            bool4 r2 = bool4(false, true, false, true);
            TestUtils.AreEqual(r2, a2 == b2);

            bool4 a3 = bool4(true, true, false, true);
            bool4 b3 = bool4(true, false, false, false);
            bool4 r3 = bool4(true, false, true, false);
            TestUtils.AreEqual(r3, a3 == b3);
        }

        [TestCompiler]
        public static void bool4_operator_equal_wide_scalar()
        {
            bool4 a0 = bool4(false, true, false, false);
            bool b0 = (true);
            bool4 r0 = bool4(false, true, false, false);
            TestUtils.AreEqual(r0, a0 == b0);

            bool4 a1 = bool4(false, true, false, false);
            bool b1 = (false);
            bool4 r1 = bool4(true, false, true, true);
            TestUtils.AreEqual(r1, a1 == b1);

            bool4 a2 = bool4(false, true, false, true);
            bool b2 = (true);
            bool4 r2 = bool4(false, true, false, true);
            TestUtils.AreEqual(r2, a2 == b2);

            bool4 a3 = bool4(false, false, false, false);
            bool b3 = (true);
            bool4 r3 = bool4(false, false, false, false);
            TestUtils.AreEqual(r3, a3 == b3);
        }

        [TestCompiler]
        public static void bool4_operator_equal_scalar_wide()
        {
            bool a0 = (false);
            bool4 b0 = bool4(true, false, true, false);
            bool4 r0 = bool4(false, true, false, true);
            TestUtils.AreEqual(r0, a0 == b0);

            bool a1 = (false);
            bool4 b1 = bool4(true, false, false, true);
            bool4 r1 = bool4(false, true, true, false);
            TestUtils.AreEqual(r1, a1 == b1);

            bool a2 = (false);
            bool4 b2 = bool4(true, true, false, true);
            bool4 r2 = bool4(false, false, true, false);
            TestUtils.AreEqual(r2, a2 == b2);

            bool a3 = (false);
            bool4 b3 = bool4(true, true, true, false);
            bool4 r3 = bool4(false, false, false, true);
            TestUtils.AreEqual(r3, a3 == b3);
        }

        [TestCompiler]
        public static void bool4_operator_not_equal_wide_wide()
        {
            bool4 a0 = bool4(true, true, true, false);
            bool4 b0 = bool4(true, false, false, false);
            bool4 r0 = bool4(false, true, true, false);
            TestUtils.AreEqual(r0, a0 != b0);

            bool4 a1 = bool4(false, true, false, false);
            bool4 b1 = bool4(true, false, false, false);
            bool4 r1 = bool4(true, true, false, false);
            TestUtils.AreEqual(r1, a1 != b1);

            bool4 a2 = bool4(false, false, true, true);
            bool4 b2 = bool4(false, true, true, true);
            bool4 r2 = bool4(false, true, false, false);
            TestUtils.AreEqual(r2, a2 != b2);

            bool4 a3 = bool4(true, true, true, true);
            bool4 b3 = bool4(false, false, true, true);
            bool4 r3 = bool4(true, true, false, false);
            TestUtils.AreEqual(r3, a3 != b3);
        }

        [TestCompiler]
        public static void bool4_operator_not_equal_wide_scalar()
        {
            bool4 a0 = bool4(false, true, false, true);
            bool b0 = (false);
            bool4 r0 = bool4(false, true, false, true);
            TestUtils.AreEqual(r0, a0 != b0);

            bool4 a1 = bool4(true, false, false, false);
            bool b1 = (false);
            bool4 r1 = bool4(true, false, false, false);
            TestUtils.AreEqual(r1, a1 != b1);

            bool4 a2 = bool4(false, false, false, true);
            bool b2 = (false);
            bool4 r2 = bool4(false, false, false, true);
            TestUtils.AreEqual(r2, a2 != b2);

            bool4 a3 = bool4(false, false, false, true);
            bool b3 = (false);
            bool4 r3 = bool4(false, false, false, true);
            TestUtils.AreEqual(r3, a3 != b3);
        }

        [TestCompiler]
        public static void bool4_operator_not_equal_scalar_wide()
        {
            bool a0 = (true);
            bool4 b0 = bool4(false, false, true, false);
            bool4 r0 = bool4(true, true, false, true);
            TestUtils.AreEqual(r0, a0 != b0);

            bool a1 = (false);
            bool4 b1 = bool4(false, true, true, true);
            bool4 r1 = bool4(false, true, true, true);
            TestUtils.AreEqual(r1, a1 != b1);

            bool a2 = (false);
            bool4 b2 = bool4(false, false, false, false);
            bool4 r2 = bool4(false, false, false, false);
            TestUtils.AreEqual(r2, a2 != b2);

            bool a3 = (true);
            bool4 b3 = bool4(false, false, true, false);
            bool4 r3 = bool4(true, true, false, true);
            TestUtils.AreEqual(r3, a3 != b3);
        }

        [TestCompiler]
        public static void bool4_operator_bitwise_and_wide_wide()
        {
            bool4 a0 = bool4(false, false, true, true);
            bool4 b0 = bool4(false, false, true, false);
            bool4 r0 = bool4(false, false, true, false);
            TestUtils.AreEqual(r0, a0 & b0);

            bool4 a1 = bool4(false, false, true, true);
            bool4 b1 = bool4(true, true, false, false);
            bool4 r1 = bool4(false, false, false, false);
            TestUtils.AreEqual(r1, a1 & b1);

            bool4 a2 = bool4(true, false, true, true);
            bool4 b2 = bool4(true, true, false, false);
            bool4 r2 = bool4(true, false, false, false);
            TestUtils.AreEqual(r2, a2 & b2);

            bool4 a3 = bool4(true, true, false, false);
            bool4 b3 = bool4(false, false, true, false);
            bool4 r3 = bool4(false, false, false, false);
            TestUtils.AreEqual(r3, a3 & b3);
        }

        [TestCompiler]
        public static void bool4_operator_bitwise_and_wide_scalar()
        {
            bool4 a0 = bool4(true, false, false, true);
            bool b0 = (true);
            bool4 r0 = bool4(true, false, false, true);
            TestUtils.AreEqual(r0, a0 & b0);

            bool4 a1 = bool4(true, false, false, false);
            bool b1 = (false);
            bool4 r1 = bool4(false, false, false, false);
            TestUtils.AreEqual(r1, a1 & b1);

            bool4 a2 = bool4(false, true, true, false);
            bool b2 = (true);
            bool4 r2 = bool4(false, true, true, false);
            TestUtils.AreEqual(r2, a2 & b2);

            bool4 a3 = bool4(false, true, true, false);
            bool b3 = (true);
            bool4 r3 = bool4(false, true, true, false);
            TestUtils.AreEqual(r3, a3 & b3);
        }

        [TestCompiler]
        public static void bool4_operator_bitwise_and_scalar_wide()
        {
            bool a0 = (false);
            bool4 b0 = bool4(false, false, true, true);
            bool4 r0 = bool4(false, false, false, false);
            TestUtils.AreEqual(r0, a0 & b0);

            bool a1 = (true);
            bool4 b1 = bool4(false, true, false, false);
            bool4 r1 = bool4(false, true, false, false);
            TestUtils.AreEqual(r1, a1 & b1);

            bool a2 = (false);
            bool4 b2 = bool4(true, false, false, false);
            bool4 r2 = bool4(false, false, false, false);
            TestUtils.AreEqual(r2, a2 & b2);

            bool a3 = (true);
            bool4 b3 = bool4(true, true, true, false);
            bool4 r3 = bool4(true, true, true, false);
            TestUtils.AreEqual(r3, a3 & b3);
        }

        [TestCompiler]
        public static void bool4_operator_bitwise_or_wide_wide()
        {
            bool4 a0 = bool4(true, true, true, false);
            bool4 b0 = bool4(false, false, false, false);
            bool4 r0 = bool4(true, true, true, false);
            TestUtils.AreEqual(r0, a0 | b0);

            bool4 a1 = bool4(true, false, true, true);
            bool4 b1 = bool4(true, true, true, false);
            bool4 r1 = bool4(true, true, true, true);
            TestUtils.AreEqual(r1, a1 | b1);

            bool4 a2 = bool4(false, true, true, true);
            bool4 b2 = bool4(false, true, false, false);
            bool4 r2 = bool4(false, true, true, true);
            TestUtils.AreEqual(r2, a2 | b2);

            bool4 a3 = bool4(true, true, true, false);
            bool4 b3 = bool4(true, true, true, true);
            bool4 r3 = bool4(true, true, true, true);
            TestUtils.AreEqual(r3, a3 | b3);
        }

        [TestCompiler]
        public static void bool4_operator_bitwise_or_wide_scalar()
        {
            bool4 a0 = bool4(true, true, false, true);
            bool b0 = (true);
            bool4 r0 = bool4(true, true, true, true);
            TestUtils.AreEqual(r0, a0 | b0);

            bool4 a1 = bool4(true, true, false, true);
            bool b1 = (true);
            bool4 r1 = bool4(true, true, true, true);
            TestUtils.AreEqual(r1, a1 | b1);

            bool4 a2 = bool4(false, true, false, false);
            bool b2 = (false);
            bool4 r2 = bool4(false, true, false, false);
            TestUtils.AreEqual(r2, a2 | b2);

            bool4 a3 = bool4(true, true, true, true);
            bool b3 = (false);
            bool4 r3 = bool4(true, true, true, true);
            TestUtils.AreEqual(r3, a3 | b3);
        }

        [TestCompiler]
        public static void bool4_operator_bitwise_or_scalar_wide()
        {
            bool a0 = (true);
            bool4 b0 = bool4(true, true, false, false);
            bool4 r0 = bool4(true, true, true, true);
            TestUtils.AreEqual(r0, a0 | b0);

            bool a1 = (true);
            bool4 b1 = bool4(true, true, false, false);
            bool4 r1 = bool4(true, true, true, true);
            TestUtils.AreEqual(r1, a1 | b1);

            bool a2 = (true);
            bool4 b2 = bool4(true, false, true, true);
            bool4 r2 = bool4(true, true, true, true);
            TestUtils.AreEqual(r2, a2 | b2);

            bool a3 = (false);
            bool4 b3 = bool4(false, false, false, true);
            bool4 r3 = bool4(false, false, false, true);
            TestUtils.AreEqual(r3, a3 | b3);
        }

        [TestCompiler]
        public static void bool4_operator_bitwise_xor_wide_wide()
        {
            bool4 a0 = bool4(true, false, false, true);
            bool4 b0 = bool4(true, true, false, true);
            bool4 r0 = bool4(false, true, false, false);
            TestUtils.AreEqual(r0, a0 ^ b0);

            bool4 a1 = bool4(false, false, false, true);
            bool4 b1 = bool4(false, true, false, true);
            bool4 r1 = bool4(false, true, false, false);
            TestUtils.AreEqual(r1, a1 ^ b1);

            bool4 a2 = bool4(false, false, true, true);
            bool4 b2 = bool4(false, false, false, true);
            bool4 r2 = bool4(false, false, true, false);
            TestUtils.AreEqual(r2, a2 ^ b2);

            bool4 a3 = bool4(false, false, true, false);
            bool4 b3 = bool4(false, false, true, true);
            bool4 r3 = bool4(false, false, false, true);
            TestUtils.AreEqual(r3, a3 ^ b3);
        }

        [TestCompiler]
        public static void bool4_operator_bitwise_xor_wide_scalar()
        {
            bool4 a0 = bool4(false, false, true, true);
            bool b0 = (false);
            bool4 r0 = bool4(false, false, true, true);
            TestUtils.AreEqual(r0, a0 ^ b0);

            bool4 a1 = bool4(false, false, false, false);
            bool b1 = (false);
            bool4 r1 = bool4(false, false, false, false);
            TestUtils.AreEqual(r1, a1 ^ b1);

            bool4 a2 = bool4(false, true, false, true);
            bool b2 = (false);
            bool4 r2 = bool4(false, true, false, true);
            TestUtils.AreEqual(r2, a2 ^ b2);

            bool4 a3 = bool4(true, true, false, true);
            bool b3 = (true);
            bool4 r3 = bool4(false, false, true, false);
            TestUtils.AreEqual(r3, a3 ^ b3);
        }

        [TestCompiler]
        public static void bool4_operator_bitwise_xor_scalar_wide()
        {
            bool a0 = (true);
            bool4 b0 = bool4(true, false, true, true);
            bool4 r0 = bool4(false, true, false, false);
            TestUtils.AreEqual(r0, a0 ^ b0);

            bool a1 = (false);
            bool4 b1 = bool4(true, true, false, false);
            bool4 r1 = bool4(true, true, false, false);
            TestUtils.AreEqual(r1, a1 ^ b1);

            bool a2 = (true);
            bool4 b2 = bool4(true, false, false, true);
            bool4 r2 = bool4(false, true, true, false);
            TestUtils.AreEqual(r2, a2 ^ b2);

            bool a3 = (false);
            bool4 b3 = bool4(true, true, false, true);
            bool4 r3 = bool4(true, true, false, true);
            TestUtils.AreEqual(r3, a3 ^ b3);
        }

        [TestCompiler]
        public static void bool4_operator_logical_not()
        {
            bool4 a0 = bool4(true, true, false, false);
            bool4 r0 = bool4(false, false, true, true);
            TestUtils.AreEqual(r0, !a0);

            bool4 a1 = bool4(true, true, false, true);
            bool4 r1 = bool4(false, false, true, false);
            TestUtils.AreEqual(r1, !a1);

            bool4 a2 = bool4(false, false, false, true);
            bool4 r2 = bool4(true, true, true, false);
            TestUtils.AreEqual(r2, !a2);

            bool4 a3 = bool4(true, false, true, true);
            bool4 r3 = bool4(false, true, false, false);
            TestUtils.AreEqual(r3, !a3);
        }

        [TestCompiler]
        public static void bool4_swizzle_getters()
        {
            var v1 = new bool4(false, true, false, true);
            var v2 = new bool4(true, false, true, false);

            TestUtils.AreEqual(bool4(false, false, false, false), v1.rrrr);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.rrrg);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.rrrb);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.rrra);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.rrgr);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.rrgg);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.rrgb);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.rrga);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.rrbr);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.rrbg);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.rrbb);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.rrba);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.rrar);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.rrag);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.rrab);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.rraa);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.rgrr);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.rgrg);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.rgrb);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.rgra);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.rggr);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.rggg);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.rggb);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.rgga);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.rgbr);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.rgbg);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.rgbb);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.rgba);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.rgar);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.rgag);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.rgab);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.rgaa);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.rbrr);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.rbrg);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.rbrb);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.rbra);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.rbgr);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.rbgg);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.rbgb);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.rbga);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.rbbr);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.rbbg);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.rbbb);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.rbba);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.rbar);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.rbag);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.rbab);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.rbaa);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.rarr);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.rarg);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.rarb);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.rara);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.ragr);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.ragg);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.ragb);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.raga);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.rabr);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.rabg);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.rabb);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.raba);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.raar);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.raag);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.raab);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.raaa);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.grrr);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.grrg);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.grrb);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.grra);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.grgr);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.grgg);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.grgb);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.grga);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.grbr);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.grbg);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.grbb);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.grba);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.grar);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.grag);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.grab);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.graa);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.ggrr);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.ggrg);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.ggrb);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.ggra);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.gggr);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.gggg);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.gggb);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.ggga);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.ggbr);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.ggbg);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.ggbb);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.ggba);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.ggar);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.ggag);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.ggab);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.ggaa);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.gbrr);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.gbrg);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.gbrb);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.gbra);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.gbgr);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.gbgg);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.gbgb);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.gbga);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.gbbr);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.gbbg);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.gbbb);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.gbba);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.gbar);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.gbag);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.gbab);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.gbaa);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.garr);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.garg);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.garb);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.gara);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.gagr);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.gagg);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.gagb);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.gaga);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.gabr);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.gabg);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.gabb);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.gaba);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.gaar);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.gaag);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.gaab);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.gaaa);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.brrr);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.brrg);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.brrb);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.brra);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.brgr);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.brgg);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.brgb);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.brga);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.brbr);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.brbg);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.brbb);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.brba);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.brar);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.brag);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.brab);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.braa);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.bgrr);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.bgrg);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.bgrb);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.bgra);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.bggr);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.bggg);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.bggb);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.bgga);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.bgbr);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.bgbg);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.bgbb);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.bgba);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.bgar);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.bgag);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.bgab);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.bgaa);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.bbrr);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.bbrg);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.bbrb);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.bbra);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.bbgr);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.bbgg);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.bbgb);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.bbga);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.bbbr);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.bbbg);
            TestUtils.AreEqual(bool4(false, false, false, false), v1.bbbb);
            TestUtils.AreEqual(bool4(false, false, false, true), v1.bbba);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.bbar);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.bbag);
            TestUtils.AreEqual(bool4(false, false, true, false), v1.bbab);
            TestUtils.AreEqual(bool4(false, false, true, true), v1.bbaa);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.barr);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.barg);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.barb);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.bara);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.bagr);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.bagg);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.bagb);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.baga);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.babr);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.babg);
            TestUtils.AreEqual(bool4(false, true, false, false), v1.babb);
            TestUtils.AreEqual(bool4(false, true, false, true), v1.baba);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.baar);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.baag);
            TestUtils.AreEqual(bool4(false, true, true, false), v1.baab);
            TestUtils.AreEqual(bool4(false, true, true, true), v1.baaa);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.arrr);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.arrg);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.arrb);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.arra);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.argr);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.argg);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.argb);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.arga);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.arbr);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.arbg);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.arbb);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.arba);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.arar);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.arag);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.arab);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.araa);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.agrr);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.agrg);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.agrb);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.agra);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.aggr);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.aggg);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.aggb);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.agga);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.agbr);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.agbg);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.agbb);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.agba);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.agar);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.agag);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.agab);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.agaa);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.abrr);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.abrg);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.abrb);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.abra);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.abgr);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.abgg);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.abgb);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.abga);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.abbr);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.abbg);
            TestUtils.AreEqual(bool4(true, false, false, false), v1.abbb);
            TestUtils.AreEqual(bool4(true, false, false, true), v1.abba);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.abar);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.abag);
            TestUtils.AreEqual(bool4(true, false, true, false), v1.abab);
            TestUtils.AreEqual(bool4(true, false, true, true), v1.abaa);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.aarr);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.aarg);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.aarb);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.aara);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.aagr);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.aagg);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.aagb);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.aaga);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.aabr);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.aabg);
            TestUtils.AreEqual(bool4(true, true, false, false), v1.aabb);
            TestUtils.AreEqual(bool4(true, true, false, true), v1.aaba);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.aaar);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.aaag);
            TestUtils.AreEqual(bool4(true, true, true, false), v1.aaab);
            TestUtils.AreEqual(bool4(true, true, true, true), v1.aaaa);
            TestUtils.AreEqual(bool3(false, false, false), v1.rrr);
            TestUtils.AreEqual(bool3(false, false, true), v1.rrg);
            TestUtils.AreEqual(bool3(false, false, false), v1.rrb);
            TestUtils.AreEqual(bool3(false, false, true), v1.rra);
            TestUtils.AreEqual(bool3(false, true, false), v1.rgr);
            TestUtils.AreEqual(bool3(false, true, true), v1.rgg);
            TestUtils.AreEqual(bool3(false, true, false), v1.rgb);
            TestUtils.AreEqual(bool3(false, true, true), v1.rga);
            TestUtils.AreEqual(bool3(false, false, false), v1.rbr);
            TestUtils.AreEqual(bool3(false, false, true), v1.rbg);
            TestUtils.AreEqual(bool3(false, false, false), v1.rbb);
            TestUtils.AreEqual(bool3(false, false, true), v1.rba);
            TestUtils.AreEqual(bool3(false, true, false), v1.rar);
            TestUtils.AreEqual(bool3(false, true, true), v1.rag);
            TestUtils.AreEqual(bool3(false, true, false), v1.rab);
            TestUtils.AreEqual(bool3(false, true, true), v1.raa);
            TestUtils.AreEqual(bool3(true, false, false), v1.grr);
            TestUtils.AreEqual(bool3(true, false, true), v1.grg);
            TestUtils.AreEqual(bool3(true, false, false), v1.grb);
            TestUtils.AreEqual(bool3(true, false, true), v1.gra);
            TestUtils.AreEqual(bool3(true, true, false), v1.ggr);
            TestUtils.AreEqual(bool3(true, true, true), v1.ggg);
            TestUtils.AreEqual(bool3(true, true, false), v1.ggb);
            TestUtils.AreEqual(bool3(true, true, true), v1.gga);
            TestUtils.AreEqual(bool3(true, false, false), v1.gbr);
            TestUtils.AreEqual(bool3(true, false, true), v1.gbg);
            TestUtils.AreEqual(bool3(true, false, false), v1.gbb);
            TestUtils.AreEqual(bool3(true, false, true), v1.gba);
            TestUtils.AreEqual(bool3(true, true, false), v1.gar);
            TestUtils.AreEqual(bool3(true, true, true), v1.gag);
            TestUtils.AreEqual(bool3(true, true, false), v1.gab);
            TestUtils.AreEqual(bool3(true, true, true), v1.gaa);
            TestUtils.AreEqual(bool3(false, false, false), v1.brr);
            TestUtils.AreEqual(bool3(false, false, true), v1.brg);
            TestUtils.AreEqual(bool3(false, false, false), v1.brb);
            TestUtils.AreEqual(bool3(false, false, true), v1.bra);
            TestUtils.AreEqual(bool3(false, true, false), v1.bgr);
            TestUtils.AreEqual(bool3(false, true, true), v1.bgg);
            TestUtils.AreEqual(bool3(false, true, false), v1.bgb);
            TestUtils.AreEqual(bool3(false, true, true), v1.bga);
            TestUtils.AreEqual(bool3(false, false, false), v1.bbr);
            TestUtils.AreEqual(bool3(false, false, true), v1.bbg);
            TestUtils.AreEqual(bool3(false, false, false), v1.bbb);
            TestUtils.AreEqual(bool3(false, false, true), v1.bba);
            TestUtils.AreEqual(bool3(false, true, false), v1.bar);
            TestUtils.AreEqual(bool3(false, true, true), v1.bag);
            TestUtils.AreEqual(bool3(false, true, false), v1.bab);
            TestUtils.AreEqual(bool3(false, true, true), v1.baa);
            TestUtils.AreEqual(bool3(true, false, false), v1.arr);
            TestUtils.AreEqual(bool3(true, false, true), v1.arg);
            TestUtils.AreEqual(bool3(true, false, false), v1.arb);
            TestUtils.AreEqual(bool3(true, false, true), v1.ara);
            TestUtils.AreEqual(bool3(true, true, false), v1.agr);
            TestUtils.AreEqual(bool3(true, true, true), v1.agg);
            TestUtils.AreEqual(bool3(true, true, false), v1.agb);
            TestUtils.AreEqual(bool3(true, true, true), v1.aga);
            TestUtils.AreEqual(bool3(true, false, false), v1.abr);
            TestUtils.AreEqual(bool3(true, false, true), v1.abg);
            TestUtils.AreEqual(bool3(true, false, false), v1.abb);
            TestUtils.AreEqual(bool3(true, false, true), v1.aba);
            TestUtils.AreEqual(bool3(true, true, false), v1.aar);
            TestUtils.AreEqual(bool3(true, true, true), v1.aag);
            TestUtils.AreEqual(bool3(true, true, false), v1.aab);
            TestUtils.AreEqual(bool3(true, true, true), v1.aaa);
            TestUtils.AreEqual(bool2(false, false), v1.rr);
            TestUtils.AreEqual(bool2(false, true), v1.rg);
            TestUtils.AreEqual(bool2(false, false), v1.rb);
            TestUtils.AreEqual(bool2(false, true), v1.ra);
            TestUtils.AreEqual(bool2(true, false), v1.gr);
            TestUtils.AreEqual(bool2(true, true), v1.gg);
            TestUtils.AreEqual(bool2(true, false), v1.gb);
            TestUtils.AreEqual(bool2(true, true), v1.ga);
            TestUtils.AreEqual(bool2(false, false), v1.br);
            TestUtils.AreEqual(bool2(false, true), v1.bg);
            TestUtils.AreEqual(bool2(false, false), v1.bb);
            TestUtils.AreEqual(bool2(false, true), v1.ba);
            TestUtils.AreEqual(bool2(true, false), v1.ar);
            TestUtils.AreEqual(bool2(true, true), v1.ag);
            TestUtils.AreEqual(bool2(true, false), v1.ab);
            TestUtils.AreEqual(bool2(true, true), v1.aa);
        }

        [TestCompiler]
        public static void bool4_swizzle_setters()
        {
            var v1 = new bool4(false, true, false, true);
            var v2 = new bool4(true, false, true, false);

            var set = new bool4();

            set = v1;
            set.rgba = v1.rgba;
            TestUtils.AreEqual(bool4(false, true, false, true), set);
            set = v1;
            set.rgab = v1.rgba;
            TestUtils.AreEqual(bool4(false, true, true, false), set);
            set = v1;
            set.rbga = v1.rgba;
            TestUtils.AreEqual(bool4(false, false, true, true), set);
            set = v1;
            set.rbag = v1.rgba;
            TestUtils.AreEqual(bool4(false, true, true, false), set);
            set = v1;
            set.ragb = v1.rgba;
            TestUtils.AreEqual(bool4(false, false, true, true), set);
            set = v1;
            set.rabg = v1.rgba;
            TestUtils.AreEqual(bool4(false, true, false, true), set);
            set = v1;
            set.grba = v1.rgba;
            TestUtils.AreEqual(bool4(true, false, false, true), set);
            set = v1;
            set.grab = v1.rgba;
            TestUtils.AreEqual(bool4(true, false, true, false), set);
            set = v1;
            set.gbra = v1.rgba;
            TestUtils.AreEqual(bool4(false, false, true, true), set);
            set = v1;
            set.gbar = v1.rgba;
            TestUtils.AreEqual(bool4(true, false, true, false), set);
            set = v1;
            set.garb = v1.rgba;
            TestUtils.AreEqual(bool4(false, false, true, true), set);
            set = v1;
            set.gabr = v1.rgba;
            TestUtils.AreEqual(bool4(true, false, false, true), set);
            set = v1;
            set.brga = v1.rgba;
            TestUtils.AreEqual(bool4(true, false, false, true), set);
            set = v1;
            set.brag = v1.rgba;
            TestUtils.AreEqual(bool4(true, true, false, false), set);
            set = v1;
            set.bgra = v1.rgba;
            TestUtils.AreEqual(bool4(false, true, false, true), set);
            set = v1;
            set.bgar = v1.rgba;
            TestUtils.AreEqual(bool4(true, true, false, false), set);
            set = v1;
            set.barg = v1.rgba;
            TestUtils.AreEqual(bool4(false, true, false, true), set);
            set = v1;
            set.bagr = v1.rgba;
            TestUtils.AreEqual(bool4(true, false, false, true), set);
            set = v1;
            set.argb = v1.rgba;
            TestUtils.AreEqual(bool4(true, false, true, false), set);
            set = v1;
            set.arbg = v1.rgba;
            TestUtils.AreEqual(bool4(true, true, false, false), set);
            set = v1;
            set.agrb = v1.rgba;
            TestUtils.AreEqual(bool4(false, true, true, false), set);
            set = v1;
            set.agbr = v1.rgba;
            TestUtils.AreEqual(bool4(true, true, false, false), set);
            set = v1;
            set.abrg = v1.rgba;
            TestUtils.AreEqual(bool4(false, true, true, false), set);
            set = v1;
            set.abgr = v1.rgba;
            TestUtils.AreEqual(bool4(true, false, true, false), set);
            set = v1;
            set.rgb = v1.rgb;
            TestUtils.AreEqual(bool4(false, true, false, true), set);
            set = v1;
            set.rga = v1.rgb;
            TestUtils.AreEqual(bool4(false, true, false, false), set);
            set = v1;
            set.rbg = v1.rgb;
            TestUtils.AreEqual(bool4(false, false, true, true), set);
            set = v1;
            set.rba = v1.rgb;
            TestUtils.AreEqual(bool4(false, true, true, false), set);
            set = v1;
            set.rag = v1.rgb;
            TestUtils.AreEqual(bool4(false, false, false, true), set);
            set = v1;
            set.rab = v1.rgb;
            TestUtils.AreEqual(bool4(false, true, false, true), set);
            set = v1;
            set.grb = v1.rgb;
            TestUtils.AreEqual(bool4(true, false, false, true), set);
            set = v1;
            set.gra = v1.rgb;
            TestUtils.AreEqual(bool4(true, false, false, false), set);
            set = v1;
            set.gbr = v1.rgb;
            TestUtils.AreEqual(bool4(false, false, true, true), set);
            set = v1;
            set.gba = v1.rgb;
            TestUtils.AreEqual(bool4(false, false, true, false), set);
            set = v1;
            set.gar = v1.rgb;
            TestUtils.AreEqual(bool4(false, false, false, true), set);
            set = v1;
            set.gab = v1.rgb;
            TestUtils.AreEqual(bool4(false, false, false, true), set);
            set = v1;
            set.brg = v1.rgb;
            TestUtils.AreEqual(bool4(true, false, false, true), set);
            set = v1;
            set.bra = v1.rgb;
            TestUtils.AreEqual(bool4(true, true, false, false), set);
            set = v1;
            set.bgr = v1.rgb;
            TestUtils.AreEqual(bool4(false, true, false, true), set);
            set = v1;
            set.bga = v1.rgb;
            TestUtils.AreEqual(bool4(false, true, false, false), set);
            set = v1;
            set.bar = v1.rgb;
            TestUtils.AreEqual(bool4(false, true, false, true), set);
            set = v1;
            set.bag = v1.rgb;
            TestUtils.AreEqual(bool4(false, false, false, true), set);
            set = v1;
            set.arg = v1.rgb;
            TestUtils.AreEqual(bool4(true, false, false, false), set);
            set = v1;
            set.arb = v1.rgb;
            TestUtils.AreEqual(bool4(true, true, false, false), set);
            set = v1;
            set.agr = v1.rgb;
            TestUtils.AreEqual(bool4(false, true, false, false), set);
            set = v1;
            set.agb = v1.rgb;
            TestUtils.AreEqual(bool4(false, true, false, false), set);
            set = v1;
            set.abr = v1.rgb;
            TestUtils.AreEqual(bool4(false, true, true, false), set);
            set = v1;
            set.abg = v1.rgb;
            TestUtils.AreEqual(bool4(false, false, true, false), set);
            set = v1;
            set.rg = v1.rg;
            TestUtils.AreEqual(bool4(false, true, false, true), set);
            set = v1;
            set.rb = v1.rg;
            TestUtils.AreEqual(bool4(false, true, true, true), set);
            set = v1;
            set.ra = v1.rg;
            TestUtils.AreEqual(bool4(false, true, false, true), set);
            set = v1;
            set.gr = v1.rg;
            TestUtils.AreEqual(bool4(true, false, false, true), set);
            set = v1;
            set.gb = v1.rg;
            TestUtils.AreEqual(bool4(false, false, true, true), set);
            set = v1;
            set.ga = v1.rg;
            TestUtils.AreEqual(bool4(false, false, false, true), set);
            set = v1;
            set.br = v1.rg;
            TestUtils.AreEqual(bool4(true, true, false, true), set);
            set = v1;
            set.bg = v1.rg;
            TestUtils.AreEqual(bool4(false, true, false, true), set);
            set = v1;
            set.ba = v1.rg;
            TestUtils.AreEqual(bool4(false, true, false, true), set);
            set = v1;
            set.ar = v1.rg;
            TestUtils.AreEqual(bool4(true, true, false, false), set);
            set = v1;
            set.ag = v1.rg;
            TestUtils.AreEqual(bool4(false, true, false, false), set);
            set = v1;
            set.ab = v1.rg;
            TestUtils.AreEqual(bool4(false, true, true, false), set);
        }

        [TestCompiler]
        public static void bool4_colorswizzle()
        {
        }


    }
}
