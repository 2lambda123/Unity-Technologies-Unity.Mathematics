//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using static Unity.Mathematics.math;
using Burst.Compiler.IL.Tests;

namespace Unity.Mathematics.Tests
{
    [TestFixture]
    public class TestFloat2x4
    {
        [TestCompiler]
        public static void float2x4_zero()
        {
            TestUtils.AreEqual(float2x4.zero.c0.x, 0.0f);
            TestUtils.AreEqual(float2x4.zero.c0.y, 0.0f);
            TestUtils.AreEqual(float2x4.zero.c1.x, 0.0f);
            TestUtils.AreEqual(float2x4.zero.c1.y, 0.0f);
            TestUtils.AreEqual(float2x4.zero.c2.x, 0.0f);
            TestUtils.AreEqual(float2x4.zero.c2.y, 0.0f);
            TestUtils.AreEqual(float2x4.zero.c3.x, 0.0f);
            TestUtils.AreEqual(float2x4.zero.c3.y, 0.0f);
        }

        [TestCompiler]
        public static void float2x4_operator_equal_wide_wide()
        {
            float2x4 a0 = float2x4(331.744141f, -417.6833f, -438.450867f, -57.99066f, -183.1134f, 72.3228149f, -292.706116f, -181.376923f);
            float2x4 b0 = float2x4(-426.582825f, 431.344543f, 263.339172f, -309.3919f, 391.1996f, -468.237274f, -389.9116f, -192.672028f);
            bool2x4 r0 = bool2x4(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            float2x4 a1 = float2x4(43.84778f, 481.287354f, 258.4253f, 352.580444f, 70.85327f, -41.08313f, -501.143951f, 469.417725f);
            float2x4 b1 = float2x4(-8.950195f, -339.086975f, 104.677917f, -443.5048f, 358.640137f, -415.7492f, -141.969635f, 379.130066f);
            bool2x4 r1 = bool2x4(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            float2x4 a2 = float2x4(379.497925f, -174.4578f, -456.507446f, 172.215576f, 258.43927f, 509.8202f, -199.17569f, 194.292358f);
            float2x4 b2 = float2x4(56.10376f, 132.809509f, -233.776184f, -159.645721f, 369.805054f, 41.04828f, 316.684326f, -258.031738f);
            bool2x4 r2 = bool2x4(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            float2x4 a3 = float2x4(448.9026f, -419.461578f, -267.8828f, 405.6131f, -267.163269f, -151.508728f, -207.5777f, -320.248f);
            float2x4 b3 = float2x4(-239.097748f, -181.013641f, 241.82428f, -284.933777f, -486.1785f, -285.091f, -154.241455f, 470.856262f);
            bool2x4 r3 = bool2x4(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_equal_wide_scalar()
        {
            float2x4 a0 = float2x4(327.101929f, 440.467224f, -443.745178f, 325.546265f, 435.371765f, 58.38208f, -398.435f, 377.0666f);
            float b0 = (342.440552f);
            bool2x4 r0 = bool2x4(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            float2x4 a1 = float2x4(445.502136f, -92.37259f, -350.2315f, 450.236755f, 14.9833374f, -504.426971f, 412.488525f, 454.7033f);
            float b1 = (-17.7927246f);
            bool2x4 r1 = bool2x4(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            float2x4 a2 = float2x4(289.2917f, 413.762878f, 233.3728f, -481.17157f, 355.5678f, -235.840881f, 322.297729f, 114.381042f);
            float b2 = (356.93158f);
            bool2x4 r2 = bool2x4(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            float2x4 a3 = float2x4(352.201782f, 273.712158f, 98.97534f, -173.683014f, 260.326843f, -154.797943f, -40.9360046f, 482.790283f);
            float b3 = (-335.634521f);
            bool2x4 r3 = bool2x4(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_equal_scalar_wide()
        {
            float a0 = (430.781128f);
            float2x4 b0 = float2x4(-434.727478f, 103.730347f, -263.03656f, -224.560181f, 204.110779f, 196.568237f, -424.756561f, 467.4505f);
            bool2x4 r0 = bool2x4(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            float a1 = (-45.4336243f);
            float2x4 b1 = float2x4(138.191589f, 181.061951f, -449.2158f, -335.154449f, -77.46622f, 107.902405f, -330.9517f, -115.29895f);
            bool2x4 r1 = bool2x4(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            float a2 = (244.522888f);
            float2x4 b2 = float2x4(-481.4762f, 134.603821f, -208.271637f, 420.9162f, -464.2389f, 64.91498f, 62.8317261f, -429.80426f);
            bool2x4 r2 = bool2x4(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            float a3 = (-5.533844f);
            float2x4 b3 = float2x4(21.2402954f, 261.038635f, -30.1661377f, -380.670441f, 235.491638f, -322.037445f, 450.00824f, 375.5432f);
            bool2x4 r3 = bool2x4(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_not_equal_wide_wide()
        {
            float2x4 a0 = float2x4(19.2539673f, 121.335449f, 468.3097f, -212.365448f, -410.633484f, 507.534241f, 52.20117f, -319.6424f);
            float2x4 b0 = float2x4(-249.066345f, -19.0466f, 323.622559f, 294.941956f, -492.460968f, -166.483276f, 421.1953f, 87.6629f);
            bool2x4 r0 = bool2x4(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            float2x4 a1 = float2x4(-448.9063f, 255.3703f, -70.46268f, -18.9137878f, -131.624084f, 288.074951f, 290.717957f, 191.2832f);
            float2x4 b1 = float2x4(193.875122f, -279.289825f, 158.513611f, 426.635132f, -404.547821f, 480.740479f, -184.480316f, 355.445068f);
            bool2x4 r1 = bool2x4(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            float2x4 a2 = float2x4(-220.54245f, 404.7948f, -266.012451f, 258.967346f, -375.447144f, 124.137634f, -395.242065f, 154.09259f);
            float2x4 b2 = float2x4(414.6756f, -134.759186f, -458.719055f, -43.3425f, -446.3987f, -50.54947f, -142.774689f, -462.0124f);
            bool2x4 r2 = bool2x4(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            float2x4 a3 = float2x4(-270.3957f, 265.8225f, -70.6264343f, -431.107422f, 281.847473f, -399.4225f, -476.4524f, -507.77597f);
            float2x4 b3 = float2x4(511.044678f, -497.399323f, -267.937927f, 372.740356f, 206.700317f, 360.857483f, -181.105927f, 285.8468f);
            bool2x4 r3 = bool2x4(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_not_equal_wide_scalar()
        {
            float2x4 a0 = float2x4(-418.022278f, 231.448242f, -469.478516f, -94.97409f, -376.084381f, -428.119019f, 492.9278f, -91.33383f);
            float b0 = (-206.336578f);
            bool2x4 r0 = bool2x4(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            float2x4 a1 = float2x4(80.41858f, -409.290527f, 353.96106f, 170.989319f, -494.895752f, 181.015137f, -180.176971f, 324.904724f);
            float b1 = (-124.39093f);
            bool2x4 r1 = bool2x4(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            float2x4 a2 = float2x4(365.89978f, 75.14545f, -505.780518f, 504.517944f, 385.4771f, -221.906036f, 237.351563f, 401.893555f);
            float b2 = (86.04675f);
            bool2x4 r2 = bool2x4(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            float2x4 a3 = float2x4(-418.3873f, 449.5686f, 242.233826f, -117.3277f, 434.6377f, 111.69043f, 503.1595f, 450.927917f);
            float b3 = (-235.435944f);
            bool2x4 r3 = bool2x4(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_not_equal_scalar_wide()
        {
            float a0 = (357.343384f);
            float2x4 b0 = float2x4(192.976379f, -323.1933f, -25.1252441f, -270.503082f, -454.426819f, -458.8189f, -274.5384f, 127.642212f);
            bool2x4 r0 = bool2x4(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            float a1 = (-43.8877258f);
            float2x4 b1 = float2x4(-179.47229f, 498.287659f, -333.8144f, -169.487946f, -146.258789f, -33.028656f, 156.743591f, -285.206543f);
            bool2x4 r1 = bool2x4(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            float a2 = (-10.882843f);
            float2x4 b2 = float2x4(259.283447f, -469.940765f, 46.4143066f, -415.384338f, 311.547668f, 244.515991f, 110.527771f, -290.509644f);
            bool2x4 r2 = bool2x4(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            float a3 = (-53.821167f);
            float2x4 b3 = float2x4(-362.343781f, -455.7852f, -199.0863f, 298.186951f, 319.69635f, 346.52832f, -314.9336f, -106.494812f);
            bool2x4 r3 = bool2x4(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_less_wide_wide()
        {
            float2x4 a0 = float2x4(487.8249f, -508.921722f, 53.8760376f, 443.786926f, -81.07861f, 103.165527f, -496.199768f, 30.0013428f);
            float2x4 b0 = float2x4(453.097351f, -123.830566f, 492.750122f, 434.46344f, -402.464783f, -480.752319f, 317.300659f, 175.821045f);
            bool2x4 r0 = bool2x4(false, true, true, false, false, false, true, true);
            TestUtils.AreEqual(a0 < b0, r0);

            float2x4 a1 = float2x4(490.884521f, 485.697083f, -360.631073f, -442.654358f, -310.858032f, -142.116028f, -131.921722f, -279.917725f);
            float2x4 b1 = float2x4(301.866333f, 77.77667f, -188.57605f, 479.3379f, -393.342255f, 21.69635f, 151.5708f, -115.47818f);
            bool2x4 r1 = bool2x4(false, false, true, true, false, true, true, true);
            TestUtils.AreEqual(a1 < b1, r1);

            float2x4 a2 = float2x4(-335.161621f, 207.237366f, 267.394043f, 259.686523f, 197.362366f, 378.0946f, -358.618958f, -187.3323f);
            float2x4 b2 = float2x4(-417.1082f, -272.838745f, 210.978516f, -355.154755f, 183.079834f, -260.3083f, 312.9527f, 383.91626f);
            bool2x4 r2 = bool2x4(false, false, false, false, false, false, true, true);
            TestUtils.AreEqual(a2 < b2, r2);

            float2x4 a3 = float2x4(-367.859619f, -268.33905f, 301.925049f, -455.977753f, 383.7517f, -324.972565f, 122.86615f, 54.38513f);
            float2x4 b3 = float2x4(-170.578735f, 102.495972f, 477.086f, 164.40094f, -476.2596f, -64.78168f, -89.9094238f, 279.3506f);
            bool2x4 r3 = bool2x4(true, true, true, true, false, true, false, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_less_wide_scalar()
        {
            float2x4 a0 = float2x4(18.1535645f, -409.346466f, 180.7865f, -185.154968f, 228.264709f, 124.125732f, 265.743835f, -307.545563f);
            float b0 = (152.320862f);
            bool2x4 r0 = bool2x4(true, true, false, true, false, true, false, true);
            TestUtils.AreEqual(a0 < b0, r0);

            float2x4 a1 = float2x4(493.123169f, 131.67981f, 85.93457f, -89.3711853f, -36.8948059f, -491.257172f, -193.741882f, -320.661f);
            float b1 = (36.3736572f);
            bool2x4 r1 = bool2x4(false, false, false, true, true, true, true, true);
            TestUtils.AreEqual(a1 < b1, r1);

            float2x4 a2 = float2x4(424.3283f, 435.076416f, 181.86554f, 350.0327f, -108.90918f, -9.381622f, 109.856995f, -377.404f);
            float b2 = (-392.517334f);
            bool2x4 r2 = bool2x4(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            float2x4 a3 = float2x4(-91.78177f, -324.0164f, -414.565826f, -141.8559f, -107.000946f, 364.8946f, 246.614075f, 337.6457f);
            float b3 = (-197.499542f);
            bool2x4 r3 = bool2x4(false, true, true, false, false, false, false, false);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_less_scalar_wide()
        {
            float a0 = (416.681274f);
            float2x4 b0 = float2x4(-105.389069f, -389.2496f, 408.846863f, -87.03952f, 268.691345f, -470.20163f, 271.315674f, -170.322723f);
            bool2x4 r0 = bool2x4(false, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a0 < b0, r0);

            float a1 = (-156.598419f);
            float2x4 b1 = float2x4(-0.2886963f, 72.09082f, -54.4299927f, 191.603271f, 370.544f, 283.232422f, -362.762024f, -145.500977f);
            bool2x4 r1 = bool2x4(true, true, true, true, true, true, false, true);
            TestUtils.AreEqual(a1 < b1, r1);

            float a2 = (315.129883f);
            float2x4 b2 = float2x4(340.8296f, -60.229248f, -194.843689f, -261.056763f, -246.825867f, 91.5376f, -233.5228f, 16.3255615f);
            bool2x4 r2 = bool2x4(true, false, false, false, false, false, false, false);
            TestUtils.AreEqual(a2 < b2, r2);

            float a3 = (-44.0384827f);
            float2x4 b3 = float2x4(49.5278931f, -161.31601f, 230.163574f, -341.875549f, 87.1088257f, 229.0669f, 53.4827271f, 353.14386f);
            bool2x4 r3 = bool2x4(true, false, true, false, true, true, true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_greater_wide_wide()
        {
            float2x4 a0 = float2x4(-188.03302f, 234.300232f, -56.30594f, 240.958374f, 501.4876f, -303.425f, -305.5091f, -470.742554f);
            float2x4 b0 = float2x4(-17.4008179f, -59.53961f, -24.2853088f, 222.387512f, -207.170441f, 365.5465f, 183.5733f, -23.080719f);
            bool2x4 r0 = bool2x4(false, true, false, true, true, false, false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            float2x4 a1 = float2x4(-305.090759f, 26.0454712f, 169.997375f, -498.388031f, 270.142944f, 69.6588745f, -163.975159f, 273.174133f);
            float2x4 b1 = float2x4(337.163818f, 175.811768f, -8.514038f, -125.865387f, -212.857056f, 12.6571045f, 134.17511f, -101.511993f);
            bool2x4 r1 = bool2x4(false, false, true, false, true, true, false, true);
            TestUtils.AreEqual(a1 > b1, r1);

            float2x4 a2 = float2x4(193.8711f, -157.939331f, 439.0537f, 414.232666f, -246.558075f, 326.2243f, -457.296661f, -338.94574f);
            float2x4 b2 = float2x4(-505.14505f, -150.596619f, 286.160583f, 358.075439f, 105.754028f, 61.5240479f, 144.405334f, -298.4254f);
            bool2x4 r2 = bool2x4(true, false, true, true, false, true, false, false);
            TestUtils.AreEqual(a2 > b2, r2);

            float2x4 a3 = float2x4(310.630127f, -134.709412f, 485.6823f, -400.953827f, -31.0127869f, 182.317444f, 418.0558f, -125.63736f);
            float2x4 b3 = float2x4(485.263245f, -341.976929f, 74.8334351f, 332.481018f, -151.834412f, -355.448883f, -283.69873f, -144.6875f);
            bool2x4 r3 = bool2x4(false, true, true, false, true, true, true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_greater_wide_scalar()
        {
            float2x4 a0 = float2x4(468.8808f, -355.421021f, -45.708252f, 407.176575f, 348.72522f, 418.545349f, -422.750183f, -364.2755f);
            float b0 = (201.802734f);
            bool2x4 r0 = bool2x4(true, false, false, true, true, true, false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            float2x4 a1 = float2x4(434.163635f, 178.8064f, 379.823364f, -346.942383f, -121.102142f, 164.48761f, -282.735718f, 437.083984f);
            float b1 = (-255.049072f);
            bool2x4 r1 = bool2x4(true, true, true, false, true, true, false, true);
            TestUtils.AreEqual(a1 > b1, r1);

            float2x4 a2 = float2x4(15.6209717f, -509.6458f, -293.801758f, 127.584412f, 488.46167f, -162.216888f, 301.607727f, -345.053375f);
            float b2 = (208.428467f);
            bool2x4 r2 = bool2x4(false, false, false, false, true, false, true, false);
            TestUtils.AreEqual(a2 > b2, r2);

            float2x4 a3 = float2x4(-76.30057f, -238.177124f, -42.973877f, -427.231781f, 277.377869f, -130.1195f, -142.3913f, 100.413269f);
            float b3 = (-238.100464f);
            bool2x4 r3 = bool2x4(true, false, true, false, true, true, true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_greater_scalar_wide()
        {
            float a0 = (137.504211f);
            float2x4 b0 = float2x4(-443.866821f, 279.852783f, -462.4043f, -280.713776f, 120.712769f, -31.6700134f, 363.428345f, 263.125427f);
            bool2x4 r0 = bool2x4(true, false, true, true, true, true, false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            float a1 = (-156.36087f);
            float2x4 b1 = float2x4(66.3540039f, -303.1296f, 419.3374f, -392.721069f, -378.762939f, -398.361145f, -314.282471f, 89.5307f);
            bool2x4 r1 = bool2x4(false, true, false, true, true, true, true, false);
            TestUtils.AreEqual(a1 > b1, r1);

            float a2 = (408.407166f);
            float2x4 b2 = float2x4(303.3543f, 16.916748f, -425.384216f, 205.63916f, -181.906982f, 256.7876f, -272.8026f, -192.998962f);
            bool2x4 r2 = bool2x4(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 > b2, r2);

            float a3 = (457.5393f);
            float2x4 b3 = float2x4(-12.8081055f, 421.600769f, -235.210266f, -483.95105f, 157.529114f, 193.490845f, -301.340332f, -252.4213f);
            bool2x4 r3 = bool2x4(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_less_equal_wide_wide()
        {
            float2x4 a0 = float2x4(333.0476f, 239.35083f, 26.5692139f, 41.4924927f, -162.662354f, -271.002747f, -108.986206f, 392.0816f);
            float2x4 b0 = float2x4(46.1311646f, -378.082336f, -466.7782f, -173.335022f, -482.2393f, 183.3465f, 399.076172f, -127.637085f);
            bool2x4 r0 = bool2x4(false, false, false, false, false, true, true, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            float2x4 a1 = float2x4(314.488647f, 208.102173f, 39.9359741f, 458.7705f, -404.075f, 359.389954f, 405.929749f, -463.0184f);
            float2x4 b1 = float2x4(-118.196838f, -329.727448f, -208.817627f, 368.286865f, 68.84564f, 452.365234f, -255.050629f, 440.1126f);
            bool2x4 r1 = bool2x4(false, false, false, false, true, true, false, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            float2x4 a2 = float2x4(-459.443024f, 271.79187f, 73.09076f, 263.657959f, -355.346161f, -184.612061f, -320.97345f, 340.874939f);
            float2x4 b2 = float2x4(-138.225769f, -237.159058f, 201.343079f, -403.248749f, 230.682983f, -57.3156433f, 124.1311f, 38.1745f);
            bool2x4 r2 = bool2x4(true, false, true, false, true, true, true, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            float2x4 a3 = float2x4(226.31f, 186.879822f, -130.892334f, -315.204651f, 99.36072f, -486.007324f, -314.168152f, -67.26477f);
            float2x4 b3 = float2x4(209.631958f, 236.809814f, 485.7528f, 29.8652344f, 383.063965f, 469.723572f, 101.127319f, -419.6117f);
            bool2x4 r3 = bool2x4(false, true, true, true, true, true, true, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_less_equal_wide_scalar()
        {
            float2x4 a0 = float2x4(122.817688f, -283.694275f, -288.847656f, -185.453918f, -315.2539f, 279.5738f, -317.959167f, -255.5698f);
            float b0 = (-181.943909f);
            bool2x4 r0 = bool2x4(false, true, true, true, true, false, true, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            float2x4 a1 = float2x4(-368.803284f, -207.253967f, -328.492218f, -115.355896f, -192.5214f, 454.183838f, -38.063385f, 509.92865f);
            float b1 = (-132.488861f);
            bool2x4 r1 = bool2x4(true, true, true, false, true, false, false, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            float2x4 a2 = float2x4(-410.584534f, 179.05542f, -253.84079f, 228.502563f, 320.4897f, 65.78052f, 157.06311f, 126.580139f);
            float b2 = (-231.749481f);
            bool2x4 r2 = bool2x4(true, false, true, false, false, false, false, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            float2x4 a3 = float2x4(-476.033325f, -281.348267f, 145.758118f, 403.821838f, 365.085327f, -483.509583f, -37.3781128f, -168.46701f);
            float b3 = (441.4171f);
            bool2x4 r3 = bool2x4(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_less_equal_scalar_wide()
        {
            float a0 = (-336.4657f);
            float2x4 b0 = float2x4(251.958374f, -22.8583069f, -238.905853f, 284.666626f, -358.324f, 468.530273f, -439.037231f, -197.067688f);
            bool2x4 r0 = bool2x4(true, true, true, true, false, true, false, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            float a1 = (-367.59552f);
            float2x4 b1 = float2x4(-143.895081f, -387.8427f, -88.23752f, 439.360535f, -487.9847f, -393.415863f, 399.102478f, 365.36438f);
            bool2x4 r1 = bool2x4(true, false, true, true, false, false, true, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            float a2 = (-225.015259f);
            float2x4 b2 = float2x4(-305.5796f, -155.50473f, -241.3457f, -22.9373779f, -113.94046f, 421.051025f, -493.358154f, -422.88028f);
            bool2x4 r2 = bool2x4(false, true, false, true, true, true, false, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            float a3 = (27.0828857f);
            float2x4 b3 = float2x4(-505.903076f, 470.219849f, 399.418335f, 312.550354f, -309.136749f, -317.886841f, -501.4554f, -73.50827f);
            bool2x4 r3 = bool2x4(false, true, true, true, false, false, false, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_greater_equal_wide_wide()
        {
            float2x4 a0 = float2x4(143.641235f, -251.704163f, 118.576172f, 23.871582f, 84.63403f, -145.382233f, -234.447327f, 90.46185f);
            float2x4 b0 = float2x4(-409.271027f, -84.91385f, 509.1283f, -61.13452f, 139.217224f, -30.2294312f, 210.736267f, 27.0149536f);
            bool2x4 r0 = bool2x4(true, false, false, true, false, false, false, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            float2x4 a1 = float2x4(203.555847f, 370.9796f, -64.08972f, -140.503021f, -61.64731f, 463.918945f, -81.43878f, -56.36319f);
            float2x4 b1 = float2x4(467.682922f, -206.05484f, 109.552368f, -413.970337f, 95.38501f, -493.097656f, 330.596924f, 106.934875f);
            bool2x4 r1 = bool2x4(false, true, false, true, false, true, false, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            float2x4 a2 = float2x4(39.7544556f, -389.112549f, 117.347229f, -460.3187f, -209.221191f, -223.7843f, -36.6575928f, 488.5995f);
            float2x4 b2 = float2x4(-316.19577f, 206.490479f, 114.226807f, 54.4406128f, -242.842743f, 240.4956f, 151.109375f, 165.143127f);
            bool2x4 r2 = bool2x4(true, false, true, false, true, false, false, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            float2x4 a3 = float2x4(437.58728f, -330.4093f, -373.0106f, -352.3084f, 243.232f, 488.733459f, -466.79068f, -491.69577f);
            float2x4 b3 = float2x4(92.21735f, 13.223999f, 204.379517f, -477.9111f, -349.733826f, -488.808838f, 4.96923828f, 266.0371f);
            bool2x4 r3 = bool2x4(true, false, false, true, true, true, false, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_greater_equal_wide_scalar()
        {
            float2x4 a0 = float2x4(-355.36084f, 304.301453f, 385.12854f, -263.954834f, -435.806427f, 126.500793f, 77.0108f, -226.753937f);
            float b0 = (-139.19751f);
            bool2x4 r0 = bool2x4(false, true, true, false, false, true, true, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            float2x4 a1 = float2x4(-212.650085f, -11.076355f, -457.0079f, -123.012939f, 280.998047f, -112.265076f, 383.0702f, 173.831116f);
            float b1 = (-413.1958f);
            bool2x4 r1 = bool2x4(true, true, false, true, true, true, true, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            float2x4 a2 = float2x4(-168.515747f, 404.740967f, 59.7572632f, 150.140442f, -264.706f, -13.230011f, -202.237823f, 64.6931152f);
            float b2 = (-286.820068f);
            bool2x4 r2 = bool2x4(true, true, true, true, true, true, true, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            float2x4 a3 = float2x4(-182.857544f, 454.143433f, -119.187012f, -472.931427f, 393.1292f, -335.408234f, -430.910034f, 56.3127441f);
            float b3 = (-322.092163f);
            bool2x4 r3 = bool2x4(true, true, true, false, true, false, false, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_greater_equal_scalar_wide()
        {
            float a0 = (-246.073273f);
            float2x4 b0 = float2x4(142.15625f, -19.2986145f, -151.986877f, 330.020874f, -224.80011f, 451.5999f, -435.9818f, 405.881836f);
            bool2x4 r0 = bool2x4(false, false, false, false, false, false, true, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            float a1 = (-324.020142f);
            float2x4 b1 = float2x4(300.8548f, -341.652924f, 349.348328f, -342.970947f, 397.824646f, 363.170837f, -141.004517f, -304.1397f);
            bool2x4 r1 = bool2x4(false, true, false, true, false, false, false, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            float a2 = (317.879517f);
            float2x4 b2 = float2x4(-371.1032f, -166.7135f, 191.643372f, -274.388062f, 33.1248169f, -54.8842163f, 442.023254f, 161.054626f);
            bool2x4 r2 = bool2x4(true, true, true, true, true, true, false, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            float a3 = (-191.782715f);
            float2x4 b3 = float2x4(158.516846f, -506.656738f, 270.833069f, -134.918579f, -57.2349548f, -439.546265f, -101.919159f, 145.802979f);
            bool2x4 r3 = bool2x4(false, true, false, false, false, true, false, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_add_wide_wide()
        {
            float2x4 a0 = float2x4(-404.27536f, -214.93515f, -164.2731f, 338.477173f, 302.848816f, -330.633f, -21.2443542f, 157.130432f);
            float2x4 b0 = float2x4(433.900269f, 359.72052f, 420.5044f, -416.3719f, -163.213684f, -35.6521f, 260.761f, -20.1174622f);
            float2x4 r0 = float2x4(29.6249084f, 144.78537f, 256.2313f, -77.8947144f, 139.635132f, -366.2851f, 239.516632f, 137.01297f);
            TestUtils.AreEqual(a0 + b0, r0);

            float2x4 a1 = float2x4(32.4448242f, -333.966125f, -488.6353f, 484.605347f, -143.616638f, -246.090881f, -133.722687f, 280.921021f);
            float2x4 b1 = float2x4(156.770142f, 315.0406f, -110.87442f, -373.966431f, 12.482605f, 97.39429f, -149.583466f, -463.5646f);
            float2x4 r1 = float2x4(189.214966f, -18.9255371f, -599.509766f, 110.638916f, -131.134033f, -148.6966f, -283.306152f, -182.643585f);
            TestUtils.AreEqual(a1 + b1, r1);

            float2x4 a2 = float2x4(-197.236908f, 72.3357544f, 408.859131f, 362.2229f, -238.820435f, -305.657684f, 3.2989502f, -434.634155f);
            float2x4 b2 = float2x4(-332.266174f, 384.891052f, -47.640564f, 231.062012f, -383.314941f, -107.283905f, 367.018616f, 304.003784f);
            float2x4 r2 = float2x4(-529.503052f, 457.2268f, 361.218567f, 593.2849f, -622.1354f, -412.9416f, 370.317566f, -130.630371f);
            TestUtils.AreEqual(a2 + b2, r2);

            float2x4 a3 = float2x4(50.4830322f, -353.551483f, 507.8617f, -19.4649048f, 461.294922f, -8.662842f, 154.595276f, 229.350769f);
            float2x4 b3 = float2x4(-509.41568f, -253.265533f, 419.9604f, 218.59906f, -352.968719f, 335.244324f, -270.917084f, -59.56772f);
            float2x4 r3 = float2x4(-458.932648f, -606.817f, 927.8221f, 199.134155f, 108.3262f, 326.581482f, -116.321808f, 169.783051f);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_add_wide_scalar()
        {
            float2x4 a0 = float2x4(-323.429443f, 324.634583f, -277.883453f, -472.86264f, -459.056519f, 144.1059f, -334.474182f, 149.114319f);
            float b0 = (-311.2669f);
            float2x4 r0 = float2x4(-634.69635f, 13.3676758f, -589.1504f, -784.1295f, -770.3234f, -167.161011f, -645.7411f, -162.152588f);
            TestUtils.AreEqual(a0 + b0, r0);

            float2x4 a1 = float2x4(-388.344f, -7.709381f, -29.01889f, 45.1229858f, 101.801208f, -410.416f, 279.443237f, -191.047485f);
            float b1 = (303.384583f);
            float2x4 r1 = float2x4(-84.95941f, 295.6752f, 274.3657f, 348.507568f, 405.1858f, -107.0314f, 582.8278f, 112.3371f);
            TestUtils.AreEqual(a1 + b1, r1);

            float2x4 a2 = float2x4(118.387756f, -38.5522461f, 410.894958f, -14.2527771f, -218.204224f, -374.088928f, -344.117737f, -368.177551f);
            float b2 = (11.0637817f);
            float2x4 r2 = float2x4(129.451538f, -27.4884644f, 421.95874f, -3.18899536f, -207.140442f, -363.025146f, -333.053955f, -357.11377f);
            TestUtils.AreEqual(a2 + b2, r2);

            float2x4 a3 = float2x4(94.00256f, 141.67926f, -438.578247f, 299.5407f, -230.743561f, -393.342438f, -280.737122f, 307.491333f);
            float b3 = (466.70813f);
            float2x4 r3 = float2x4(560.7107f, 608.3874f, 28.1298828f, 766.24884f, 235.964569f, 73.36569f, 185.971008f, 774.199463f);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_add_scalar_wide()
        {
            float a0 = (190.831238f);
            float2x4 b0 = float2x4(411.157166f, -70.76166f, -404.5351f, 238.02887f, 442.2439f, 151.431946f, -447.093872f, -299.924774f);
            float2x4 r0 = float2x4(601.9884f, 120.06958f, -213.703857f, 428.8601f, 633.075134f, 342.263184f, -256.262634f, -109.093536f);
            TestUtils.AreEqual(a0 + b0, r0);

            float a1 = (477.432739f);
            float2x4 b1 = float2x4(-292.327271f, 59.3156128f, -378.93335f, -228.865875f, -309.567322f, -78.70996f, -93.9873047f, -173.508575f);
            float2x4 r1 = float2x4(185.105469f, 536.748352f, 98.49939f, 248.566864f, 167.865417f, 398.722778f, 383.445435f, 303.924164f);
            TestUtils.AreEqual(a1 + b1, r1);

            float a2 = (342.767578f);
            float2x4 b2 = float2x4(-172.601349f, 76.3781738f, 502.4878f, -262.746582f, 353.173767f, 288.0697f, 433.607117f, 397.094482f);
            float2x4 r2 = float2x4(170.166229f, 419.145752f, 845.2554f, 80.0209961f, 695.941345f, 630.8373f, 776.3747f, 739.862061f);
            TestUtils.AreEqual(a2 + b2, r2);

            float a3 = (-309.569122f);
            float2x4 b3 = float2x4(235.586182f, -383.315f, 81.2998657f, 440.019531f, -1.446228f, 277.807373f, -488.5011f, 268.6328f);
            float2x4 r3 = float2x4(-73.98294f, -692.884155f, -228.269257f, 130.450409f, -311.01535f, -31.76175f, -798.0702f, -40.93631f);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_sub_wide_wide()
        {
            float2x4 a0 = float2x4(379.052246f, -16.164032f, 107.1604f, 30.0645752f, -428.4387f, 245.627747f, 179.604187f, 505.3778f);
            float2x4 b0 = float2x4(236.683167f, 20.1707764f, 111.480408f, -484.67984f, -447.708679f, 18.19458f, -296.147644f, 367.636f);
            float2x4 r0 = float2x4(142.36908f, -36.33481f, -4.32000732f, 514.7444f, 19.269989f, 227.433167f, 475.751831f, 137.741821f);
            TestUtils.AreEqual(a0 - b0, r0);

            float2x4 a1 = float2x4(317.7188f, -198.473389f, 166.69458f, -379.0271f, 332.89624f, 159.256226f, -405.395935f, -44.4034729f);
            float2x4 b1 = float2x4(-267.455017f, -71.1860657f, -248.3346f, -138.191071f, -474.848175f, -275.859375f, -172.86972f, -72.15997f);
            float2x4 r1 = float2x4(585.1738f, -127.287323f, 415.029175f, -240.836029f, 807.7444f, 435.1156f, -232.526215f, 27.7565f);
            TestUtils.AreEqual(a1 - b1, r1);

            float2x4 a2 = float2x4(-97.96677f, 427.353271f, 64.90527f, 448.51593f, 344.09552f, -299.151367f, 465.763245f, 402.467957f);
            float2x4 b2 = float2x4(-161.5686f, 498.741577f, -123.512634f, -329.4557f, -154.944733f, -481.698822f, 74.2055054f, -267.317078f);
            float2x4 r2 = float2x4(63.6018372f, -71.3883057f, 188.417908f, 777.9716f, 499.040253f, 182.547455f, 391.557739f, 669.785034f);
            TestUtils.AreEqual(a2 - b2, r2);

            float2x4 a3 = float2x4(-243.425079f, 333.471619f, -150.873566f, -29.31659f, 103.710266f, 199.274475f, 464.224182f, 432.716064f);
            float2x4 b3 = float2x4(211.440613f, 186.44928f, 471.0301f, 115.386841f, -389.972961f, 70.0085449f, -206.07605f, 256.43103f);
            float2x4 r3 = float2x4(-454.8657f, 147.022339f, -621.9037f, -144.70343f, 493.683228f, 129.26593f, 670.300232f, 176.285034f);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_sub_wide_scalar()
        {
            float2x4 a0 = float2x4(102.569641f, -199.248688f, 218.154358f, 72.79639f, -139.426361f, 13.45929f, -31.2592163f, -273.2179f);
            float b0 = (-504.2776f);
            float2x4 r0 = float2x4(606.8472f, 305.0289f, 722.431946f, 577.074f, 364.851227f, 517.7369f, 473.018372f, 231.0597f);
            TestUtils.AreEqual(a0 - b0, r0);

            float2x4 a1 = float2x4(-375.997253f, 118.86438f, -126.182953f, -323.067322f, 128.219543f, -59.64612f, -125.91571f, -39.709137f);
            float b1 = (484.570679f);
            float2x4 r1 = float2x4(-860.567932f, -365.7063f, -610.753662f, -807.638f, -356.351135f, -544.2168f, -610.4864f, -524.2798f);
            TestUtils.AreEqual(a1 - b1, r1);

            float2x4 a2 = float2x4(-388.437134f, 164.511963f, -245.126526f, -293.853027f, -168.449432f, -283.301147f, -492.369232f, 470.4295f);
            float b2 = (29.6282349f);
            float2x4 r2 = float2x4(-418.065369f, 134.883728f, -274.754761f, -323.481262f, -198.077667f, -312.929382f, -521.997437f, 440.80127f);
            TestUtils.AreEqual(a2 - b2, r2);

            float2x4 a3 = float2x4(-384.2162f, 312.913452f, 509.8f, 150.796814f, -329.48877f, 253.458374f, 310.496033f, 370.29657f);
            float b3 = (407.132629f);
            float2x4 r3 = float2x4(-791.3488f, -94.21918f, 102.667358f, -256.335815f, -736.6214f, -153.674255f, -96.6366f, -36.83606f);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_sub_scalar_wide()
        {
            float a0 = (385.512268f);
            float2x4 b0 = float2x4(78.82605f, -43.92514f, -401.835358f, -336.146667f, 25.8710938f, 188.92981f, 132.735535f, -391.6434f);
            float2x4 r0 = float2x4(306.686218f, 429.4374f, 787.347656f, 721.658936f, 359.641174f, 196.582458f, 252.776733f, 777.15564f);
            TestUtils.AreEqual(a0 - b0, r0);

            float a1 = (-131.123383f);
            float2x4 b1 = float2x4(43.8323364f, -278.0896f, -440.455048f, -375.452454f, 190.743652f, 364.129639f, 349.778564f, 492.411f);
            float2x4 r1 = float2x4(-174.955719f, 146.966217f, 309.331665f, 244.329071f, -321.867035f, -495.253021f, -480.901947f, -623.5344f);
            TestUtils.AreEqual(a1 - b1, r1);

            float a2 = (122.080627f);
            float2x4 b2 = float2x4(-191.474121f, 114.199036f, 79.3216553f, 105.470459f, -447.612244f, -490.964935f, 245.041565f, 256.2849f);
            float2x4 r2 = float2x4(313.554749f, 7.881592f, 42.7589722f, 16.6101685f, 569.6929f, 613.045532f, -122.960938f, -134.204285f);
            TestUtils.AreEqual(a2 - b2, r2);

            float a3 = (-149.756348f);
            float2x4 b3 = float2x4(-447.192841f, -468.422f, -312.239227f, 481.437073f, -27.6018677f, 63.1561279f, -451.783752f, 364.788269f);
            float2x4 r3 = float2x4(297.4365f, 318.665649f, 162.48288f, -631.1934f, -122.15448f, -212.912476f, 302.0274f, -514.5446f);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_mul_wide_wide()
        {
            float2x4 a0 = float2x4(48.7297974f, 263.5946f, -378.487183f, 494.618347f, -185.095612f, 423.893433f, 19.8618164f, -439.218475f);
            float2x4 b0 = float2x4(351.026917f, 422.9179f, -490.6174f, 81.40454f, -357.226563f, 378.994568f, 318.321167f, 208.17157f);
            float2x4 r0 = float2x4(17105.47f, 111478.875f, 185692.391f, 40264.18f, 66121.07f, 160653.313f, 6322.43652f, -91432.8f);
            TestUtils.AreEqual(a0 * b0, r0);

            float2x4 a1 = float2x4(200.14624f, -178.356964f, -285.078064f, 56.74951f, 42.60443f, 472.961182f, -264.8566f, -278.0382f);
            float2x4 b1 = float2x4(345.885681f, -149.02887f, 293.0559f, 423.94812f, 53.42926f, -257.1869f, 87.37598f, 84.21008f);
            float2x4 r1 = float2x4(69227.72f, 26580.3359f, -83543.81f, 24058.85f, 2276.32324f, -121639.414f, -23142.1035f, -23413.6211f);
            TestUtils.AreEqual(a1 * b1, r1);

            float2x4 a2 = float2x4(88.71771f, 171.394775f, 366.3731f, -253.821564f, -217.548523f, 431.067322f, -159.4126f, -162.980865f);
            float2x4 b2 = float2x4(-59.68576f, -144.9017f, 436.8335f, -444.172668f, 292.1997f, -29.1942139f, 80.04816f, 396.248f);
            float2x4 r2 = float2x4(-5295.184f, -24835.3945f, 160044.047f, 112740.6f, -63567.6133f, -12584.6719f, -12760.6846f, -64580.84f);
            TestUtils.AreEqual(a2 * b2, r2);

            float2x4 a3 = float2x4(-190.602509f, 300.649963f, -264.473053f, -260.2057f, -217.722626f, -131.686554f, -451.578583f, -165.738892f);
            float2x4 b3 = float2x4(-81.42062f, 423.228516f, -331.0962f, 267.6739f, 351.646423f, 80.08356f, 239.805237f, 239.528442f);
            float2x4 r3 = float2x4(15518.9756f, 127243.641f, 87566.02f, -69650.2656f, -76561.38f, -10545.9277f, -108290.906f, -39699.18f);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_mul_wide_scalar()
        {
            float2x4 a0 = float2x4(-387.480865f, -48.62552f, -100.415588f, -161.453522f, -428.578979f, -198.319f, 413.477356f, -216.104736f);
            float b0 = (367.408752f);
            float2x4 r0 = float2x4(-142363.859f, -17865.4414f, -36893.5664f, -59319.4375f, -157463.672f, -72864.13f, 151915.2f, -79398.77f);
            TestUtils.AreEqual(a0 * b0, r0);

            float2x4 a1 = float2x4(-65.20349f, 89.78735f, -356.197571f, 13.6069336f, 394.3037f, -428.809479f, -362.6972f, 92.84253f);
            float b1 = (18.9765015f);
            float2x4 r1 = float2x4(-1237.33411f, 1703.84985f, -6759.384f, 258.212f, 7482.505f, -8137.30371f, -6882.724f, 1761.82642f);
            TestUtils.AreEqual(a1 * b1, r1);

            float2x4 a2 = float2x4(344.986023f, 283.081482f, -209.552551f, -398.407166f, -8.434082f, 176.073975f, -365.27417f, 236.014709f);
            float b2 = (-456.005219f);
            float2x4 r2 = float2x4(-157315.422f, -129086.633f, 95557.0547f, 181675.75f, 3845.98535f, -80290.65f, 166566.922f, -107623.938f);
            TestUtils.AreEqual(a2 * b2, r2);

            float2x4 a3 = float2x4(423.7818f, -52.75711f, -217.148438f, 268.026855f, -362.128937f, -404.337952f, -211.233734f, -70.45105f);
            float b3 = (485.64624f);
            float2x4 r3 = float2x4(205808.031f, -25621.293f, -105457.32f, 130166.234f, -175866.563f, -196365.2f, -102584.867f, -34214.29f);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_mul_scalar_wide()
        {
            float a0 = (468.915955f);
            float2x4 b0 = float2x4(123.866638f, 490.9615f, -247.1626f, -176.9495f, 382.263855f, -398.549469f, 120.569336f, -263.275879f);
            float2x4 r0 = float2x4(58083.043f, 230219.672f, -115898.484f, -82974.44f, 179249.625f, -186886.2f, 56536.8867f, -123454.258f);
            TestUtils.AreEqual(a0 * b0, r0);

            float a1 = (74.37671f);
            float2x4 b1 = float2x4(-309.856f, 404.927979f, -105.62616f, 243.92627f, -291.964081f, -92.4649353f, -144.353f, -7.56222534f);
            float2x4 r1 = float2x4(-23046.0684f, 30117.21f, -7856.126f, 18142.4336f, -21715.3281f, -6877.238f, -10736.501f, -562.4534f);
            TestUtils.AreEqual(a1 * b1, r1);

            float a2 = (-257.847656f);
            float2x4 b2 = float2x4(-215.880646f, -480.0216f, -91.38034f, -9.730133f, 47.95282f, 6.174988f, 201.409363f, 502.8886f);
            float2x4 r2 = float2x4(55664.32f, 123772.445f, 23562.207f, 2508.892f, -12364.5225f, -1592.20618f, -51932.9336f, -129668.648f);
            TestUtils.AreEqual(a2 * b2, r2);

            float a3 = (504.705566f);
            float2x4 b3 = float2x4(286.208618f, -265.3672f, -24.2191772f, 107.506653f, 133.728577f, 410.170044f, -365.492767f, -147.518616f);
            float2x4 r3 = float2x4(144451.078f, -133932.3f, -12223.5537f, 54259.207f, 67493.5547f, 207015.109f, -184466.234f, -74453.47f);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_div_wide_wide()
        {
            float2x4 a0 = float2x4(6.82073975f, -338.630859f, 497.60437f, -491.269928f, 173.454712f, -441.556519f, 321.0169f, -41.60199f);
            float2x4 b0 = float2x4(-352.736023f, 302.209717f, -489.095154f, -380.8916f, 289.646484f, -216.575256f, -289.151f, 198.978516f);
            float2x4 r0 = float2x4(-0.0193366688f, -1.12051606f, -1.01739788f, 1.28978932f, 0.5988497f, 2.03881335f, -1.110205f, -0.20907779f);
            TestUtils.AreEqual(a0 / b0, r0);

            float2x4 a1 = float2x4(-40.212616f, -169.795868f, -179.339935f, -433.401184f, -425.297119f, 335.54364f, 455.9829f, -438.431244f);
            float2x4 b1 = float2x4(-292.720581f, 9.058472f, -29.8904419f, 257.638977f, -340.1684f, 33.71222f, 281.611023f, -384.688171f);
            float2x4 r1 = float2x4(0.137375429f, -18.7444286f, 5.999909f, -1.68220353f, 1.25025463f, 9.953176f, 1.61919415f, 1.13970554f);
            TestUtils.AreEqual(a1 / b1, r1);

            float2x4 a2 = float2x4(-475.071625f, 398.719849f, 372.927673f, 31.9406128f, 472.518372f, -31.91278f, 381.816772f, 72.1203f);
            float2x4 b2 = float2x4(457.441284f, 228.607361f, -300.276f, -168.690582f, -59.6442871f, 320.390625f, 0.8565674f, -483.937256f);
            float2x4 r2 = float2x4(-1.0385412f, 1.74412513f, -1.24194968f, -0.189344376f, -7.92227364f, -0.09960585f, 445.752167f, -0.149028212f);
            TestUtils.AreEqual(a2 / b2, r2);

            float2x4 a3 = float2x4(214.974182f, 423.207275f, 165.060364f, -62.5003357f, -431.334839f, 215.506836f, -312.638855f, -324.874481f);
            float2x4 b3 = float2x4(62.5262451f, -224.534058f, -414.907623f, -475.288849f, -84.26984f, 325.772766f, -12.9821472f, 403.8437f);
            float2x4 r3 = float2x4(3.43814325f, -1.8848244f, -0.397824377f, 0.1314997f, 5.11849642f, 0.661525f, 24.0822144f, -0.804456f);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_div_wide_scalar()
        {
            float2x4 a0 = float2x4(-179.145264f, 46.96112f, 127.572754f, 391.679626f, 461.327637f, 150.55542f, 18.4229126f, 169.158569f);
            float b0 = (-93.36542f);
            float2x4 r0 = float2x4(1.918754f, -0.502981961f, -1.36638129f, -4.195125f, -4.94109774f, -1.61253941f, -0.197320521f, -1.81179047f);
            TestUtils.AreEqual(a0 / b0, r0);

            float2x4 a1 = float2x4(37.5003052f, -22.5421448f, 398.16748f, -331.000366f, -498.451965f, 502.30603f, -329.666962f, -191.8522f);
            float b1 = (121.809082f);
            float2x4 r1 = float2x4(0.307861328f, -0.185061276f, 3.268783f, -2.71737027f, -4.09207535f, 4.123716f, -2.70642352f, -1.57502377f);
            TestUtils.AreEqual(a1 / b1, r1);

            float2x4 a2 = float2x4(-35.94284f, -414.91745f, 94.42157f, -20.6722717f, 102.390625f, -167.4013f, -121.169037f, -99.98184f);
            float b2 = (-369.294861f);
            float2x4 r2 = float2x4(0.0973283f, 1.12353969f, -0.2556807f, 0.0559776872f, -0.277259827f, 0.45329985f, 0.328109175f, 0.270737171f);
            TestUtils.AreEqual(a2 / b2, r2);

            float2x4 a3 = float2x4(392.385437f, -5.702301f, -319.4804f, -370.4504f, -323.005249f, 217.078308f, 436.197083f, 165.354614f);
            float b3 = (352.320923f);
            float2x4 r3 = float2x4(1.113716f, -0.0161849633f, -0.906788051f, -1.05145729f, -0.9167927f, 0.616138f, 1.23806751f, 0.469329536f);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_div_scalar_wide()
        {
            float a0 = (451.844666f);
            float2x4 b0 = float2x4(-95.0651855f, 207.048767f, 502.384033f, 62.0412f, -110.84549f, -332.612732f, 224.279358f, -492.734528f);
            float2x4 r0 = float2x4(-4.75299835f, 2.18231034f, 0.899400949f, 7.28297758f, -4.076347f, -1.3584708f, 2.014651f, -0.9170144f);
            TestUtils.AreEqual(a0 / b0, r0);

            float a1 = (435.0329f);
            float2x4 b1 = float2x4(503.8188f, 291.349426f, 88.02417f, 328.702759f, 50.01013f, -509.816162f, 158.94751f, 68.4343262f);
            float2x4 r1 = float2x4(0.863471f, 1.49316549f, 4.94219828f, 1.32348418f, 8.698895f, -0.853313267f, 2.73695946f, 6.35694f);
            TestUtils.AreEqual(a1 / b1, r1);

            float a2 = (-237.568573f);
            float2x4 b2 = float2x4(32.9957275f, 169.610413f, -389.980072f, -383.048676f, 42.4129028f, 3.11767578f, -432.5184f, 253.8139f);
            float2x4 r2 = float2x4(-7.19998f, -1.40067208f, 0.609181345f, 0.6202047f, -5.601328f, -76.20054f, 0.5492681f, -0.9359951f);
            TestUtils.AreEqual(a2 / b2, r2);

            float a3 = (-448.56073f);
            float2x4 b3 = float2x4(303.820679f, 385.4851f, -168.352173f, -29.5488586f, -52.12848f, 325.4944f, 181.440369f, -214.250153f);
            float2x4 r3 = float2x4(-1.47639966f, -1.16362667f, 2.664419f, 15.1803064f, 8.604907f, -1.3780905f, -2.47222114f, 2.09363079f);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_mod_wide_wide()
        {
            float2x4 a0 = float2x4(157.5586f, 504.938f, 73.00708f, -387.6087f, 278.5445f, 282.228149f, 57.0862427f, -63.974762f);
            float2x4 b0 = float2x4(180.250183f, -41.4798279f, -308.673157f, -326.860046f, 411.588257f, 429.410583f, 471.1482f, 226.144348f);
            float2x4 r0 = float2x4(157.5586f, 7.18005371f, 73.00708f, -60.7486572f, 278.5445f, 282.228149f, 57.0862427f, -63.974762f);
            TestUtils.AreEqual(a0 % b0, r0);

            float2x4 a1 = float2x4(-345.268982f, -380.7162f, 470.2804f, -480.307465f, 65.2514648f, 503.1162f, 387.605835f, -281.181274f);
            float2x4 b1 = float2x4(423.907471f, -300.951752f, 67.24133f, -488.690979f, -440.438141f, 508.5224f, -108.2384f, 93.46802f);
            float2x4 r1 = float2x4(-345.268982f, -79.7644348f, 66.8324f, -480.307465f, 65.2514648f, 503.1162f, 62.890625f, -0.7772217f);
            TestUtils.AreEqual(a1 % b1, r1);

            float2x4 a2 = float2x4(89.57654f, -216.285217f, 95.61566f, 327.346619f, -362.112946f, 124.853882f, 461.3974f, 352.7256f);
            float2x4 b2 = float2x4(-20.98877f, 301.875427f, 142.5885f, 439.710449f, 61.1275635f, -37.5414734f, -345.72113f, -253.643555f);
            float2x4 r2 = float2x4(5.62146f, -216.285217f, 95.61566f, 327.346619f, -56.47513f, 12.2294617f, 115.67627f, 99.08203f);
            TestUtils.AreEqual(a2 % b2, r2);

            float2x4 a3 = float2x4(-454.7909f, -366.852783f, -175.171173f, 504.993347f, 148.557617f, 405.268738f, -299.789368f, -202.465912f);
            float2x4 b3 = float2x4(-271.911163f, -2.026184f, 320.0362f, -421.68277f, 481.628967f, 1.44519043f, -384.131134f, -125.2171f);
            float2x4 r3 = float2x4(-182.87973f, -0.113464355f, -175.171173f, 83.31058f, 148.557617f, 0.6154175f, -299.789368f, -77.24881f);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_mod_wide_scalar()
        {
            float2x4 a0 = float2x4(42.07245f, 313.0503f, 111.52063f, 131.212036f, -460.440857f, -436.485046f, -221.73172f, -316.3909f);
            float b0 = (260.272583f);
            float2x4 r0 = float2x4(42.07245f, 52.77771f, 111.52063f, 131.212036f, -200.168274f, -176.212463f, -221.73172f, -56.1183167f);
            TestUtils.AreEqual(a0 % b0, r0);

            float2x4 a1 = float2x4(24.1831055f, 335.600952f, -240.832489f, -12.3947144f, -152.489655f, -387.4286f, -240.0715f, -51.5551453f);
            float b1 = (-238.9426f);
            float2x4 r1 = float2x4(24.1831055f, 96.6583557f, -1.88989258f, -12.3947144f, -152.489655f, -148.486f, -1.12890625f, -51.5551453f);
            TestUtils.AreEqual(a1 % b1, r1);

            float2x4 a2 = float2x4(179.872742f, 179.9151f, 453.635f, -76.82529f, 213.75293f, 143.580566f, 490.95636f, 426.8548f);
            float b2 = (15.7027588f);
            float2x4 r2 = float2x4(7.142395f, 7.18475342f, 13.9577637f, -14.0142517f, 9.617065f, 2.2557373f, 4.1708374f, 2.88031f);
            TestUtils.AreEqual(a2 % b2, r2);

            float2x4 a3 = float2x4(-495.03064f, -235.307281f, -457.423737f, 320.532471f, 46.65277f, 268.335815f, 463.731384f, 90.74432f);
            float b3 = (-452.600067f);
            float2x4 r3 = float2x4(-42.4305725f, -235.307281f, -4.82366943f, 320.532471f, 46.65277f, 268.335815f, 11.1313171f, 90.74432f);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_mod_scalar_wide()
        {
            float a0 = (-162.9458f);
            float2x4 b0 = float2x4(171.125732f, 159.207947f, 491.348083f, -136.5397f, 84.48755f, 414.3911f, -85.03061f, 161.989563f);
            float2x4 r0 = float2x4(-162.9458f, -3.737854f, -162.9458f, -26.4060974f, -78.45825f, -162.9458f, -77.91519f, -0.9562378f);
            TestUtils.AreEqual(a0 % b0, r0);

            float a1 = (-7.60800171f);
            float2x4 b1 = float2x4(-85.22388f, 160.841248f, -234.483124f, 114.877625f, -40.5487061f, -85.7437439f, -235.708923f, -135.851166f);
            float2x4 r1 = float2x4(-7.60800171f, -7.60800171f, -7.60800171f, -7.60800171f, -7.60800171f, -7.60800171f, -7.60800171f, -7.60800171f);
            TestUtils.AreEqual(a1 % b1, r1);

            float a2 = (391.487f);
            float2x4 b2 = float2x4(240.695984f, -81.43179f, -398.1865f, -209.346069f, -431.59314f, 411.7469f, -119.326263f, -296.96582f);
            float2x4 r2 = float2x4(150.791016f, 65.75983f, 391.487f, 182.14093f, 391.487f, 391.487f, 33.50821f, 94.52118f);
            TestUtils.AreEqual(a2 % b2, r2);

            float a3 = (-319.028f);
            float2x4 b3 = float2x4(194.759827f, -189.406708f, -292.210022f, -228.648621f, 306.944519f, 313.818237f, 224.436829f, 426.099548f);
            float2x4 r3 = float2x4(-124.268188f, -129.6213f, -26.8179932f, -90.3793945f, -12.0834961f, -5.209778f, -94.59119f, -319.028f);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_plus()
        {
            float2x4 a0 = float2x4(150.599854f, -137.8551f, 439.0912f, 401.849243f, 401.823547f, -299.614624f, -364.624817f, 444.5669f);
            float2x4 r0 = float2x4(150.599854f, -137.8551f, 439.0912f, 401.849243f, 401.823547f, -299.614624f, -364.624817f, 444.5669f);
            TestUtils.AreEqual(+a0, r0);

            float2x4 a1 = float2x4(-135.177917f, -458.637817f, -176.78833f, 67.19397f, -202.573944f, -83.5177f, 466.917053f, 369.197021f);
            float2x4 r1 = float2x4(-135.177917f, -458.637817f, -176.78833f, 67.19397f, -202.573944f, -83.5177f, 466.917053f, 369.197021f);
            TestUtils.AreEqual(+a1, r1);

            float2x4 a2 = float2x4(453.9458f, 27.9801025f, -277.2133f, -419.9559f, -418.334534f, -85.52872f, 184.964111f, -113.681641f);
            float2x4 r2 = float2x4(453.9458f, 27.9801025f, -277.2133f, -419.9559f, -418.334534f, -85.52872f, 184.964111f, -113.681641f);
            TestUtils.AreEqual(+a2, r2);

            float2x4 a3 = float2x4(-496.363739f, -214.060791f, -316.094727f, -287.7664f, -259.0204f, 504.885f, 195.073181f, 279.805542f);
            float2x4 r3 = float2x4(-496.363739f, -214.060791f, -316.094727f, -287.7664f, -259.0204f, 504.885f, 195.073181f, 279.805542f);
            TestUtils.AreEqual(+a3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_neg()
        {
            float2x4 a0 = float2x4(-169.281158f, -377.0252f, 36.6141357f, -258.382446f, 469.914551f, 388.945984f, 350.969238f, 176.102539f);
            float2x4 r0 = float2x4(169.281158f, 377.0252f, -36.6141357f, 258.382446f, -469.914551f, -388.945984f, -350.969238f, -176.102539f);
            TestUtils.AreEqual(-a0, r0);

            float2x4 a1 = float2x4(494.421631f, -60.8139343f, 313.8802f, 381.035767f, 327.1795f, 292.367554f, 462.13623f, 448.669861f);
            float2x4 r1 = float2x4(-494.421631f, 60.8139343f, -313.8802f, -381.035767f, -327.1795f, -292.367554f, -462.13623f, -448.669861f);
            TestUtils.AreEqual(-a1, r1);

            float2x4 a2 = float2x4(339.456848f, 385.7409f, -37.0343628f, -298.235046f, -14.9801636f, -116.370148f, 258.546448f, 369.4939f);
            float2x4 r2 = float2x4(-339.456848f, -385.7409f, 37.0343628f, 298.235046f, 14.9801636f, 116.370148f, -258.546448f, -369.4939f);
            TestUtils.AreEqual(-a2, r2);

            float2x4 a3 = float2x4(292.990967f, 160.560852f, -429.3812f, 282.849731f, -12.6661682f, -273.521271f, -138.772888f, 97.6513062f);
            float2x4 r3 = float2x4(-292.990967f, -160.560852f, 429.3812f, -282.849731f, 12.6661682f, 273.521271f, 138.772888f, -97.6513062f);
            TestUtils.AreEqual(-a3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_prefix_inc()
        {
            float2x4 a0 = float2x4(86.58539f, 161.589783f, 443.929626f, -338.268433f, -34.5586548f, -368.567474f, 359.1416f, 145.026123f);
            float2x4 r0 = float2x4(87.58539f, 162.589783f, 444.929626f, -337.268433f, -33.5586548f, -367.567474f, 360.1416f, 146.026123f);
            TestUtils.AreEqual(++a0, r0);

            float2x4 a1 = float2x4(157.233154f, -484.200439f, 346.040466f, 381.775635f, 244.663025f, 49.9732056f, -105.417908f, 218.376526f);
            float2x4 r1 = float2x4(158.233154f, -483.200439f, 347.040466f, 382.775635f, 245.663025f, 50.9732056f, -104.417908f, 219.376526f);
            TestUtils.AreEqual(++a1, r1);

            float2x4 a2 = float2x4(166.647827f, 352.001953f, 75.30719f, -18.34317f, -484.351f, 49.86487f, -269.916f, -205.470337f);
            float2x4 r2 = float2x4(167.647827f, 353.001953f, 76.30719f, -17.34317f, -483.351f, 50.86487f, -268.916f, -204.470337f);
            TestUtils.AreEqual(++a2, r2);

            float2x4 a3 = float2x4(375.4276f, -218.1582f, -343.9989f, 506.713318f, 312.928345f, -29.0180664f, -309.897827f, -6.816864f);
            float2x4 r3 = float2x4(376.4276f, -217.1582f, -342.9989f, 507.713318f, 313.928345f, -28.0180664f, -308.897827f, -5.816864f);
            TestUtils.AreEqual(++a3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_postfix_inc()
        {
            float2x4 a0 = float2x4(-281.7821f, 215.342224f, 120.820862f, -325.353668f, -179.722931f, 44.56366f, -375.17334f, 193.365723f);
            float2x4 r0 = float2x4(-281.7821f, 215.342224f, 120.820862f, -325.353668f, -179.722931f, 44.56366f, -375.17334f, 193.365723f);
            TestUtils.AreEqual(a0++, r0);

            float2x4 a1 = float2x4(329.5243f, -130.474335f, 277.307373f, -15.2096863f, -362.9092f, 480.75708f, 20.4838257f, -132.573273f);
            float2x4 r1 = float2x4(329.5243f, -130.474335f, 277.307373f, -15.2096863f, -362.9092f, 480.75708f, 20.4838257f, -132.573273f);
            TestUtils.AreEqual(a1++, r1);

            float2x4 a2 = float2x4(-43.3430176f, 423.3778f, 413.74353f, -39.5121155f, 121.25531f, -293.2835f, -121.773895f, 337.215637f);
            float2x4 r2 = float2x4(-43.3430176f, 423.3778f, 413.74353f, -39.5121155f, 121.25531f, -293.2835f, -121.773895f, 337.215637f);
            TestUtils.AreEqual(a2++, r2);

            float2x4 a3 = float2x4(64.4483643f, 342.496338f, 357.928772f, 394.4254f, 71.8752441f, 176.151672f, -239.430359f, 7.44989f);
            float2x4 r3 = float2x4(64.4483643f, 342.496338f, 357.928772f, 394.4254f, 71.8752441f, 176.151672f, -239.430359f, 7.44989f);
            TestUtils.AreEqual(a3++, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_prefix_dec()
        {
            float2x4 a0 = float2x4(340.001831f, 496.070862f, 288.384216f, 183.694641f, -353.6148f, 398.281921f, -240.591583f, 15.32019f);
            float2x4 r0 = float2x4(339.001831f, 495.070862f, 287.384216f, 182.694641f, -354.6148f, 397.281921f, -241.591583f, 14.32019f);
            TestUtils.AreEqual(--a0, r0);

            float2x4 a1 = float2x4(276.588684f, -305.8037f, -268.388153f, 349.170227f, 468.03656f, -93.05707f, 429.558044f, -164.938538f);
            float2x4 r1 = float2x4(275.588684f, -306.8037f, -269.388153f, 348.170227f, 467.03656f, -94.05707f, 428.558044f, -165.938538f);
            TestUtils.AreEqual(--a1, r1);

            float2x4 a2 = float2x4(278.540283f, 96.54895f, -142.570221f, -2.399109f, 225.875671f, -388.630585f, -455.2949f, -248.5845f);
            float2x4 r2 = float2x4(277.540283f, 95.54895f, -143.570221f, -3.399109f, 224.875671f, -389.630585f, -456.2949f, -249.5845f);
            TestUtils.AreEqual(--a2, r2);

            float2x4 a3 = float2x4(384.1317f, 240.107849f, -385.305054f, 73.84015f, -497.545959f, -71.49823f, -383.514832f, 4.63079834f);
            float2x4 r3 = float2x4(383.1317f, 239.107849f, -386.305054f, 72.84015f, -498.545959f, -72.49823f, -384.514832f, 3.63079834f);
            TestUtils.AreEqual(--a3, r3);
        }

        [TestCompiler]
        public static void float2x4_operator_postfix_dec()
        {
            float2x4 a0 = float2x4(-148.111755f, 252.8498f, -106.1579f, 132.648621f, -370.723755f, 343.311157f, -321.157837f, 450.6018f);
            float2x4 r0 = float2x4(-148.111755f, 252.8498f, -106.1579f, 132.648621f, -370.723755f, 343.311157f, -321.157837f, 450.6018f);
            TestUtils.AreEqual(a0--, r0);

            float2x4 a1 = float2x4(330.9572f, 269.754517f, -164.309845f, 234.149658f, -320.725952f, -337.031372f, -310.267639f, -298.127167f);
            float2x4 r1 = float2x4(330.9572f, 269.754517f, -164.309845f, 234.149658f, -320.725952f, -337.031372f, -310.267639f, -298.127167f);
            TestUtils.AreEqual(a1--, r1);

            float2x4 a2 = float2x4(453.00238f, -134.770233f, 416.1966f, 511.618652f, -239.314911f, -492.061157f, 475.658264f, 56.15918f);
            float2x4 r2 = float2x4(453.00238f, -134.770233f, 416.1966f, 511.618652f, -239.314911f, -492.061157f, 475.658264f, 56.15918f);
            TestUtils.AreEqual(a2--, r2);

            float2x4 a3 = float2x4(24.9328f, 247.940613f, -467.1975f, -173.623566f, 294.711548f, 47.24408f, -130.603f, -335.9472f);
            float2x4 r3 = float2x4(24.9328f, 247.940613f, -467.1975f, -173.623566f, 294.711548f, 47.24408f, -130.603f, -335.9472f);
            TestUtils.AreEqual(a3--, r3);
        }


    }
}
