//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using NUnit.Framework;
using static Unity.Mathematics.math;
using Burst.Compiler.IL.Tests;

namespace Unity.Mathematics.Tests
{
    [TestFixture]
    public class TestDouble3
    {
        [TestCompiler]
        public static void double3_zero()
        {
            TestUtils.AreEqual(double3.zero.x, 0.0);
            TestUtils.AreEqual(double3.zero.y, 0.0);
            TestUtils.AreEqual(double3.zero.z, 0.0);
        }

        [TestCompiler]
        public static void double3_constructor()
        {
            double3 a = new double3(1, 2, 3);
            TestUtils.AreEqual(a.x, 1);
            TestUtils.AreEqual(a.y, 2);
            TestUtils.AreEqual(a.z, 3);
        }

        [TestCompiler]
        public static void double3_scalar_constructor()
        {
            double3 a = new double3(17.0);
            TestUtils.AreEqual(a.x, 17.0);
            TestUtils.AreEqual(a.y, 17.0);
            TestUtils.AreEqual(a.z, 17.0);
        }

        [TestCompiler]
        public static void double3_static_constructor()
        {
            double3 a = double3(1, 2, 3);
            TestUtils.AreEqual(a.x, 1);
            TestUtils.AreEqual(a.y, 2);
            TestUtils.AreEqual(a.z, 3);
        }

        [TestCompiler]
        public static void double3_static_scalar_constructor()
        {
            double3 a = double3(17.0);
            TestUtils.AreEqual(a.x, 17.0);
            TestUtils.AreEqual(a.y, 17.0);
            TestUtils.AreEqual(a.z, 17.0);
        }

        [TestCompiler]
        public static void double3_operator_equal_wide_wide()
        {
            double3 a0 = double3(331.74411336134381, -417.68328280825324, -438.45087620171296);
            double3 b0 = double3(-426.58283277348744, 431.34453149854414, 263.33917987688403);
            bool3 r0 = bool3(false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            double3 a1 = double3(-57.990659979167674, -183.11340030613979, 72.322805676759572);
            double3 b1 = double3(-309.39192905528091, 391.19957441426789, -468.23727748740339);
            bool3 r1 = bool3(false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            double3 a2 = double3(-292.70611562053955, -181.37693437439248, 43.847759028825749);
            double3 b2 = double3(-389.91158145941404, -192.67202505500615, -8.9501826804830671);
            bool3 r2 = bool3(false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            double3 a3 = double3(481.28738020420417, 258.42531287783072, 352.58044759956215);
            double3 b3 = double3(-339.08699599797228, 104.67790680037717, -443.50479933410173);
            bool3 r3 = bool3(false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_equal_wide_scalar()
        {
            double3 a0 = double3(327.10191431972282, 440.46724745280449, -443.74519440333603);
            double b0 = (342.44057504387604);
            bool3 r0 = bool3(false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            double3 a1 = double3(325.54625597854431, 58.382070330149531, -398.43499369101369);
            double b1 = (435.37174793489828);
            bool3 r1 = bool3(false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            double3 a2 = double3(377.06661551867921, -17.79271484249864, -92.372576994994915);
            double b2 = (445.50211235764539);
            bool3 r2 = bool3(false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            double3 a3 = double3(-350.23152200795312, 14.983312852207291, -504.42695665006852);
            double b3 = (450.23677775367946);
            bool3 r3 = bool3(false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_equal_scalar_wide()
        {
            double a0 = (430.78112884554139);
            double3 b0 = double3(-434.72746225573468, 103.73032074036553, -263.03657090991578);
            bool3 r0 = bool3(false, false, false);
            TestUtils.AreEqual(a0 == b0, r0);

            double a1 = (-224.56018291439869);
            double3 b1 = double3(204.11080298391676, 196.56822476003697, -424.75656743755405);
            bool3 r1 = bool3(false, false, false);
            TestUtils.AreEqual(a1 == b1, r1);

            double a2 = (467.45050332855919);
            double3 b2 = double3(-45.433633110222218, 138.19161063907279, 181.06193717804831);
            bool3 r2 = bool3(false, false, false);
            TestUtils.AreEqual(a2 == b2, r2);

            double a3 = (-449.21580073294035);
            double3 b3 = double3(-335.15445700993507, -77.466203964066779, 107.90240125912351);
            bool3 r3 = bool3(false, false, false);
            TestUtils.AreEqual(a3 == b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_not_equal_wide_wide()
        {
            double3 a0 = double3(19.253994712258645, 121.33544045376379, 468.30967615000418);
            double3 b0 = double3(-249.06633507882538, -19.04659057550441, 323.62254896928675);
            bool3 r0 = bool3(true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            double3 a1 = double3(-212.3654521500531, -410.63349337625948, 507.53425359517996);
            double3 b1 = double3(294.94198026086292, -492.46095990224785, -166.48327048424784);
            bool3 r1 = bool3(true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            double3 a2 = double3(52.201180720795492, -319.64238682372604, -448.90629670066119);
            double3 b2 = double3(421.19530482832124, 87.662903588108179, 193.87513670412602);
            bool3 r2 = bool3(true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            double3 a3 = double3(255.3703111407209, -70.462687286763753, -18.913782366976989);
            double3 b3 = double3(-279.28983200680921, 158.5136307023995, 426.63510413963115);
            bool3 r3 = bool3(true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_not_equal_wide_scalar()
        {
            double3 a0 = double3(-418.02227206622354, 231.44822632123169, -469.47851083682781);
            double b0 = (-206.33659205508258);
            bool3 r0 = bool3(true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            double3 a1 = double3(-94.974084183096011, -428.11901088623284, 492.92776774471986);
            double b1 = (-376.08437770236486);
            bool3 r1 = bool3(true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            double3 a2 = double3(-91.333830160709965, -124.3909161670091, -409.29052205071343);
            double b2 = (80.418608941332764);
            bool3 r2 = bool3(true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            double3 a3 = double3(353.96103851588487, -494.89575242199737, 181.01510843123083);
            double b3 = (170.98932441090665);
            bool3 r3 = bool3(true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_not_equal_scalar_wide()
        {
            double a0 = (357.34340898941434);
            double3 b0 = double3(192.97637400076553, -323.1933154180615, -25.125236284511743);
            bool3 r0 = bool3(true, true, true);
            TestUtils.AreEqual(a0 != b0, r0);

            double a1 = (-270.50307739456326);
            double3 b1 = double3(-454.42681977452094, -458.81890103724731, -274.53837049870674);
            bool3 r1 = bool3(true, true, true);
            TestUtils.AreEqual(a1 != b1, r1);

            double a2 = (127.64221078140758);
            double3 b2 = double3(-43.887720366887606, -179.47230180514617, 498.28768920259904);
            bool3 r2 = bool3(true, true, true);
            TestUtils.AreEqual(a2 != b2, r2);

            double a3 = (-333.81438866900953);
            double3 b3 = double3(-169.48795779491212, -146.25878126279395, -33.0286543523095);
            bool3 r3 = bool3(true, true, true);
            TestUtils.AreEqual(a3 != b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_less_wide_wide()
        {
            double3 a0 = double3(487.82488011188104, -508.92173480844207, 53.876066948229436);
            double3 b0 = double3(453.09734770893, -123.83057814642348, 492.75013636646338);
            bool3 r0 = bool3(false, true, true);
            TestUtils.AreEqual(a0 < b0, r0);

            double3 a1 = double3(443.78694531125336, -81.078602590169112, 103.16550521886234);
            double3 b1 = double3(434.4634313222316, -402.46478933955768, -480.75231598352656);
            bool3 r1 = bool3(false, false, false);
            TestUtils.AreEqual(a1 < b1, r1);

            double3 a2 = double3(-496.19975470760824, 30.001322044991525, 490.88452862709971);
            double3 b2 = double3(317.30066051953509, 175.82104428849232, 301.86634244670461);
            bool3 r2 = bool3(true, true, false);
            TestUtils.AreEqual(a2 < b2, r2);

            double3 a3 = double3(485.69708298412013, -360.6310734043974, -442.65436169256191);
            double3 b3 = double3(77.7766850356835, -188.5760563298017, 479.33786819844408);
            bool3 r3 = bool3(false, true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_less_wide_scalar()
        {
            double3 a0 = double3(18.15358901869206, -409.34645695674533, 180.78649028613529);
            double b0 = (152.320865940452);
            bool3 r0 = bool3(true, true, false);
            TestUtils.AreEqual(a0 < b0, r0);

            double3 a1 = double3(-185.15496572533385, 124.1257570367892, 265.74384534812714);
            double b1 = (228.26473127504096);
            bool3 r1 = bool3(true, true, false);
            TestUtils.AreEqual(a1 < b1, r1);

            double3 a2 = double3(-307.54556694046858, 36.373661296616206, 131.67983132772144);
            double b2 = (493.12318371847425);
            bool3 r2 = bool3(true, true, true);
            TestUtils.AreEqual(a2 < b2, r2);

            double3 a3 = double3(85.934578220329513, -36.894802825942065, -491.25716256129425);
            double b3 = (-89.371177953375138);
            bool3 r3 = bool3(false, false, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_less_scalar_wide()
        {
            double a0 = (416.68128915162822);
            double3 b0 = double3(-105.38907938142728, -389.249608459533, 408.84688944781522);
            bool3 r0 = bool3(false, false, false);
            TestUtils.AreEqual(a0 < b0, r0);

            double a1 = (-87.039535324573308);
            double3 b1 = double3(268.69133508796403, -470.20163295706811, 271.31567419288479);
            bool3 r1 = bool3(true, false, true);
            TestUtils.AreEqual(a1 < b1, r1);

            double a2 = (-170.32271750752011);
            double3 b2 = double3(-156.5984128250733, -0.288699388638463, 72.090836796951862);
            bool3 r2 = bool3(true, true, true);
            TestUtils.AreEqual(a2 < b2, r2);

            double a3 = (-54.429979111268153);
            double3 b3 = double3(191.60324797015789, 370.54399149983374, 283.23240412549694);
            bool3 r3 = bool3(true, true, true);
            TestUtils.AreEqual(a3 < b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_greater_wide_wide()
        {
            double3 a0 = double3(-188.03303131276419, 234.30020367088741, -56.305944230549926);
            double3 b0 = double3(-17.400830992218516, -59.539615897247415, -24.285316717012449);
            bool3 r0 = bool3(false, true, false);
            TestUtils.AreEqual(a0 > b0, r0);

            double3 a1 = double3(240.95838248029281, 501.48760938154885, -303.42498435798336);
            double3 b1 = double3(222.38749109133494, -207.17042574992888, 365.54648630951829);
            bool3 r1 = bool3(true, true, false);
            TestUtils.AreEqual(a1 > b1, r1);

            double3 a2 = double3(-305.509098910498, -470.74254177079655, -305.09075155159962);
            double3 b2 = double3(183.57330068553483, -23.080710183400981, 337.16379920447423);
            bool3 r2 = bool3(false, false, false);
            TestUtils.AreEqual(a2 > b2, r2);

            double3 a3 = double3(26.045478117673383, 169.99735816288614, -498.38803433738093);
            double3 b3 = double3(175.81176026901778, -8.5140435735294773, -125.86538249154825);
            bool3 r3 = bool3(false, true, false);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_greater_wide_scalar()
        {
            double3 a0 = double3(468.88079831976484, -355.42101089815657, -45.708264610594256);
            double b0 = (201.80273232320451);
            bool3 r0 = bool3(true, false, false);
            TestUtils.AreEqual(a0 > b0, r0);

            double3 a1 = double3(407.1765884864966, 418.54536147534168, -422.75017686502554);
            double b1 = (348.72522871043782);
            bool3 r1 = bool3(true, true, false);
            TestUtils.AreEqual(a1 > b1, r1);

            double3 a2 = double3(-364.27550928866282, -255.04906833127563, 178.80637868624478);
            double b2 = (434.16361948203462);
            bool3 r2 = bool3(false, false, false);
            TestUtils.AreEqual(a2 > b2, r2);

            double3 a3 = double3(379.82339232965535, -121.10213261521523, 164.48760254890078);
            double b3 = (-346.9423937028937);
            bool3 r3 = bool3(true, true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_greater_scalar_wide()
        {
            double a0 = (137.5041864558608);
            double3 b0 = double3(-443.866813627941, 279.85275639214217, -462.40431115701995);
            bool3 r0 = bool3(true, false, true);
            TestUtils.AreEqual(a0 > b0, r0);

            double a1 = (-280.71377028185583);
            double3 b1 = double3(120.71278553861794, -31.670009866203202, 363.42834418054122);
            bool3 r1 = bool3(false, false, false);
            TestUtils.AreEqual(a1 > b1, r1);

            double a2 = (263.125410440902);
            double3 b2 = double3(-156.36087257990653, 66.354000837706963, -303.12960519601108);
            bool3 r2 = bool3(true, true, true);
            TestUtils.AreEqual(a2 > b2, r2);

            double a3 = (419.33739371753177);
            double3 b3 = double3(-392.72105640579065, -378.76293986791882, -398.36114258242822);
            bool3 r3 = bool3(true, true, true);
            TestUtils.AreEqual(a3 > b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_less_equal_wide_wide()
        {
            double3 a0 = double3(333.04760686170664, 239.35082756697705, 26.569201720212163);
            double3 b0 = double3(46.131192944073632, -378.08232301198052, -466.77821443359284);
            bool3 r0 = bool3(false, false, false);
            TestUtils.AreEqual(a0 <= b0, r0);

            double3 a1 = double3(41.492498178729988, -162.66233904783724, -271.00273454887918);
            double3 b1 = double3(-173.33503373588206, -482.23928640887107, 183.34649356796706);
            bool3 r1 = bool3(false, false, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            double3 a2 = double3(-108.98620920487969, 392.08160537857634, 314.48862924915204);
            double3 b2 = double3(399.07617134557859, -127.63707238418846, -118.19683914920171);
            bool3 r2 = bool3(true, false, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            double3 a3 = double3(208.10215745125993, 39.935965795040147, 458.77050254250435);
            double3 b3 = double3(-329.72744504070255, -208.8176177520387, 368.28686850531346);
            bool3 r3 = bool3(false, false, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_less_equal_wide_scalar()
        {
            double3 a0 = double3(122.81770640370326, -283.69426144459021, -288.84764994720354);
            double b0 = (-181.94389947780587);
            bool3 r0 = bool3(false, true, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            double3 a1 = double3(-185.45390447669376, 279.57381428385793, -317.9591602375541);
            double b1 = (-315.2538966216398);
            bool3 r1 = bool3(false, false, true);
            TestUtils.AreEqual(a1 <= b1, r1);

            double3 a2 = double3(-255.569789767065, -132.48886758298096, -207.25397477264238);
            double b2 = (-368.80326216705294);
            bool3 r2 = bool3(false, false, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            double3 a3 = double3(-328.49221364059122, -192.52138981247384, 454.18384692360826);
            double b3 = (-115.35588770516023);
            bool3 r3 = bool3(true, true, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_less_equal_scalar_wide()
        {
            double a0 = (-336.46568385533322);
            double3 b0 = double3(251.95838630011235, -22.858304749642627, -238.90586220422102);
            bool3 r0 = bool3(true, true, true);
            TestUtils.AreEqual(a0 <= b0, r0);

            double a1 = (284.66662014865619);
            double3 b1 = double3(-358.3240021943692, 468.53025625112014, -439.03722092091908);
            bool3 r1 = bool3(false, true, false);
            TestUtils.AreEqual(a1 <= b1, r1);

            double a2 = (-197.06769594786118);
            double3 b2 = double3(-367.5955204291248, -143.89508754755144, -387.84270614564548);
            bool3 r2 = bool3(false, true, false);
            TestUtils.AreEqual(a2 <= b2, r2);

            double a3 = (-88.237509530148259);
            double3 b3 = double3(439.36053415730623, -487.98472117259388, -393.41587013444672);
            bool3 r3 = bool3(true, false, false);
            TestUtils.AreEqual(a3 <= b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_greater_equal_wide_wide()
        {
            double3 a0 = double3(143.64125377668131, -251.70416295328374, 118.57615881719448);
            double3 b0 = double3(-409.2710322855371, -84.9138353266352, 509.12827157840513);
            bool3 r0 = bool3(true, false, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            double3 a1 = double3(23.871594201713606, 84.634044448209011, -145.38224155520192);
            double3 b1 = double3(-61.134530811167565, 139.21721822545737, -30.229416146049914);
            bool3 r1 = bool3(true, false, false);
            TestUtils.AreEqual(a1 >= b1, r1);

            double3 a2 = double3(-234.44732653091069, 90.461873811884743, 203.55582604350332);
            double3 b2 = double3(210.73626075067386, 27.014938605490556, 467.6829266341789);
            bool3 r2 = bool3(false, true, false);
            TestUtils.AreEqual(a2 >= b2, r2);

            double3 a3 = double3(370.97961180795892, -64.089706689161119, -140.50303155766011);
            double3 b3 = double3(-206.05482993184347, 109.55236654614669, -413.97032160962482);
            bool3 r3 = bool3(true, false, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_greater_equal_wide_scalar()
        {
            double3 a0 = double3(-355.36085359908679, 304.30147209032509, 385.1285471325408);
            double b0 = (-139.19751436039689);
            bool3 r0 = bool3(false, true, true);
            TestUtils.AreEqual(a0 >= b0, r0);

            double3 a1 = double3(-263.95484483612461, 126.50078660179895, 77.010820663073446);
            double b1 = (-435.80643650321588);
            bool3 r1 = bool3(true, true, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            double3 a2 = double3(-226.75392376014679, -413.1957916753347, -11.07635713139382);
            double b2 = (-212.65009675391491);
            bool3 r2 = bool3(false, false, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            double3 a3 = double3(-457.00790355028954, 280.99802006455047, -112.26507215959253);
            double b3 = (-123.01295214659206);
            bool3 r3 = bool3(false, true, true);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_greater_equal_scalar_wide()
        {
            double a0 = (-246.0732854558496);
            double3 b0 = double3(142.15627557698463, -19.29862476293863, -151.98687584325057);
            bool3 r0 = bool3(false, false, false);
            TestUtils.AreEqual(a0 >= b0, r0);

            double a1 = (330.020889197486);
            double3 b1 = double3(-224.80012260414668, 451.59992119837545, -435.98180576599287);
            bool3 r1 = bool3(true, false, true);
            TestUtils.AreEqual(a1 >= b1, r1);

            double a2 = (405.88183064287614);
            double3 b2 = double3(-324.02012720891281, 300.85477914514706, -341.6529263656833);
            bool3 r2 = bool3(true, true, true);
            TestUtils.AreEqual(a2 >= b2, r2);

            double a3 = (349.34832422311808);
            double3 b3 = double3(-342.97096721407536, 397.82466024804148, 363.17085354550318);
            bool3 r3 = bool3(true, false, false);
            TestUtils.AreEqual(a3 >= b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_add_wide_wide()
        {
            double3 a0 = double3(-404.27537054767618, -214.93513522620088, -164.2730897237887);
            double3 b0 = double3(433.90024944483309, 359.72051994862056, 420.50439115078393);
            double3 r0 = double3(29.624878897156918, 144.78538472241968, 256.23130142699523);
            TestUtils.AreEqual(a0 + b0, r0);

            double3 a1 = double3(338.47717563178264, 302.84880771434348, -330.63301840919678);
            double3 b1 = double3(-416.371905282313, -163.21369154900952, -35.65208698979211);
            double3 r1 = double3(-77.894729650530337, 139.63511616533395, -366.28510539898889);
            TestUtils.AreEqual(a1 + b1, r1);

            double3 a2 = double3(-21.244342098592028, 157.13040383026487, 32.444800153581809);
            double3 b2 = double3(260.76101482136221, -20.117472896407094, 156.77011568693911);
            double3 r2 = double3(239.51667272277018, 137.01293093385777, 189.21491584052092);
            TestUtils.AreEqual(a2 + b2, r2);

            double3 a3 = double3(-333.966129220075, -488.63531588420051, 484.60532520925869);
            double3 b3 = double3(315.04057350523794, -110.87443380750454, -373.96641629467086);
            double3 r3 = double3(-18.92555571483706, -599.50974969170511, 110.63890891458783);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_add_wide_scalar()
        {
            double3 a0 = double3(-323.42942276756719, 324.634587200654, -277.88344706123854);
            double b0 = (-311.26692190359665);
            double3 r0 = double3(-634.69634467116384, 13.367665297057329, -589.15036896483525);
            TestUtils.AreEqual(a0 + b0, r0);

            double3 a1 = double3(-472.86264513100622, 144.10591918980049, -334.47418872195954);
            double b1 = (-459.05652997412557);
            double3 r1 = double3(-931.91917510513179, -314.95061078432508, -793.53071869608516);
            TestUtils.AreEqual(a1 + b1, r1);

            double3 a2 = double3(149.11431343346567, 303.38458146871278, -7.709385637058574);
            double b2 = (-388.34398263895139);
            double3 r2 = double3(-239.22966920548572, -84.9594011702386, -396.05336827600996);
            TestUtils.AreEqual(a2 + b2, r2);

            double3 a3 = double3(-29.018897308511157, 101.80118827791944, -410.41598982848973);
            double b3 = (45.12297942355417);
            double3 r3 = double3(16.104082115043013, 146.92416770147361, -365.29301040493556);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_add_scalar_wide()
        {
            double a0 = (190.83125194852767);
            double3 b0 = double3(411.15716881824528, -70.761643204261361, -404.53508991959279);
            double3 r0 = double3(601.988420766773, 120.0696087442663, -213.70383797106513);
            TestUtils.AreEqual(a0 + b0, r0);

            double a1 = (238.02884232161045);
            double3 b1 = double3(442.24392506212178, 151.43196327585349, -447.09386154967075);
            double3 r1 = double3(680.27276738373223, 389.46080559746395, -209.06501922806029);
            TestUtils.AreEqual(a1 + b1, r1);

            double a2 = (-299.92477836270109);
            double3 b2 = double3(477.43272541343822, -292.32724894784729, 59.315583971941692);
            double3 r2 = double3(177.50794705073713, -592.25202731054833, -240.6091943907594);
            TestUtils.AreEqual(a2 + b2, r2);

            double a3 = (-378.93333238127332);
            double3 b3 = double3(-228.86587463545885, -309.56731023898692, -78.709975994522665);
            double3 r3 = double3(-607.79920701673223, -688.50064262026024, -457.643308375796);
            TestUtils.AreEqual(a3 + b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_sub_wide_wide()
        {
            double3 a0 = double3(379.05223649509821, -16.164036996739014, 107.16038208229486);
            double3 b0 = double3(236.68317877346794, 20.170748481606438, 111.4803836864794);
            double3 r0 = double3(142.36905772163027, -36.334785478345452, -4.32000160418454);
            TestUtils.AreEqual(a0 - b0, r0);

            double3 a1 = double3(30.064602627449062, -428.43869443817005, 245.62773215287723);
            double3 b1 = double3(-484.679841028843, -447.70867630825785, 18.1945517147866);
            double3 r1 = double3(514.74444365629211, 19.269981870087804, 227.43318043809063);
            TestUtils.AreEqual(a1 - b1, r1);

            double3 a2 = double3(179.60420449990977, 505.37777805019994, 317.71882858766185);
            double3 b2 = double3(-296.14766063175523, 367.63596051169372, -267.45500219401674);
            double3 r2 = double3(475.751865131665, 137.74181753850621, 585.17383078167859);
            TestUtils.AreEqual(a2 - b2, r2);

            double3 a3 = double3(-198.47338900271495, 166.69455845965751, -379.02708190447981);
            double3 b3 = double3(-71.1860635612095, -248.33460843206132, -138.19108230350122);
            double3 r3 = double3(-127.28732544150546, 415.02916689171883, -240.8359996009786);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_sub_wide_scalar()
        {
            double3 a0 = double3(102.56966142662316, -199.24868759850443, 218.15437827732148);
            double b0 = (-504.27757405875138);
            double3 r0 = double3(606.84723548537454, 305.02888646024695, 722.43195233607287);
            TestUtils.AreEqual(a0 - b0, r0);

            double3 a1 = double3(72.79636791758071, 13.459313160488023, -31.259209885848293);
            double b1 = (-139.42634851272516);
            double3 r1 = double3(212.22271643030587, 152.88566167321318, 108.16713862687686);
            TestUtils.AreEqual(a1 - b1, r1);

            double3 a2 = double3(-273.21787489262312, 484.57066248570129, 118.8643591957466);
            double b2 = (-375.99724524840587);
            double3 r2 = double3(102.77937035578276, 860.56790773410717, 494.86160444415248);
            TestUtils.AreEqual(a2 - b2, r2);

            double3 a3 = double3(-126.18295174752501, 128.219562828643, -59.646107463001329);
            double b3 = (-323.06732884192252);
            double3 r3 = double3(196.88437709439751, 451.28689167056552, 263.42122137892119);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_sub_scalar_wide()
        {
            double a0 = (385.51228135894621);
            double3 b0 = double3(78.826067245950071, -43.925143500755155, -401.83536762829652);
            double3 r0 = double3(306.68621411299614, 429.43742485970137, 787.34764898724279);
            TestUtils.AreEqual(a0 - b0, r0);

            double a1 = (-336.14667931950964);
            double3 b1 = double3(25.871118319160814, 188.92978080964167, 132.73553449136);
            double3 r1 = double3(-362.01779763867046, -525.07646012915131, -468.88221381086964);
            TestUtils.AreEqual(a1 - b1, r1);

            double a2 = (-391.64339822886672);
            double3 b2 = double3(-131.12338477518568, 43.832313319590071, -278.08958948687166);
            double3 r2 = double3(-260.52001345368103, -435.47571154845679, -113.55380874199506);
            TestUtils.AreEqual(a2 - b2, r2);

            double a3 = (-440.45503946787449);
            double3 b3 = double3(-375.45243161518704, 190.74367079080253, 364.12960856227653);
            double3 r3 = double3(-65.002607852687447, -631.198710258677, -804.584648030151);
            TestUtils.AreEqual(a3 - b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_mul_wide_wide()
        {
            double3 a0 = double3(48.729794286531273, 263.59457958098244, -378.48718493920154);
            double3 b0 = double3(351.02689258708938, 422.91789956713, -490.61739109950952);
            double3 r0 = double3(17105.468264809177, 111478.86593366979, 185692.39523946863);
            TestUtils.AreEqual(a0 * b0, r0);

            double3 a1 = double3(494.61832236434259, -185.09561094320173, 423.89342494676509);
            double3 b1 = double3(81.404518403766929, -357.22656481211379, 378.99459451203916);
            double3 r1 = double3(40264.166325748447, 66121.069259039446, 160653.31670401874);
            TestUtils.AreEqual(a1 * b1, r1);

            double3 a2 = double3(19.861804256151345, -439.21847292371956, 200.14622530720487);
            double3 b2 = double3(318.32116880934745, 208.1715439335311, 345.88571063889458);
            double3 r2 = double3(6322.432745480568, -91432.787632658525, 69227.719372074862);
            TestUtils.AreEqual(a2 * b2, r2);

            double3 a3 = double3(-178.35696204861483, -285.07807530326681, 56.749516751966212);
            double3 b3 = double3(-149.02886087681577, 293.05592431363459, 423.94813533497427);
            double3 r3 = double3(26580.334883554529, -83543.818859550782, 24058.85180815696);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_mul_wide_scalar()
        {
            double3 a0 = double3(-387.48086828155482, -48.625516675703921, -100.41558151152708);
            double b0 = (367.40878146114233);
            double3 r0 = double3(-142363.87365483146, -17865.441829738833, -36893.566442862175);
            TestUtils.AreEqual(a0 * b0, r0);

            double3 a1 = double3(-161.4535282409999, -198.31901440318626, 413.47737927617379);
            double b1 = (-428.578962764041);
            double3 r1 = double3(69195.585668122541, 84995.357489304486, -177207.70633657655);
            TestUtils.AreEqual(a1 * b1, r1);

            double3 a2 = double3(-216.10473857452382, 18.976513156190776, 89.787349027482492);
            double b2 = (-65.20349958595051);
            double3 r2 = double3(14090.785232165907, -1237.3350677224696, -5854.4493751370483);
            TestUtils.AreEqual(a2 * b2, r2);

            double3 a3 = double3(-356.19757311241585, 394.30371231320487, -428.80947776735269);
            double b3 = (13.606950527805338);
            double3 r3 = double3(-4846.7627554649671, 5365.271106375767, -5834.789349834411);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_mul_scalar_wide()
        {
            double a0 = (468.91594407936373);
            double3 b0 = double3(123.86660796211413, 490.96148060772634, -247.16259181087958);
            double3 r0 = double3(58083.027412463176, 230219.66618577423, -115898.48008010101);
            TestUtils.AreEqual(a0 * b0, r0);

            double a1 = (-176.94950278892622);
            double3 b1 = double3(382.26386874833327, -398.549474663357, 120.56934386145758);
            double3 r1 = double3(-67641.401509188931, 70523.131378468766, -21334.685447871994);
            TestUtils.AreEqual(a1 * b1, r1);

            double a2 = (-263.27587879042881);
            double3 b2 = double3(74.376708303753617, -309.85598554734884, 404.92799944660067);
            double3 r2 = double3(-19581.593240210117, 81577.60689345267, -106607.77490115406);
            TestUtils.AreEqual(a2 * b2, r2);

            double a3 = (-105.62615566403889);
            double3 b3 = double3(243.92625367079222, -291.96407737022457, -92.46494607462779);
            double3 r3 = double3(-25764.992440776936, 30839.043084614834, 9766.7167875455962);
            TestUtils.AreEqual(a3 * b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_div_wide_wide()
        {
            double3 a0 = double3(6.8207170995049182, -338.63085881743154, 497.60438155457587);
            double3 b0 = double3(-352.73601762984697, 302.20974292522749, -489.09516810304262);
            double3 r0 = double3(-0.019336605162511136, -1.1205160215539951, -1.0173978685672489);
            TestUtils.AreEqual(a0 / b0, r0);

            double3 a1 = double3(-491.26991938579357, 173.45471604794955, -441.55652376709344);
            double3 b1 = double3(-380.891595779402, 289.64650525229354, -216.57524715018235);
            double3 r1 = double3(1.2897893385663424, 0.59884967677018452, 2.038813435872012);
            TestUtils.AreEqual(a1 / b1, r1);

            double3 a2 = double3(321.01690331148768, -41.6019933417449, -40.212614316592294);
            double3 b2 = double3(-289.15099658125592, 198.97850022044895, -292.72057856839177);
            double3 r2 = double3(-1.1102050731520718, -0.20907783150266945, 0.137375426467316);
            TestUtils.AreEqual(a2 / b2, r2);

            double3 a3 = double3(-169.79586728373351, -179.33992084271273, -433.40119119798817);
            double3 b3 = double3(9.0584442657690261, -29.890428318591034, 257.63897216396356);
            double3 r3 = double3(-18.744484406155202, 5.9999113740089225, -1.6822035407056666);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_div_wide_scalar()
        {
            double3 a0 = double3(-179.14525779483154, 46.961132786684288, 127.57277470807207);
            double b0 = (-93.365409179295114);
            double3 r0 = double3(1.9187540585915315, -0.50298213438450257, -1.3663815735342255);
            TestUtils.AreEqual(a0 / b0, r0);

            double3 a1 = double3(391.67960924267754, 150.55543119765605, 18.422910937305005);
            double b1 = (461.32760665441288);
            double3 r1 = double3(0.84902703326855167, 0.326352529148422, 0.039934551220356239);
            TestUtils.AreEqual(a1 / b1, r1);

            double3 a2 = double3(169.15858395824148, 121.80905800769528, -22.542152176863567);
            double b2 = (37.5003321345431);
            double3 r2 = double3(4.5108556199272307, 3.2482127777074257, -0.60111873398846682);
            TestUtils.AreEqual(a2 / b2, r2);

            double3 a3 = double3(398.16749901239177, -498.45196341837379, 502.30602597738891);
            double b3 = (-331.00037280237319);
            double3 r3 = double3(-1.2029216029014, 1.5058954743715021, -1.5175391547890955);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_div_scalar_wide()
        {
            double a0 = (451.8446936327241);
            double3 b0 = double3(-95.065177723330066, 207.048737383936, 502.38401603250952);
            double3 r0 = double3(-4.7529989892590958, 2.1823107899221643, 0.89940101438952824);
            TestUtils.AreEqual(a0 / b0, r0);

            double a1 = (62.0412257006584);
            double3 b1 = double3(-110.84549408352257, -332.61274949303493, 224.27937065077913);
            double3 r1 = double3(-0.5597090455829451, -0.18652690191587973, 0.27662475385336061);
            TestUtils.AreEqual(a1 / b1, r1);

            double a2 = (-492.73451804217626);
            double3 b2 = double3(435.03288027040333, 503.81881570435075, 291.34940757013362);
            double3 r2 = double3(-1.1326374175117691, -0.9779994368676399, -1.691215102002791);
            TestUtils.AreEqual(a2 / b2, r2);

            double a3 = (88.024186890583564);
            double3 b3 = double3(328.70278874444909, 50.010147356432981, -509.81615304845207);
            double3 r3 = double3(0.26779263792318542, 1.7601265251873068, -0.17265868561488654);
            TestUtils.AreEqual(a3 / b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_mod_wide_wide()
        {
            double3 a0 = double3(157.55858881657878, 504.93797158866096, 73.007050786636341);
            double3 b0 = double3(180.25016530801088, -41.479829092267835, -308.6731518752282);
            double3 r0 = double3(157.55858881657878, 7.18002248144694, 73.007050786636341);
            TestUtils.AreEqual(a0 % b0, r0);

            double3 a1 = double3(-387.60870975424007, 278.54447830773165, 282.22817314892461);
            double3 b1 = double3(-326.86006203613249, 411.58822674843861, 429.41059680907551);
            double3 r1 = double3(-60.748647718107577, 278.54447830773165, 282.22817314892461);
            TestUtils.AreEqual(a1 % b1, r1);

            double3 a2 = double3(57.086228635667908, -63.974762707936918, -345.26900379046288);
            double3 b2 = double3(471.14820144658358, 226.1443618396969, 423.90749450396163);
            double3 r2 = double3(57.086228635667908, -63.974762707936918, -345.26900379046288);
            TestUtils.AreEqual(a2 % b2, r2);

            double3 a3 = double3(-380.71618407811792, 470.28039787257114, -480.3074555249454);
            double3 b3 = double3(-300.951750657033, 67.241354258377783, -488.69098328458659);
            double3 r3 = double3(-79.7644334210849, 66.832272322304448, -480.3074555249454);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_mod_wide_scalar()
        {
            double3 a0 = double3(42.072420378249376, 313.0502714184347, 111.52063970990514);
            double b0 = (260.27255332668892);
            double3 r0 = double3(42.072420378249376, 52.777718091745783, 111.52063970990514);
            TestUtils.AreEqual(a0 % b0, r0);

            double3 a1 = double3(131.21203214079696, -436.48505970299482, -221.73172031237357);
            double b1 = (-460.44087026102511);
            double3 r1 = double3(131.21203214079696, -436.48505970299482, -221.73172031237357);
            TestUtils.AreEqual(a1 % b1, r1);

            double3 a2 = double3(-316.39089479874394, -238.94258724848862, 335.60093203913459);
            double b2 = (24.183113824661405);
            double3 r2 = double3(-2.0104150781456838, -21.29456282653598, 21.220452318536331);
            TestUtils.AreEqual(a2 % b2, r2);

            double3 a3 = double3(-240.83247792014504, -152.48966867872031, -387.4286050216428);
            double b3 = (-12.394702678730084);
            double3 r3 = double3(-5.3331270242734377, -3.7532365339592957, -3.1928219810101837);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_mod_scalar_wide()
        {
            double a0 = (-162.94581063228929);
            double3 b0 = double3(171.12575991969823, 159.20793659948185, 491.34807061187371);
            double3 r0 = double3(-162.94581063228929, -3.73787403280744, -162.94581063228929);
            TestUtils.AreEqual(a0 % b0, r0);

            double a1 = (-136.53971416155792);
            double3 b1 = double3(84.487527171376883, 414.39111657365743, -85.030597011107318);
            double3 r1 = double3(-52.052186990181042, -136.53971416155792, -51.509117150450606);
            TestUtils.AreEqual(a1 % b1, r1);

            double a2 = (161.98958857450145);
            double3 b2 = double3(-7.6080162560604663, -85.22386912499735, 160.84123547414379);
            double3 r2 = double3(2.2212471972316621, 76.7657194495041, 1.1483531003576672);
            TestUtils.AreEqual(a2 % b2, r2);

            double a3 = (-234.48312078904507);
            double3 b3 = double3(114.87764578446638, -40.548714895056889, -85.743732253901555);
            double3 r3 = double3(-4.7278292201123122, -31.739546313760627, -62.995656281241963);
            TestUtils.AreEqual(a3 % b3, r3);
        }

        [TestCompiler]
        public static void double3_operator_plus()
        {
            double3 a0 = double3(150.59985477784642, -137.85511237841803, 439.0911616939544);
            double3 r0 = double3(150.59985477784642, -137.85511237841803, 439.0911616939544);
            TestUtils.AreEqual(+a0, r0);

            double3 a1 = double3(401.84926075574447, -299.61462010984059, -364.62483113101905);
            double3 r1 = double3(401.84926075574447, -299.61462010984059, -364.62483113101905);
            TestUtils.AreEqual(+a1, r1);

            double3 a2 = double3(444.56690975863808, 188.5903004093982, -458.63783023256707);
            double3 r2 = double3(444.56690975863808, 188.5903004093982, -458.63783023256707);
            TestUtils.AreEqual(+a2, r2);

            double3 a3 = double3(-176.78832515365832, -202.57394585505779, -83.51769761159909);
            double3 r3 = double3(-176.78832515365832, -202.57394585505779, -83.51769761159909);
            TestUtils.AreEqual(+a3, r3);
        }

        [TestCompiler]
        public static void double3_operator_neg()
        {
            double3 a0 = double3(-169.28116782441788, -377.02522366914206, 36.614130752447068);
            double3 r0 = double3(169.28116782441788, 377.02522366914206, -36.614130752447068);
            TestUtils.AreEqual(-a0, r0);

            double3 a1 = double3(-258.38245713821726, 388.94596380225664, 350.96924678933306);
            double3 r1 = double3(258.38245713821726, -388.94596380225664, -350.96924678933306);
            TestUtils.AreEqual(-a1, r1);

            double3 a2 = double3(176.10255464171178, 201.18688664268086, -60.813943175978011);
            double3 r2 = double3(-176.10255464171178, -201.18688664268086, 60.813943175978011);
            TestUtils.AreEqual(-a2, r2);

            double3 a3 = double3(313.88018789602449, 327.17948142028388, 292.367550270803);
            double3 r3 = double3(-313.88018789602449, -327.17948142028388, -292.367550270803);
            TestUtils.AreEqual(-a3, r3);
        }

        [TestCompiler]
        public static void double3_operator_prefix_inc()
        {
            double3 a0 = double3(86.5853612826138, 161.589808777715, 443.92963978458647);
            double3 r0 = double3(87.5853612826138, 162.589808777715, 444.92963978458647);
            TestUtils.AreEqual(++a0, r0);

            double3 a1 = double3(-338.26843587414754, -368.56747858997784, 359.14160864387713);
            double3 r1 = double3(-337.26843587414754, -367.56747858997784, 360.14160864387713);
            TestUtils.AreEqual(++a1, r1);

            double3 a2 = double3(145.02611143189768, 25.361956369766062, -484.20042751925087);
            double3 r2 = double3(146.02611143189768, 26.361956369766062, -483.20042751925087);
            TestUtils.AreEqual(++a2, r2);

            double3 a3 = double3(346.04049341103087, 244.66301571794929, 49.973209165955495);
            double3 r3 = double3(347.04049341103087, 245.66301571794929, 50.973209165955495);
            TestUtils.AreEqual(++a3, r3);
        }

        [TestCompiler]
        public static void double3_operator_postfix_inc()
        {
            double3 a0 = double3(-281.78208912619488, 215.34223971857796, 120.82084923648313);
            double3 r0 = double3(-281.78208912619488, 215.34223971857796, 120.82084923648313);
            TestUtils.AreEqual(a0++, r0);

            double3 a1 = double3(-325.35367003332533, 44.563681384811048, -375.17335360831271);
            double3 r1 = double3(-325.35367003332533, 44.563681384811048, -375.17335360831271);
            TestUtils.AreEqual(a1++, r1);

            double3 a2 = double3(193.36569628183065, -341.15366927774329, -130.47432786341494);
            double3 r2 = double3(193.36569628183065, -341.15366927774329, -130.47432786341494);
            TestUtils.AreEqual(a2++, r2);

            double3 a3 = double3(277.30739582577132, -362.90921490402388, 480.75709866022555);
            double3 r3 = double3(277.30739582577132, -362.90921490402388, 480.75709866022555);
            TestUtils.AreEqual(a3++, r3);
        }

        [TestCompiler]
        public static void double3_operator_prefix_dec()
        {
            double3 a0 = double3(340.00185433961542, 496.07084750387389, 288.38421048241867);
            double3 r0 = double3(339.00185433961542, 495.07084750387389, 287.38421048241867);
            TestUtils.AreEqual(--a0, r0);

            double3 a1 = double3(183.6946252247759, 398.28191751906741, -240.59158407924303);
            double3 r1 = double3(182.6946252247759, 397.28191751906741, -241.59158407924303);
            TestUtils.AreEqual(--a1, r1);

            double3 a2 = double3(15.320201642494794, 311.9143594763774, -305.80371084148237);
            double3 r2 = double3(14.320201642494794, 310.9143594763774, -306.80371084148237);
            TestUtils.AreEqual(--a2, r2);

            double3 a3 = double3(-268.38814676384823, 468.03655383923865, -93.05706147712516);
            double3 r3 = double3(-269.38814676384823, 467.03655383923865, -94.05706147712516);
            TestUtils.AreEqual(--a3, r3);
        }

        [TestCompiler]
        public static void double3_operator_postfix_dec()
        {
            double3 a0 = double3(-148.11175806266806, 252.84978473039803, -106.15790395911688);
            double3 r0 = double3(-148.11175806266806, 252.84978473039803, -106.15790395911688);
            TestUtils.AreEqual(a0--, r0);

            double3 a1 = double3(132.64859277226435, 343.31118575824019, -321.15781441384826);
            double3 r1 = double3(132.64859277226435, 343.31118575824019, -321.15781441384826);
            TestUtils.AreEqual(a1--, r1);

            double3 a2 = double3(450.60180565835992, 425.62580533773905, 269.75451553508378);
            double3 r2 = double3(450.60180565835992, 425.62580533773905, 269.75451553508378);
            TestUtils.AreEqual(a2--, r2);

            double3 a3 = double3(-164.30984576247158, -320.72596064243743, -337.03135673004732);
            double3 r3 = double3(-164.30984576247158, -320.72596064243743, -337.03135673004732);
            TestUtils.AreEqual(a3--, r3);
        }

        [TestCompiler]
        public static void double3_shuffle_result_1()
        {
            double3 a = double3(0, 1, 2);
            double3 b = double3(3, 4, 5);

            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX), (0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY), (1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftZ), (2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX), (3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY), (4));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ), (5));
        }

        [TestCompiler]
        public static void double3_shuffle_result_2()
        {
            double3 a = double3(0, 1, 2);
            double3 b = double3(3, 4, 5);

            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightY), double2(4, 4));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightX), double2(4, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY, ShuffleComponent.RightX), double2(1, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.LeftZ), double2(5, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.LeftY), double2(5, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY, ShuffleComponent.LeftZ), double2(1, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.LeftZ), double2(3, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.LeftX), double2(5, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.RightZ), double2(5, 5));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftY), double2(4, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightZ), double2(4, 5));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.LeftX), double2(5, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightX), double2(4, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.RightY), double2(5, 4));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.LeftX), double2(3, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY, ShuffleComponent.LeftZ), double2(1, 2));
        }

        [TestCompiler]
        public static void double3_shuffle_result_3()
        {
            double3 a = double3(0, 1, 2);
            double3 b = double3(3, 4, 5);

            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY, ShuffleComponent.RightZ, ShuffleComponent.RightX), double3(1, 5, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftX, ShuffleComponent.LeftZ), double3(4, 0, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftZ, ShuffleComponent.RightZ, ShuffleComponent.RightX), double3(2, 5, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftX, ShuffleComponent.LeftY), double3(4, 0, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.RightY, ShuffleComponent.LeftZ), double3(5, 4, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftZ, ShuffleComponent.LeftX, ShuffleComponent.LeftY), double3(2, 0, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftZ, ShuffleComponent.RightY, ShuffleComponent.RightX), double3(2, 4, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftZ, ShuffleComponent.LeftY, ShuffleComponent.RightZ), double3(2, 1, 5));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightY, ShuffleComponent.RightZ), double3(4, 4, 5));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightX, ShuffleComponent.LeftY), double3(4, 3, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.RightZ, ShuffleComponent.LeftX), double3(5, 5, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.LeftY, ShuffleComponent.RightX), double3(5, 1, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftY, ShuffleComponent.RightZ), double3(4, 1, 5));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftZ, ShuffleComponent.RightX, ShuffleComponent.RightY), double3(2, 3, 4));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftX, ShuffleComponent.RightY), double3(4, 0, 4));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftX, ShuffleComponent.RightZ), double3(4, 0, 5));
        }

        [TestCompiler]
        public static void double3_shuffle_result_4()
        {
            double3 a = double3(0, 1, 2);
            double3 b = double3(3, 4, 5);

            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY, ShuffleComponent.LeftZ, ShuffleComponent.RightX, ShuffleComponent.LeftY), double4(1, 2, 3, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftZ, ShuffleComponent.RightZ, ShuffleComponent.RightY), double4(4, 2, 5, 4));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightY, ShuffleComponent.RightZ, ShuffleComponent.LeftY), double4(4, 4, 5, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.RightX, ShuffleComponent.LeftY, ShuffleComponent.LeftY), double4(3, 3, 1, 1));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftY, ShuffleComponent.LeftY, ShuffleComponent.LeftX), double4(4, 1, 1, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.RightY, ShuffleComponent.RightX, ShuffleComponent.RightZ), double4(3, 4, 3, 5));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY, ShuffleComponent.RightZ, ShuffleComponent.LeftX, ShuffleComponent.RightZ), double4(1, 5, 0, 5));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.LeftX, ShuffleComponent.LeftX, ShuffleComponent.LeftX), double4(4, 0, 0, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.RightZ, ShuffleComponent.LeftZ, ShuffleComponent.LeftX), double4(3, 5, 2, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightY, ShuffleComponent.RightX, ShuffleComponent.LeftY, ShuffleComponent.RightX), double4(4, 3, 1, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftX, ShuffleComponent.LeftZ, ShuffleComponent.RightZ, ShuffleComponent.LeftX), double4(0, 2, 5, 0));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftY, ShuffleComponent.RightY, ShuffleComponent.RightZ, ShuffleComponent.RightZ), double4(1, 4, 5, 5));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftZ, ShuffleComponent.RightX, ShuffleComponent.LeftY, ShuffleComponent.RightX), double4(2, 3, 1, 3));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightX, ShuffleComponent.LeftX, ShuffleComponent.LeftY, ShuffleComponent.LeftZ), double4(3, 0, 1, 2));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.RightZ, ShuffleComponent.RightX, ShuffleComponent.LeftX, ShuffleComponent.RightY), double4(5, 3, 0, 4));
            TestUtils.AreEqual(shuffle(a, b, ShuffleComponent.LeftZ, ShuffleComponent.RightZ, ShuffleComponent.LeftX, ShuffleComponent.RightY), double4(2, 5, 0, 4));
        }


    }
}
